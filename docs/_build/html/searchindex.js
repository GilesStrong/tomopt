Search.setIndex({"docnames": ["index", "tomopt", "tomopt.inference", "tomopt.muon", "tomopt.optimisation", "tomopt.optimisation.callbacks", "tomopt.volume"], "filenames": ["index.rst", "tomopt.rst", "tomopt.inference.rst", "tomopt.muon.rst", "tomopt.optimisation.rst", "tomopt.optimisation.callbacks.rst", "tomopt.volume.rst"], "titles": ["TomOpt: Differential Muon Tomography Optimisation", "tomopt package", "tomopt.inference package", "tomopt.muon package", "tomopt.optimisation package", "tomopt.optimisation.callbacks package", "tomopt.volume package"], "terms": {"instal": 0, "test": [0, 2, 5], "extern": 0, "repo": 0, "author": [0, 2], "volum": [0, 1, 3, 5], "infer": [0, 1, 3, 5, 6], "plot": [0, 1, 2, 5, 6], "benchmark": [0, 1], "muon": [1, 2, 5, 6], "optimis": [1, 6], "class_to_x0pr": 1, "arrai": [1, 3, 5], "id2x0": 1, "sourc": [1, 2, 3, 5, 6], "convert": [1, 2, 5, 6], "class": [1, 2, 3, 5, 6], "x0": [1, 2, 5, 6], "predict": [1, 2, 5], "us": [1, 2, 3, 5, 6], "map": [1, 3, 5, 6], "defin": [1, 3, 5, 6], "paramet": [1, 2, 3, 5, 6], "ndarrai": [1, 3, 5], "integ": [1, 2], "id": [1, 5, 6], "dict": [1, 2, 3, 5, 6], "int": [1, 2, 3, 5, 6], "float": [1, 2, 3, 5, 6], "valu": [1, 2, 3, 5, 6], "return": [1, 2, 3, 5, 6], "type": [1, 2, 3, 5, 6], "new": [1, 2, 3, 5, 6], "jacobian": 1, "y": [1, 2, 3, 6], "x": [1, 2, 3, 6], "create_graph": 1, "fals": [1, 3, 5, 6], "allow_unus": 1, "true": [1, 2, 3, 5, 6], "comput": [1, 2, 3, 5, 6], "dy": [1, 6], "dx": [1, 6], "respect": 1, "variabl": [1, 2, 3, 6], "can": [1, 2, 3, 5, 6], "have": [1, 2, 3, 5, 6], "multipl": [1, 2, 5, 6], "element": [1, 2, 3, 6], "If": [1, 2, 3, 5, 6], "ha": [1, 2, 3, 5, 6], "i": [1, 2, 3, 5, 6], "vectoris": 1, "via": [1, 2, 3, 5, 6], "vmap": 1, "tensor": [1, 2, 3, 5, 6], "differenti": [1, 2, 5, 6], "depend": [1, 2], "bool": [1, 2, 5, 6], "graph": 1, "deriv": 1, "construct": 1, "allow": [1, 2, 5, 6], "higher": [1, 2, 5, 6], "order": [1, 2, 5, 6], "product": [1, 2], "default": [1, 3, 5, 6], "specifi": [1, 3, 5, 6], "input": 1, "were": [1, 2, 3], "when": [1, 2, 5, 6], "output": 1, "therefor": [1, 6], "grad": [1, 2], "alwai": [1, 2, 6], "shape": [1, 3], "x0_from_mixtur": 1, "densiti": 1, "weight_frac": 1, "none": [1, 2, 3, 5, 6], "volume_frac": 1, "mixtur": 1, "non": [1, 6], "chemic": 1, "bond": 1, "materi": [1, 2, 5, 6], "base": [1, 2, 3, 5, 6], "http": [1, 2, 5, 6], "cd": 1, "cern": 1, "ch": 1, "record": [1, 2, 3, 5, 6], "1279627": 1, "file": [1, 5], "ph": 1, "ep": 1, "tech": 1, "note": [1, 2], "2010": 1, "013": 1, "pdf": [1, 2, 6], "union": [1, 3, 5, 6], "list": [1, 2, 3, 5, 6], "metr": [1, 2, 3, 5, 6], "kg": 1, "m": [1, 3, 6], "3": [1, 2, 3, 6], "rel": [1, 2, 6], "amount": [1, 2, 3], "each": [1, 2, 3, 5, 6], "weight": [1, 2, 6], "The": [1, 2, 5, 6], "x0targs_to_classtarg": 1, "x02id": [1, 5], "target": [1, 2, 5, 6], "To": [1, 2], "account": [1, 2, 5, 6], "point": [1, 2, 3, 5, 6], "precis": [1, 2, 3, 5, 6], "ar": [1, 2, 3, 5, 6], "which": [1, 2, 3, 5, 6], "closest": [1, 2], "kei": [1, 3], "thi": [1, 2, 3, 5, 6], "mean": [1, 2, 6], "method": [1, 2, 3, 5, 6], "cannot": [1, 2], "detect": [1, 5, 6], "miss": 1, "from": [1, 2, 3, 5, 6], "even": [1, 2, 5], "isn": 1, "t": [1, 2, 3, 6], "modifi": [1, 3], "place": [1, 2, 3, 6], "genscatterbatch": 2, "mu": [2, 5, 6], "scatterbatch": 2, "inform": [2, 3, 6], "hit": [2, 3, 5, 6], "incom": [2, 5, 6], "outgo": 2, "trajectori": [2, 3, 6], "fit": [2, 5, 6], "intend": [2, 6], "diagnost": 2, "purpos": 2, "onli": [2, 3, 5, 6], "track": [2, 5], "carri": 2, "gradient": [2, 5], "w": [2, 3, 6], "r": [2, 3, 6], "detector": [2, 3, 5, 6], "except": [2, 3, 6], "z": [2, 3, 5, 6], "posit": [2, 3, 5, 6], "linear": 2, "perform": [2, 6], "separ": 2, "all": [2, 3, 5, 6], "associ": [2, 3, 5], "layer": [2, 3, 5], "group": [2, 6], "indic": [2, 5, 6], "po": [2, 3, 6], "attribut": [2, 3, 5, 6], "current": [2, 3, 5, 6], "expect": [2, 6], "abov": [2, 3, 6], "passiv": [2, 3, 5, 6], "those": [2, 3, 5, 6], "below": [2, 3, 6], "an": [2, 5, 6], "analyt": 2, "likelihood": 2, "minimis": 2, "uncertainti": 2, "consid": [2, 5], "doe": [2, 3, 6], "e": [2, 3, 5, 6], "g": [2, 3, 5, 6], "third": 2, "set": [2, 3, 5, 6], "sinc": [2, 6], "split": 2, "n_hits_abov": 2, "One": 2, "instanc": [2, 6], "should": [2, 3, 5, 6], "creat": [2, 3, 5, 6], "muonbatch": [2, 3, 5, 6], "As": [2, 5], "part": [2, 5, 6], "initialis": [2, 3, 5, 6], "filter": 2, "_filter_scatt": 2, "avoid": [2, 5], "nan": [2, 5, 6], "inf": 2, "result": [2, 3, 6], "direct": [2, 3], "chang": [2, 3, 5, 6], "mani": [2, 3], "requir": [2, 3, 6], "further": 2, "downstream": 2, "lazi": 2, "basi": 2, "memois": 2, "first": [2, 5], "request": 2, "store": [2, 3, 6], "case": 2, "dtheta": [2, 3], "dphi": 2, "total": [2, 5, 6], "under": [2, 6], "assumpt": 2, "small": [2, 6], "angular": [2, 3], "necessari": 2, "here": [2, 5, 6], "loss": [2, 4, 5], "undergo": [2, 6], "theta": [2, 3, 6], "phi": [2, 3, 6], "0": [2, 3, 5, 6], "pi": [2, 3], "neg": [2, 3], "becom": 2, "one": [2, 5, 6], "tell": 2, "whether": [2, 5, 6], "instead": [2, 3, 5, 6], "larg": [2, 3, 5], "occur": 2, "total_scatt": 2, "quadratur": 2, "sum": [2, 6], "three": [2, 6], "both": [2, 6], "hypothes": 2, "final": [2, 5], "chosen": [2, 6], "hypothesi": 2, "been": [2, 5], "found": [2, 6], "good": 2, "through": [2, 3, 5, 6], "travel": [2, 3], "_compute_track": 2, "object": [2, 3, 5, 6], "effici": [2, 3, 5, 6], "static": [2, 3, 5, 6], "_compute_dtheta_dphi_scatt": 2, "theta_in": 2, "phi_in": 2, "theta_out": 2, "phi_out": 2, "n": [2, 3, 5, 6], "1": [2, 3, 5, 6], "angl": [2, 3, 6], "str": [2, 3, 5, 6], "dictionari": [2, 3, 5, 6], "_compute_out_var_unc": 2, "var": 2, "due": 2, "error": [2, 5], "propag": [2, 3, 5, 6], "triangl": 2, "matrix": 2, "assum": [2, 6], "zero": [2, 5, 6], "off": [2, 3], "diagon": 2, "warn": 2, "un": 2, "correl": 2, "probabl": [2, 6], "ok": 2, "behaviour": 2, "_compute_phi": 2, "xy": [2, 3, 5, 6], "compon": [2, 5, 6], "vector": 2, "_compute_scatt": [2, 6], "normal": [2, 6], "them": [2, 5, 6], "extract": 2, "handl": 2, "locat": [2, 5, 6], "adapt": 2, "misc": 2, "3334866": 2, "titl": 2, "between": [2, 3, 5, 6], "two": [2, 6], "line": 2, "brian": 2, "math": 2, "stackexchang": 2, "com": 2, "user": [2, 5, 6], "72614": 2, "howpublish": 2, "mathemat": 2, "stack": [2, 3, 6], "exchang": 2, "url": 2, "q": 2, "version": 2, "2019": [2, 6], "08": 2, "26": 2, "eprint": 2, "_compute_theta": 2, "xyz": [2, 3, 5, 6], "_compute_theta_msc": 2, "p": [2, 3, 5], "cosin": 2, "dot": 2, "2": [2, 3, 6], "accord": [2, 3, 5, 6], "resolut": [2, 5, 6], "_compute_xyz_in": 2, "level": [2, 6], "top": [2, 6], "_compute_xyz_out": 2, "bottom": [2, 5, 6], "_cross_track": 2, "option": [2, 3, 5, 6], "_dphi": 2, "_dphi_unc": 2, "_dtheta": 2, "_dtheta_unc": 2, "_dtheta_xi": 2, "_dtheta_xy_unc": 2, "_dxy": 2, "_dxy_unc": 2, "_extract_hit": 2, "take": [2, 6], "combin": [2, 5], "singl": [2, 3, 5, 6], "might": 2, "seem": 2, "heavi": 2, "hand": 2, "invalid": 2, "extrem": [2, 3], "spoil": 2, "other": [2, 5, 6], "remov": [2, 3], "ani": [2, 3, 5, 6], "least": [2, 3], "high": [2, 5], "some": [2, 5, 6], "configur": [2, 6], "tini": 2, "best": 2, "manual": [2, 3, 6], "unneed": 2, "gain": 2, "increas": [2, 5], "number": [2, 3, 5, 6], "avail": [2, 5, 6], "criteria": 2, "parallel": 2, "far": 2, "its": [2, 3, 5, 6], "1e10": 2, "_gen_hit": 2, "_hit_eff": 2, "_hit_unc": 2, "_phi_in": 2, "_phi_in_unc": 2, "_phi_out": 2, "_phi_out_unc": 2, "_poca_xyz": 2, "_poca_xyz_unc": 2, "_reco_hit": 2, "_set_dtheta_dphi_scatt": 2, "simultan": 2, "done": 2, "_theta_in": 2, "_theta_in_unc": 2, "_theta_out": 2, "_theta_out_unc": 2, "_theta_xy_in": 2, "_theta_xy_in_unc": 2, "_theta_xy_out": 2, "_theta_xy_out_unc": 2, "_total_scatt": 2, "_total_scatter_unc": 2, "_track_coef": 2, "_track_in": 2, "_track_out": 2, "_track_start_in": 2, "_track_start_out": 2, "_xyz_in": 2, "_xyz_in_unc": 2, "_xyz_out": 2, "_xyz_out_unc": 2, "properti": [2, 3, 6], "above_gen_hit": 2, "above_hit_eff": 2, "eff": [2, 6], "above_hit_unc": 2, "above_hit": 2, "below_gen_hit": 2, "below_hit_eff": 2, "below_hit_unc": 2, "below_hit": 2, "delta": 2, "dphi_unc": 2, "dtheta_unc": 2, "dtheta_xi": [2, 3], "theta_xi": [2, 3], "zx": 2, "zy": 2, "plane": [2, 3, 6], "dtheta_xy_unc": 2, "dxy": 2, "distanc": [2, 3, 5, 6], "poca": [2, 5], "dxy_unc": 2, "gen_hit": 2, "get_muon_trajectori": 2, "unc": 2, "lw": [2, 6], "whilst": [2, 5, 6], "No": 2, "maximis": 2, "length": [2, 5, 6], "width": [2, 6], "start": [2, 3, 5, 6], "initi": [2, 3, 5, 6], "vec": 2, "get_scatter_mask": 2, "boolean": [2, 3, 5, 6], "where": [2, 3, 5, 6], "within": [2, 3, 5, 6], "hit_eff": 2, "hit_unc": 2, "get_hit": [2, 3, 6], "per": [2, 5, 6], "n_hits_below": 2, "phi_in_unc": 2, "phi_out_unc": 2, "plot_scatt": 2, "idx": 2, "represent": [2, 5], "index": [2, 3, 6], "poca_xyz": 2, "poca_xyz_unc": 2, "reco_hit": 2, "theta_in_unc": 2, "theta_msc": 2, "theta_msc_unc": 2, "theta_out_unc": 2, "theta_xy_in": 2, "decompos": 2, "theta_xy_in_unc": 2, "theta_xy_out": 2, "theta_xy_out_unc": 2, "total_scatter_unc": 2, "track_in": 2, "track_out": 2, "track_start_in": 2, "track_start_out": 2, "xyz_in": 2, "xyz_in_unc": 2, "xyz_out": 2, "xyz_out_unc": 2, "absintclassifierfromx0": 2, "partial_x0_inferr": 2, "output_prob": 2, "class2float": 2, "absvolumeinferr": 2, "abstract": [2, 3, 6], "multiclass": 2, "classif": 2, "voxelwis": [2, 5], "inherit": [2, 3, 5, 6], "must": [2, 5, 6], "provid": [2, 3, 5, 6], "wai": 2, "dimens": 2, "basic": 2, "inferr": [2, 5], "raw": 2, "most": 2, "In": [2, 3, 5], "latter": [2, 6], "process": [2, 5, 6], "function": [2, 3, 5, 6], "absx0inferr": 2, "partial": 2, "instati": 2, "pass": [2, 3, 5, 6], "probabilit": 2, "otherwis": [2, 5, 6], "argmax": 2, "over": [2, 3, 5, 6], "last": [2, 3, 5], "callabl": [2, 6], "_abc_impl": [2, 5, 6], "_abc_data": [2, 5, 6], "_reset_var": 2, "reset": [2, 5], "made": [2, 5], "ad": [2, 3, 5, 6], "batch": [2, 3, 5, 6], "add_scatt": 2, "append": [2, 5, 6], "vairabl": 2, "get_predict": 2, "call": [2, 3, 5, 6], "": [2, 3, 5, 6], "up": [2, 5, 6], "compute_effici": 2, "compuat": 2, "implement": [2, 3, 5, 6], "contain": [2, 3, 5, 6], "whose": 2, "predicion": 2, "dure": [2, 5, 6], "inv_weight": 2, "pred": [2, 5], "x02prob": 2, "vox_pr": 2, "overrid": [2, 3, 5, 6], "fed": 2, "given": [2, 3], "individu": [2, 6], "accompani": 2, "invers": 2, "design": [2, 5, 6], "divid": 2, "targ": [2, 5], "tupl": [2, 3, 5, 6], "everi": [2, 3, 5, 6], "voxel": [2, 5, 6], "approach": [2, 6], "assign": [2, 5, 6], "entireti": 2, "pdg": [2, 6], "model": [2, 3, 5, 6], "describ": [2, 6], "lbl": [2, 6], "gov": [2, 6], "review": [2, 6], "rpp2018": [2, 6], "rev": [2, 6], "passag": [2, 6], "particl": [2, 6], "matter": [2, 6], "onc": [2, 3, 5], "proce": [2, 6], "thusli": 2, "For": [2, 3, 6], "p_ij": 2, "wa": [2, 5], "j": 2, "These": 2, "integr": 2, "uncorrel": [2, 6], "gaussian": [2, 6], "centr": [2, 6], "scale": 2, "equal": [2, 3, 6], "multipli": [2, 6], "e_i": 2, "w_ij": 2, "give": 2, "x_0": 2, "left": [2, 6], "frac": 2, "0136": 2, "mathrm": 2, "rm": 2, "right": 2, "co": 2, "bar": 2, "_": 2, "tot": 2, "differ": [2, 3, 5, 6], "whole": 2, "popul": 2, "rmss": 2, "term": 2, "side": 2, "equat": 2, "addit": [2, 3], "varianc": 2, "squar": [2, 6], "x0_j": 2, "NOT": [2, 3, 6], "natur": 2, "log": [2, 5], "simplifi": 2, "code": 2, "reli": [2, 6], "heavili": 2, "care": [2, 6], "privat": 2, "_combine_scatt": 2, "data": [2, 4, 5, 6], "so": [2, 5], "entri": 2, "out": 2, "aid": 2, "pair": [2, 3, 5], "retriev": [2, 3, 5, 6], "_get_voxel_zxy_x0_pred_unc": 2, "incorrect": 2, "todo": [2, 5, 6], "correct": [2, 6], "incredibli": 2, "slow": 2, "recommend": [2, 6], "_get_voxel_zxy_x0_pr": 2, "spread": 2, "_muon_effici": 2, "_muon_probs_per_voxel_zxi": 2, "_muon_scatter_var_unc": 2, "_muon_scatter_var": 2, "_n_mu": 2, "_set_var_dimens": 2, "_var_order_sz": 2, "tot_scatt": 2, "mom": [2, 3, 6], "_vox_zxy_x0_pred_unc": 2, "_vox_zxy_x0_pr": 2, "_weighted_mean": 2, "wgt": 2, "row": 2, "_weighted_rm": 2, "root": 2, "muon_effici": 2, "muon_mom": 2, "momenta": [2, 3], "muon_mom_unc": 2, "muon_poca_xyz": 2, "muon_poca_xyz_unc": 2, "muon_probs_per_voxel_zxi": 2, "don": 2, "muon_theta_in": 2, "muon_theta_in_unc": 2, "muon_theta_out": 2, "muon_theta_out_unc": 2, "muon_total_scatt": 2, "muon_total_scatter_unc": 2, "n_mu": 2, "includ": [2, 5, 6], "vox_zxy_x0_pred_unc": 2, "Not": 2, "long": [2, 6], "calcul": 2, "unit": [2, 5, 6], "vox_zxy_x0_pr": 2, "x0_from_scatt": 2, "deltaz": 2, "invert": 2, "height": [2, 6], "momentum": [2, 3, 5, 6], "estim": 2, "denseblockclassifierfromx0": 2, "n_block_voxel": 2, "use_avgpool": 2, "cut_coef": 2, "10000": 2, "ratio_offset": 2, "ratio_coef": 2, "presenc": 2, "denser": 2, "transform": [2, 5], "wise": [2, 5], "binari": 2, "statist": 2, "dens": 2, "block": [2, 6], "against": [2, 5], "light": 2, "background": 2, "bkg": 2, "blk": 2, "sigma": [2, 6], "b": 2, "lowest": [2, 6], "remain": [2, 6], "rescal": [2, 6], "coeffici": [2, 5, 6], "offset": 2, "constrain": 2, "beween": 2, "present": [2, 5], "nearer": 2, "form": [2, 6], "contigu": [2, 6], "blur": 2, "stride": 2, "kernel": 2, "size": [2, 6], "averag": [2, 5], "pool": 2, "actual": [2, 6], "cut": 2, "sigmoid": [2, 6], "kth": 2, "statisitc": 2, "also": [2, 3, 6], "occupi": [2, 6], "wether": 2, "prediciton": 2, "sharp": 2, "sharper": [2, 5, 6], "constant": [2, 3], "ratio": [2, 6], "scatter_batch": 2, "panelx0inferr": 2, "paneldetectorlay": [2, 5, 6], "absmuongener": [3, 5], "x_rang": 3, "y_rang": 3, "fixed_mom": 3, "5": [3, 6], "energy_rang": 3, "500": 3, "theta_rang": 3, "2217304763960306": 3, "core": 3, "flux": 3, "generate_set": 3, "kinemat": 3, "sampl": [3, 5, 6], "uniformli": 3, "region": 3, "rang": [3, 5, 6], "absolut": [3, 6], "refer": [3, 6], "frame": [3, 6], "gev": 3, "radian": 3, "_muon_mass2": 3, "01116369210198225": 3, "_n_bins_energi": 3, "200": 3, "_n_bins_theta": 3, "energi": 3, "suppli": [3, 6], "classmethod": 3, "from_volum": 3, "min_angl": 3, "2617993877991494": 3, "heurist": 3, "d": 3, "balanc": 3, "trade": 3, "realism": 3, "minimum": [3, 6], "boundari": [3, 5, 6], "would": [3, 6], "directli": 3, "toward": 3, "n_muon": 3, "rank": 3, "2pi": 3, "muongenerator2015": 3, "guan": 3, "et": 3, "al": 3, "2015": 3, "arxiv": [3, 5], "1509": 3, "06176": 3, "p1": 3, "102573": 3, "p2": 3, "068287": 3, "p3": 3, "958633": 3, "p4": 3, "0407253": 3, "p5": 3, "817285": 3, "gaisser": 3, "formula": 3, "cosmic": 3, "np": 3, "incid": 3, "muongenerator2016": 3, "shukla": 3, "sanskrith": 3, "2018": 3, "1606": 3, "06907": 3, "e_0": 3, "87": 3, "e_c": 3, "i_0": 3, "88": 3, "38": 3, "1938": 3, "rod": 3, "174": 3, "epinv": 3, "00117096018735363": 3, "xy_p_theta_phi": [3, 5], "init_z": 3, "devic": [3, 6], "cpu": [3, 6], "own": 3, "coordin": 3, "axi": [3, 6], "upward": 3, "mai": [3, 5, 6], "automat": [3, 5, 6], "anticlockwis": 3, "updat": [3, 5, 6], "propagate_dz_dz": 3, "dz": 3, "propagate_dz_d": 3, "scatter_dxi": 3, "dx_vol": [3, 6], "dy_vol": [3, 6], "mask": [3, 6], "shift": 3, "scatter_dtheta_dphi": 3, "dtheta_vol": [3, 6], "dphi_vol": [3, 6], "alter": 3, "eventu": 3, "extend": [3, 5], "about": [3, 5], "reco_mom": 3, "howev": [3, 6], "simul": [3, 6], "measur": 3, "By": [3, 6], "snapshot_xyz": 3, "time": [3, 6], "xyz_hist": 3, "append_hit": 3, "_hit": 3, "_keep_mask": 3, "_mom": 3, "_phi": 3, "_theta": 3, "_x": 3, "_xy": 3, "_xyz": 3, "_y": 3, "_z": 3, "reco_xi": [3, 6], "gen_xi": [3, 6], "either": [3, 5, 6], "copi": 3, "detach": 3, "clone": 3, "theta_ref": 3, "compar": 3, "dtheta_x": 3, "theta_ref_x": 3, "theta_x": [3, 6], "dtheta_i": 3, "theta_ref_i": 3, "theta_i": [3, 6], "filter_muon": 3, "keep_mask": 3, "along": 3, "xy_low": 3, "xy_high": 3, "eas": 3, "n_hit": 3, "lower": [3, 5, 6], "limit": [3, 5], "upper": 3, "get_xy_mask": [3, 6], "correspond": [3, 6], "p_dim": 3, "ph_dim": 3, "phi_from_theta_xi": 3, "work": 3, "xz": 3, "yz": 3, "anti": 3, "clockwis": 3, "propagate_d": 3, "flight": [3, 6], "move": [3, 5, 6], "propagate_dz": 3, "afterward": [3, 6], "thei": [3, 5, 6], "downward": 3, "remove_upwards_muon": 3, "after": [3, 5, 6], "scatter": [3, 5, 6], "run": [3, 5, 6], "make": [3, 5, 6], "sure": 3, "complet": [3, 5], "longer": 3, "scatter_dtheta_xi": 3, "dtheta_x_vol": [3, 6], "dtheta_y_vol": [3, 6], "scatter_dxyz": 3, "dz_vol": [3, 6], "displac": [3, 6], "th_dim": 3, "4": [3, 6], "theta_from_theta_xi": 3, "theta_x_from_theta_phi": 3, "theta_y_from_theta_phi": 3, "upwards_muon": 3, "x_dim": 3, "y_dim": 3, "z_dim": 3, "callback": 4, "wrapper": [4, 5], "valid": 5, "absvolumewrapp": [5, 6], "interject": 5, "variou": [5, 6], "do": [5, 6], "noth": [5, 6], "pleas": [5, 6], "check": [5, 6], "see": [5, 6], "exactli": 5, "write": 5, "volumewrapp": [5, 6], "Their": 5, "fit_param": 5, "fitparam": 5, "style": 5, "It": [5, 6], "read": 5, "rather": [5, 6], "than": [5, 6], "on_": 5, "_begin": 5, "_end": 5, "full": [5, 6], "loop": [5, 6], "set_wrapp": 5, "on_train_begin": 5, "epoch": 5, "n_epoch": 5, "state": 5, "train": [5, 6], "on_epoch_begin": 5, "enumer": 5, "trn_passiv": 5, "passive_b": 5, "on_volume_batch_begin": 5, "load": [5, 6], "on_volume_begin": 5, "muon_batch": 5, "n_mu_per_volum": 5, "mu_b": 5, "on_mu_batch_begin": 5, "irradi": 5, "on_scatter_end": 5, "on_mu_batch_end": 5, "on_x0_pred_begin": 5, "overal": 5, "on_x0_pred_end": 5, "cost": [5, 6], "add": [5, 6], "on_volume_batch_end": 5, "on_backwards_begin": 5, "backpropag": 5, "on_backwards_end": 5, "viii": 5, "ensur": [5, 6], "physic": [5, 6], "absdetectorlay": [5, 6], "conform_detector": [5, 6], "viv": 5, "len": 5, "break": 5, "on_epoch_end": 5, "val_pass": 5, "on_train_end": 5, "yet": 5, "begin": [5, 6], "end": 5, "on_pred_begin": 5, "mode": [5, 6], "on_pred_end": 5, "finish": 5, "latest": 5, "on_step_end": 5, "layout": [5, 6], "on_volume_end": 5, "befor": 5, "cycliccallback": 5, "muonresampl": 5, "resampl": 5, "impact": 5, "check_mu_batch": 5, "determin": 5, "prior": [5, 6], "realist": 5, "gen": 5, "until": 5, "gener": [5, 6], "replac": 5, "hitrecord": 5, "scatterrecord": 5, "get_record": 5, "plot_hit_dens": 5, "distinct": 5, "_to_df": 5, "save": 5, "panda": 5, "datafram": 5, "insid": [5, 6], "plot_scatter_dens": 5, "_reset": 5, "prepar": [5, 6], "as_df": 5, "access": 5, "evalmetr": 5, "lower_metric_bett": 5, "name": 5, "main_metr": 5, "metric": 5, "metriclogg": 5, "live": 5, "feedback": 5, "main": [5, 6], "better": [5, 6], "get_metr": 5, "nomorenan": 5, "introduc": 5, "need": [5, 6], "heatmapgif": 5, "gif_filenam": 5, "heatmap": 5, "gif": 5, "savenam": 5, "savepath": 5, "_create_gif": 5, "imag": 5, "_plot_curr": 5, "optimisation_histori": 5, "gif_length": 5, "10": [5, 6], "show_plot": 5, "show": 5, "varieti": 5, "help": 5, "highlight": 5, "problem": 5, "hyper": 5, "without": 5, "print": 5, "histori": 5, "get_loss_histori": 5, "addition": 5, "control": 5, "second": 5, "notebook": [5, 6], "_build_grid_spec": 5, "gridspec": 5, "snapshot": 5, "_prep_plot": 5, "_snapshot_monitor": 5, "cat_palett": 5, "tab10": 5, "get": 5, "get_result": 5, "loaded_best": 5, "h_mid": 5, "8": 5, "lbl_col": 5, "black": 5, "lbl_sz": 5, "24": 5, "leg_sz": 5, "16": 5, "info": 5, "clean": 5, "grab": 5, "sub": [5, 6], "print_loss": 5, "rc": 5, "patch": 5, "edgecolor": 5, "whitegrid": 5, "tk_col": 5, "tk_sz": 5, "update_plot": 5, "w_mid": 5, "14": 5, "222222222222221": 5, "panelmetriclogg": 5, "logger": 5, "_set_axes_label": 5, "clear": 5, "onecycl": 5, "opt_nam": 5, "warmup_length": 5, "init_lr": 5, "init_mom": 5, "mid_lr": 5, "mid_mom": 5, "final_lr": 5, "final_mom": 5, "absoptschedul": 5, "smith": 5, "cycl": 5, "evolut": 5, "lr": 5, "beta_1": 5, "org": 5, "ab": 5, "1803": 5, "09820": 5, "warmup": 5, "phase": 5, "learn": [5, 6], "rate": [5, 6], "decreas": [5, 6], "stabilis": 5, "converg": 5, "instanti": [5, 6], "argument": 5, "anneal": [5, 6], "affect": [5, 6], "schedul": 5, "low": [5, 6], "nomin": [5, 6], "moder": 5, "_activ": 5, "inter_cnt": 5, "predhandl": 5, "collect": 5, "numpi": 5, "get_pr": 5, "save2hdf5predhandl": 5, "path": [5, 6], "use_volume_target": 5, "overwrit": 5, "compress": 5, "lzf": 5, "volumetargetpredhandl": 5, "hdf5": 5, "cach": 5, "written": 5, "increment": 5, "lookup": [5, 6], "exist": 5, "same": [5, 6], "string": [5, 6], "_open_fil": 5, "_write_data": 5, "costcoefwarmup": 5, "n_warmup": 5, "warmupcallback": 5, "more": [5, 6], "stabl": 5, "absdetectorloss": 5, "sever": 5, "warm": 5, "kept": 5, "fix": [5, 6], "wait": 5, "activ": 5, "enough": 5, "past": 5, "median": 5, "paneloptconfig": 5, "xy_pos_r": 5, "z_pos_rat": 5, "xy_span_r": 5, "budget_r": 5, "desir": 5, "step": [5, 6], "cours": 5, "suitabl": 5, "panel": 5, "expand": 5, "fraction": [5, 6], "budget": [5, 6], "postwarmupcallback": 5, "obejct": 5, "check_warmup": 5, "act": [5, 6], "prevent": 5, "flag": 5, "warmup_act": 5, "super": 5, "next": [5, 6], "skip": 5, "unset": 5, "panelupdatelimit": 5, "max_xy_step": 5, "max_z_step": 5, "max_xy_span_step": 5, "maximum": [5, 6], "being": [5, 6], "anomol": 5, "enact": 5, "hard": 5, "clamp": 5, "xy_span": [5, 6], "paramat": 5, "goe": 5, "sigmoidpanelsmoothnessschedul": [5, 6], "smooth_rang": 5, "smooth": [5, 6], "sigmoiddetectorpanel": [5, 6], "unphys": 5, "sensit": [5, 6], "outsid": [5, 6], "edg": [5, 6], "close": 5, "resembl": 5, "still": 5, "A": [5, 6], "appropri": 5, "come": 5, "_set_smooth": 5, "At": 5, "detectorheatmap": 6, "re": 6, "init_xyz": 6, "init_xy_span": 6, "m2_cost": 6, "realistic_valid": 6, "n_cluster": 6, "30": 6, "_backward_hook": 6, "_buffer": 6, "_forward_hook": 6, "_forward_pre_hook": 6, "_is_full_backward_hook": 6, "_load_state_dict_post_hook": 6, "_load_state_dict_pre_hook": 6, "_modul": 6, "_non_persistent_buffers_set": 6, "_paramet": 6, "_state_dict_hook": 6, "assign_budget": 6, "clamp_param": 6, "musigz_low": 6, "musigz_high": 6, "get_cost": 6, "get_effici": 6, "as_2d": 6, "get_resolut": 6, "plot_map": 6, "bpixel": 6, "bsavefig": 6, "filenam": 6, "abslay": 6, "oper": 6, "_n_cost": 6, "learnabl": 6, "how": 6, "type_label": 6, "encod": 6, "extra": 6, "pure": 6, "togeth": 6, "span": 6, "meter": 6, "ax": 6, "divis": 6, "correctli": 6, "relat": 6, "proper": 6, "determinist": 6, "currenc": 6, "lie": 6, "etc": 6, "forward": 6, "get_lw_z_siz": 6, "detectorpanel": 6, "modulelist": 6, "zeroth": 6, "highest": 6, "necessarili": 6, "investig": 6, "bound": 6, "get_devic": 6, "helper": 6, "rais": 6, "get_panel_zord": 6, "rad_length": 6, "yield_zordered_panel": 6, "yield": 6, "iter": 6, "passivelay": 6, "rad_length_func": 6, "step_sz": 6, "01": 6, "pgeant": 6, "develop": 6, "parameteris": 6, "geant": 6, "radiat": 6, "n_x": 6, "n_y": 6, "exampl": 6, "def": 6, "arb_rad_length": 6, "torch": 6, "ones": 6, "lead": 6, "beryllium": 6, "later": 6, "load_rad_length": 6, "select": 6, "travers": 6, "_pdg_scatter": 6, "log_term": 6, "euler": 6, "rotat": 6, "matric": 6, "convers": 6, "_pgeant_scatt": 6, "abs2idx": 6, "possibl": 6, "seri": 6, "mu_abs2idx": 6, "look": 6, "scatter_and_propag": 6, "prespecifi": 6, "neighbour": 6, "infinit": 6, "thin": 6, "rectangular": 6, "despit": 6, "nn": 6, "continu": 6, "2d": 6, "across": 6, "decid": 6, "evalu": 6, "eval": 6, "area": 6, "learnt": 6, "effect": 6, "now": 6, "aspect": 6, "improv": 6, "resiz": 6, "meet": 6, "interpret": 6, "budget_scal": 6, "match": 6, "xyz_low": 6, "xyz_high": 6, "20": 6, "random": 6, "1e": 6, "subtract": 6, "min": 6, "max": 6, "doesn": 6, "overlap": 6, "overridden": 6, "subclass": 6, "although": 6, "recip": 6, "former": 6, "regist": 6, "hook": 6, "while": 6, "silent": 6, "ignor": 6, "pre": 6, "get_gauss": 6, "distribut": 6, "interact": 6, "consist": 6, "reconstruct": 6, "get_scaled_xy_span": 6, "xy2": 6, "li": 6, "border": 6, "slower": 6, "wherea": 6, "transit": 6, "strongli": 6, "approxim": 6, "sig_model": 6, "interfac": 6, "conveni": 6, "respons": 6, "optim": 6, "could": 6, "volumeclassloss": 6, "front": 6, "zxy": 6, "corner": 6, "support": 6, "spars": 6, "_check_pass": 6, "_configure_budget": 6, "budget_weight": 6, "explicit": 6, "hierarchi": 6, "thu": 6, "_n_layer_cost": 6, "softmax": 6, "normalis": 6, "slice": 6, "taken": 6, "_get_devic": 6, "system": 6, "amongst": 6, "build_edg": 6, "draw": 6, "xlim": 6, "ylim": 6, "zlim": 6, "pertain": 6, "jupyt": 6, "matplotlib": 6, "you": 6, "dimension": 6, "turn": 6, "won": 6, "explicitli": 6, "get_detector": 6, "get_passive_z_rang": 6, "get_pass": 6, "get_rad_cub": 6, "h": 6, "lookup_passive_xyz_coord": 6, "passive_s": 6}, "objects": {"tomopt": [[1, 0, 0, "-", "core"], [1, 0, 0, "-", "utils"], [1, 0, 0, "-", "version"]], "tomopt.inference": [[2, 0, 0, "-", "scattering"], [2, 0, 0, "-", "volume"]], "tomopt.inference.scattering": [[2, 1, 1, "", "GenScatterBatch"], [2, 1, 1, "", "ScatterBatch"]], "tomopt.inference.scattering.GenScatterBatch": [[2, 2, 1, "", "_compute_tracks"]], "tomopt.inference.scattering.ScatterBatch": [[2, 2, 1, "", "_compute_dtheta_dphi_scatter"], [2, 2, 1, "", "_compute_out_var_unc"], [2, 2, 1, "", "_compute_phi"], [2, 2, 1, "", "_compute_scatters"], [2, 2, 1, "", "_compute_theta"], [2, 2, 1, "", "_compute_theta_msc"], [2, 2, 1, "", "_compute_tracks"], [2, 2, 1, "", "_compute_xyz_in"], [2, 2, 1, "", "_compute_xyz_out"], [2, 3, 1, "", "_cross_track"], [2, 3, 1, "", "_dphi"], [2, 3, 1, "", "_dphi_unc"], [2, 3, 1, "", "_dtheta"], [2, 3, 1, "", "_dtheta_unc"], [2, 3, 1, "", "_dtheta_xy"], [2, 3, 1, "", "_dtheta_xy_unc"], [2, 3, 1, "", "_dxy"], [2, 3, 1, "", "_dxy_unc"], [2, 2, 1, "", "_extract_hits"], [2, 2, 1, "", "_filter_scatters"], [2, 3, 1, "", "_gen_hits"], [2, 3, 1, "", "_hit_effs"], [2, 3, 1, "", "_hit_uncs"], [2, 3, 1, "", "_phi_in"], [2, 3, 1, "", "_phi_in_unc"], [2, 3, 1, "", "_phi_out"], [2, 3, 1, "", "_phi_out_unc"], [2, 3, 1, "", "_poca_xyz"], [2, 3, 1, "", "_poca_xyz_unc"], [2, 3, 1, "", "_reco_hits"], [2, 2, 1, "", "_set_dtheta_dphi_scatter"], [2, 3, 1, "", "_theta_in"], [2, 3, 1, "", "_theta_in_unc"], [2, 3, 1, "", "_theta_out"], [2, 3, 1, "", "_theta_out_unc"], [2, 3, 1, "", "_theta_xy_in"], [2, 3, 1, "", "_theta_xy_in_unc"], [2, 3, 1, "", "_theta_xy_out"], [2, 3, 1, "", "_theta_xy_out_unc"], [2, 3, 1, "", "_total_scatter"], [2, 3, 1, "", "_total_scatter_unc"], [2, 3, 1, "", "_track_coefs"], [2, 3, 1, "", "_track_in"], [2, 3, 1, "", "_track_out"], [2, 3, 1, "", "_track_start_in"], [2, 3, 1, "", "_track_start_out"], [2, 3, 1, "", "_xyz_in"], [2, 3, 1, "", "_xyz_in_unc"], [2, 3, 1, "", "_xyz_out"], [2, 3, 1, "", "_xyz_out_unc"], [2, 4, 1, "", "above_gen_hits"], [2, 4, 1, "", "above_hit_effs"], [2, 4, 1, "", "above_hit_uncs"], [2, 4, 1, "", "above_hits"], [2, 4, 1, "", "below_gen_hits"], [2, 4, 1, "", "below_hit_effs"], [2, 4, 1, "", "below_hit_uncs"], [2, 4, 1, "", "below_hits"], [2, 4, 1, "", "dphi"], [2, 4, 1, "", "dphi_unc"], [2, 4, 1, "", "dtheta"], [2, 4, 1, "", "dtheta_unc"], [2, 4, 1, "", "dtheta_xy"], [2, 4, 1, "", "dtheta_xy_unc"], [2, 4, 1, "", "dxy"], [2, 4, 1, "", "dxy_unc"], [2, 4, 1, "", "gen_hits"], [2, 2, 1, "", "get_muon_trajectory"], [2, 2, 1, "", "get_scatter_mask"], [2, 4, 1, "", "hit_effs"], [2, 4, 1, "", "hit_uncs"], [2, 4, 1, "", "hits"], [2, 4, 1, "", "n_hits_above"], [2, 4, 1, "", "n_hits_below"], [2, 4, 1, "", "phi_in"], [2, 4, 1, "", "phi_in_unc"], [2, 4, 1, "", "phi_out"], [2, 4, 1, "", "phi_out_unc"], [2, 2, 1, "", "plot_scatter"], [2, 4, 1, "", "poca_xyz"], [2, 4, 1, "", "poca_xyz_unc"], [2, 4, 1, "", "reco_hits"], [2, 4, 1, "", "theta_in"], [2, 4, 1, "", "theta_in_unc"], [2, 4, 1, "", "theta_msc"], [2, 4, 1, "", "theta_msc_unc"], [2, 4, 1, "", "theta_out"], [2, 4, 1, "", "theta_out_unc"], [2, 4, 1, "", "theta_xy_in"], [2, 4, 1, "", "theta_xy_in_unc"], [2, 4, 1, "", "theta_xy_out"], [2, 4, 1, "", "theta_xy_out_unc"], [2, 4, 1, "", "total_scatter"], [2, 4, 1, "", "total_scatter_unc"], [2, 4, 1, "", "track_in"], [2, 4, 1, "", "track_out"], [2, 4, 1, "", "track_start_in"], [2, 4, 1, "", "track_start_out"], [2, 4, 1, "", "xyz_in"], [2, 4, 1, "", "xyz_in_unc"], [2, 4, 1, "", "xyz_out"], [2, 4, 1, "", "xyz_out_unc"]], "tomopt.inference.volume": [[2, 1, 1, "", "AbsIntClassifierFromX0"], [2, 1, 1, "", "AbsVolumeInferrer"], [2, 1, 1, "", "AbsX0Inferrer"], [2, 1, 1, "", "DenseBlockClassifierFromX0s"], [2, 1, 1, "", "PanelX0Inferrer"]], "tomopt.inference.volume.AbsIntClassifierFromX0": [[2, 3, 1, "", "_abc_impl"], [2, 2, 1, "", "_reset_vars"], [2, 2, 1, "", "add_scatters"], [2, 2, 1, "", "compute_efficiency"], [2, 2, 1, "", "get_prediction"], [2, 2, 1, "", "x02probs"]], "tomopt.inference.volume.AbsVolumeInferrer": [[2, 3, 1, "", "_abc_impl"], [2, 2, 1, "", "_reset_vars"], [2, 2, 1, "", "add_scatters"], [2, 2, 1, "", "compute_efficiency"], [2, 2, 1, "", "get_prediction"]], "tomopt.inference.volume.AbsX0Inferrer": [[2, 3, 1, "", "_abc_impl"], [2, 2, 1, "", "_combine_scatters"], [2, 2, 1, "", "_get_voxel_zxy_x0_pred_uncs"], [2, 2, 1, "", "_get_voxel_zxy_x0_preds"], [2, 3, 1, "", "_muon_efficiency"], [2, 3, 1, "", "_muon_probs_per_voxel_zxy"], [2, 3, 1, "", "_muon_scatter_var_uncs"], [2, 3, 1, "", "_muon_scatter_vars"], [2, 3, 1, "", "_n_mu"], [2, 2, 1, "", "_reset_vars"], [2, 2, 1, "", "_set_var_dimensions"], [2, 3, 1, "", "_var_order_szs"], [2, 3, 1, "", "_vox_zxy_x0_pred_uncs"], [2, 3, 1, "", "_vox_zxy_x0_preds"], [2, 2, 1, "", "_weighted_mean"], [2, 2, 1, "", "_weighted_rms"], [2, 2, 1, "", "get_prediction"], [2, 4, 1, "", "inv_weights"], [2, 4, 1, "", "muon_efficiency"], [2, 4, 1, "", "muon_mom"], [2, 4, 1, "", "muon_mom_unc"], [2, 4, 1, "", "muon_poca_xyz"], [2, 4, 1, "", "muon_poca_xyz_unc"], [2, 4, 1, "", "muon_probs_per_voxel_zxy"], [2, 4, 1, "", "muon_theta_in"], [2, 4, 1, "", "muon_theta_in_unc"], [2, 4, 1, "", "muon_theta_out"], [2, 4, 1, "", "muon_theta_out_unc"], [2, 4, 1, "", "muon_total_scatter"], [2, 4, 1, "", "muon_total_scatter_unc"], [2, 4, 1, "", "n_mu"], [2, 4, 1, "", "vox_zxy_x0_pred_uncs"], [2, 4, 1, "", "vox_zxy_x0_preds"], [2, 2, 1, "", "x0_from_scatters"]], "tomopt.inference.volume.DenseBlockClassifierFromX0s": [[2, 3, 1, "", "_abc_impl"], [2, 2, 1, "", "_reset_vars"], [2, 2, 1, "", "add_scatters"], [2, 2, 1, "", "compute_efficiency"], [2, 2, 1, "", "get_prediction"], [2, 3, 1, "", "scatter_batches"]], "tomopt.inference.volume.PanelX0Inferrer": [[2, 3, 1, "", "_abc_impl"], [2, 2, 1, "", "compute_efficiency"], [2, 3, 1, "", "scatter_batches"]], "tomopt.muon": [[3, 0, 0, "-", "generation"], [3, 0, 0, "-", "muon_batch"]], "tomopt.muon.generation": [[3, 1, 1, "", "AbsMuonGenerator"], [3, 1, 1, "", "MuonGenerator2015"], [3, 1, 1, "", "MuonGenerator2016"]], "tomopt.muon.generation.AbsMuonGenerator": [[3, 3, 1, "", "_muon_mass2"], [3, 3, 1, "", "_n_bins_energy"], [3, 3, 1, "", "_n_bins_theta"], [3, 2, 1, "", "flux"], [3, 2, 1, "", "from_volume"], [3, 2, 1, "", "generate_set"]], "tomopt.muon.generation.MuonGenerator2015": [[3, 3, 1, "", "P1"], [3, 3, 1, "", "P2"], [3, 3, 1, "", "P3"], [3, 3, 1, "", "P4"], [3, 3, 1, "", "P5"], [3, 2, 1, "", "flux"]], "tomopt.muon.generation.MuonGenerator2016": [[3, 3, 1, "", "E_0"], [3, 3, 1, "", "E_c"], [3, 3, 1, "", "I_0"], [3, 3, 1, "", "N"], [3, 3, 1, "", "Rod"], [3, 3, 1, "", "epinv"], [3, 2, 1, "", "flux"], [3, 3, 1, "", "n"]], "tomopt.muon.muon_batch": [[3, 1, 1, "", "MuonBatch"]], "tomopt.muon.muon_batch.MuonBatch": [[3, 3, 1, "", "_keep_mask"], [3, 4, 1, "", "_mom"], [3, 4, 1, "", "_phi"], [3, 4, 1, "", "_theta"], [3, 4, 1, "", "_x"], [3, 4, 1, "", "_xy"], [3, 4, 1, "", "_xyz"], [3, 4, 1, "", "_y"], [3, 4, 1, "", "_z"], [3, 2, 1, "", "append_hits"], [3, 2, 1, "", "copy"], [3, 2, 1, "", "dtheta"], [3, 2, 1, "", "dtheta_x"], [3, 2, 1, "", "dtheta_y"], [3, 2, 1, "", "filter_muons"], [3, 2, 1, "", "get_hits"], [3, 2, 1, "", "get_xy_mask"], [3, 4, 1, "", "mom"], [3, 4, 1, "", "muons"], [3, 3, 1, "", "p_dim"], [3, 3, 1, "", "ph_dim"], [3, 4, 1, "", "phi"], [3, 2, 1, "", "phi_from_theta_xy"], [3, 2, 1, "", "propagate_d"], [3, 2, 1, "", "propagate_dz"], [3, 4, 1, "", "reco_mom"], [3, 2, 1, "", "remove_upwards_muons"], [3, 2, 1, "", "scatter_dtheta_dphi"], [3, 2, 1, "", "scatter_dtheta_xy"], [3, 2, 1, "", "scatter_dxyz"], [3, 2, 1, "", "snapshot_xyz"], [3, 3, 1, "", "th_dim"], [3, 4, 1, "", "theta"], [3, 2, 1, "", "theta_from_theta_xy"], [3, 4, 1, "", "theta_x"], [3, 2, 1, "", "theta_x_from_theta_phi"], [3, 4, 1, "", "theta_xy"], [3, 4, 1, "", "theta_y"], [3, 2, 1, "", "theta_y_from_theta_phi"], [3, 4, 1, "", "upwards_muons"], [3, 4, 1, "", "x"], [3, 3, 1, "", "x_dim"], [3, 4, 1, "", "xy"], [3, 4, 1, "", "xyz"], [3, 4, 1, "", "xyz_hist"], [3, 4, 1, "", "y"], [3, 3, 1, "", "y_dim"], [3, 4, 1, "", "z"], [3, 3, 1, "", "z_dim"]], "tomopt.optimisation.callbacks": [[5, 0, 0, "-", "callback"], [5, 0, 0, "-", "cyclic_callbacks"], [5, 0, 0, "-", "data_callbacks"], [5, 0, 0, "-", "detector_callbacks"], [5, 0, 0, "-", "diagnostic_callbacks"], [5, 0, 0, "-", "eval_metric"], [5, 0, 0, "-", "grad_callbacks"], [5, 0, 0, "-", "heatmap_gif"], [5, 0, 0, "-", "monitors"], [5, 0, 0, "module-0", "opt_callbacks"], [5, 0, 0, "-", "pred_callbacks"], [5, 0, 0, "-", "warmup_callbacks"]], "tomopt.optimisation.callbacks.callback": [[5, 1, 1, "", "Callback"]], "tomopt.optimisation.callbacks.callback.Callback": [[5, 2, 1, "", "on_backwards_begin"], [5, 2, 1, "", "on_backwards_end"], [5, 2, 1, "", "on_epoch_begin"], [5, 2, 1, "", "on_epoch_end"], [5, 2, 1, "", "on_mu_batch_begin"], [5, 2, 1, "", "on_mu_batch_end"], [5, 2, 1, "", "on_pred_begin"], [5, 2, 1, "", "on_pred_end"], [5, 2, 1, "", "on_scatter_end"], [5, 2, 1, "", "on_step_end"], [5, 2, 1, "", "on_train_begin"], [5, 2, 1, "", "on_train_end"], [5, 2, 1, "", "on_volume_batch_begin"], [5, 2, 1, "", "on_volume_batch_end"], [5, 2, 1, "", "on_volume_begin"], [5, 2, 1, "", "on_volume_end"], [5, 2, 1, "", "on_x0_pred_begin"], [5, 2, 1, "", "on_x0_pred_end"], [5, 2, 1, "", "set_wrapper"], [5, 3, 1, "", "wrapper"]], "tomopt.optimisation.callbacks.cyclic_callbacks": [[5, 1, 1, "", "CyclicCallback"]], "tomopt.optimisation.callbacks.data_callbacks": [[5, 1, 1, "", "MuonResampler"]], "tomopt.optimisation.callbacks.data_callbacks.MuonResampler": [[5, 2, 1, "", "check_mu_batch"], [5, 2, 1, "", "on_mu_batch_begin"], [5, 2, 1, "", "resample"]], "tomopt.optimisation.callbacks.detector_callbacks": [[5, 1, 1, "", "PanelUpdateLimiter"], [5, 1, 1, "", "SigmoidPanelSmoothnessSchedule"]], "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter": [[5, 2, 1, "", "on_backwards_end"], [5, 2, 1, "", "on_step_end"]], "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule": [[5, 2, 1, "", "_activate"], [5, 2, 1, "", "_set_smooth"], [5, 2, 1, "", "on_epoch_begin"], [5, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.diagnostic_callbacks": [[5, 1, 1, "", "HitRecord"], [5, 1, 1, "", "ScatterRecord"]], "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord": [[5, 2, 1, "", "_to_df"], [5, 2, 1, "", "on_scatter_end"]], "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord": [[5, 2, 1, "", "_reset"], [5, 2, 1, "", "_to_df"], [5, 2, 1, "", "get_record"], [5, 2, 1, "", "on_pred_begin"], [5, 2, 1, "", "on_scatter_end"], [5, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.eval_metric": [[5, 1, 1, "", "EvalMetric"]], "tomopt.optimisation.callbacks.eval_metric.EvalMetric": [[5, 2, 1, "", "get_metric"], [5, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.grad_callbacks": [[5, 1, 1, "", "NoMoreNaNs"]], "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs": [[5, 2, 1, "", "on_backwards_end"]], "tomopt.optimisation.callbacks.heatmap_gif": [[5, 1, 1, "", "HeatMapGif"]], "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif": [[5, 2, 1, "", "_create_gif"], [5, 2, 1, "", "_plot_current"], [5, 2, 1, "", "_reset"], [5, 2, 1, "", "on_epoch_begin"], [5, 2, 1, "", "on_train_begin"], [5, 2, 1, "", "on_train_end"]], "tomopt.optimisation.callbacks.monitors": [[5, 1, 1, "", "MetricLogger"], [5, 1, 1, "", "PanelMetricLogger"]], "tomopt.optimisation.callbacks.monitors.MetricLogger": [[5, 2, 1, "", "_build_grid_spec"], [5, 2, 1, "", "_create_gif"], [5, 2, 1, "", "_prep_plots"], [5, 2, 1, "", "_reset"], [5, 2, 1, "", "_snapshot_monitor"], [5, 3, 1, "", "cat_palette"], [5, 2, 1, "", "get_loss_history"], [5, 2, 1, "", "get_results"], [5, 3, 1, "", "h_mid"], [5, 3, 1, "", "lbl_col"], [5, 3, 1, "", "lbl_sz"], [5, 3, 1, "", "leg_sz"], [5, 2, 1, "", "on_backwards_end"], [5, 2, 1, "", "on_epoch_begin"], [5, 2, 1, "", "on_epoch_end"], [5, 2, 1, "", "on_train_begin"], [5, 2, 1, "", "on_train_end"], [5, 2, 1, "", "on_volume_batch_end"], [5, 2, 1, "", "on_volume_end"], [5, 2, 1, "", "print_losses"], [5, 3, 1, "", "style"], [5, 3, 1, "", "tk_col"], [5, 3, 1, "", "tk_sz"], [5, 2, 1, "", "update_plot"], [5, 3, 1, "", "w_mid"]], "tomopt.optimisation.callbacks.monitors.PanelMetricLogger": [[5, 2, 1, "", "_build_grid_spec"], [5, 2, 1, "", "_prep_plots"], [5, 2, 1, "", "_reset"], [5, 2, 1, "", "_set_axes_labels"], [5, 2, 1, "", "update_plot"]], "tomopt.optimisation.callbacks.opt_callbacks": [[5, 1, 1, "id0", "OneCycle"]], "tomopt.optimisation.callbacks.opt_callbacks.OneCycle": [[5, 3, 1, "id4", "_abc_impl"], [5, 2, 1, "id5", "_activate"], [5, 2, 1, "id6", "on_epoch_end"], [5, 2, 1, "id7", "schedule"]], "tomopt.optimisation.callbacks.pred_callbacks": [[5, 1, 1, "", "PredHandler"], [5, 1, 1, "", "Save2HDF5PredHandler"], [5, 1, 1, "", "VolumeTargetPredHandler"]], "tomopt.optimisation.callbacks.pred_callbacks.PredHandler": [[5, 2, 1, "", "get_preds"], [5, 2, 1, "", "on_pred_begin"], [5, 2, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler": [[5, 2, 1, "", "_open_file"], [5, 2, 1, "", "_write_data"], [5, 2, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler": [[5, 2, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.warmup_callbacks": [[5, 1, 1, "", "CostCoefWarmup"], [5, 1, 1, "", "PanelOptConfig"], [5, 1, 1, "", "PostWarmupCallback"], [5, 1, 1, "", "WarmupCallback"]], "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup": [[5, 2, 1, "", "_reset"], [5, 2, 1, "", "on_epoch_end"], [5, 2, 1, "", "on_volume_end"]], "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig": [[5, 2, 1, "", "_reset"], [5, 2, 1, "", "on_backwards_end"], [5, 2, 1, "", "on_epoch_end"]], "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback": [[5, 2, 1, "", "_activate"], [5, 2, 1, "", "check_warmups"], [5, 2, 1, "", "on_epoch_begin"], [5, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback": [[5, 2, 1, "", "_reset"], [5, 2, 1, "", "check_warmups"], [5, 2, 1, "", "on_epoch_begin"], [5, 2, 1, "", "on_epoch_end"], [5, 2, 1, "", "on_train_begin"]], "tomopt.utils": [[1, 5, 1, "", "class_to_x0preds"], [1, 5, 1, "", "jacobian"], [1, 5, 1, "", "x0_from_mixture"], [1, 5, 1, "", "x0targs_to_classtargs"]], "tomopt.volume": [[6, 0, 0, "-", "heatmap"], [6, 0, 0, "-", "layer"], [6, 0, 0, "-", "panel"], [6, 0, 0, "-", "scatter_model"], [6, 0, 0, "-", "volume"]], "tomopt.volume.heatmap": [[6, 1, 1, "", "DetectorHeatMap"]], "tomopt.volume.heatmap.DetectorHeatMap": [[6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "assign_budget"], [6, 2, 1, "", "clamp_params"], [6, 2, 1, "", "get_cost"], [6, 2, 1, "", "get_efficiency"], [6, 2, 1, "", "get_hits"], [6, 2, 1, "", "get_resolution"], [6, 2, 1, "", "get_xy_mask"], [6, 2, 1, "", "plot_map"], [6, 3, 1, "", "training"], [6, 4, 1, "", "x"], [6, 4, 1, "", "y"]], "tomopt.volume.layer": [[6, 1, 1, "", "AbsDetectorLayer"], [6, 1, 1, "", "AbsLayer"], [6, 1, 1, "", "PanelDetectorLayer"], [6, 1, 1, "", "PassiveLayer"]], "tomopt.volume.layer.AbsDetectorLayer": [[6, 3, 1, "", "_abc_impl"], [6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_n_costs"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "assign_budget"], [6, 2, 1, "", "conform_detector"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_cost"], [6, 3, 1, "", "training"]], "tomopt.volume.layer.AbsLayer": [[6, 3, 1, "", "_abc_impl"], [6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_lw_z_size"], [6, 3, 1, "", "training"]], "tomopt.volume.layer.PanelDetectorLayer": [[6, 3, 1, "", "_abc_impl"], [6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "assign_budget"], [6, 2, 1, "", "conform_detector"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_cost"], [6, 2, 1, "", "get_device"], [6, 2, 1, "", "get_panel_zorder"], [6, 3, 1, "", "rad_length"], [6, 3, 1, "", "training"], [6, 2, 1, "", "yield_zordered_panels"]], "tomopt.volume.layer.PassiveLayer": [[6, 3, 1, "", "_abc_impl"], [6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 2, 1, "", "_compute_scattering"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 2, 1, "", "_pdg_scatter"], [6, 2, 1, "", "_pgeant_scatter"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "abs2idx"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "load_rad_length"], [6, 2, 1, "", "mu_abs2idx"], [6, 3, 1, "", "rad_length"], [6, 2, 1, "", "scatter_and_propagate"], [6, 3, 1, "", "training"]], "tomopt.volume.panel": [[6, 1, 1, "", "DetectorPanel"], [6, 1, 1, "", "SigmoidDetectorPanel"]], "tomopt.volume.panel.DetectorPanel": [[6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "assign_budget"], [6, 2, 1, "", "clamp_params"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_cost"], [6, 2, 1, "", "get_efficiency"], [6, 2, 1, "", "get_gauss"], [6, 2, 1, "", "get_hits"], [6, 2, 1, "", "get_resolution"], [6, 2, 1, "", "get_scaled_xy_span"], [6, 2, 1, "", "get_xy_mask"], [6, 3, 1, "", "training"], [6, 4, 1, "", "x"], [6, 4, 1, "", "y"]], "tomopt.volume.panel.SigmoidDetectorPanel": [[6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "get_efficiency"], [6, 2, 1, "", "get_resolution"], [6, 2, 1, "", "sig_model"], [6, 4, 1, "", "smooth"], [6, 3, 1, "", "training"]], "tomopt.volume.volume": [[6, 1, 1, "", "Volume"]], "tomopt.volume.volume.Volume": [[6, 3, 1, "", "_backward_hooks"], [6, 3, 1, "", "_buffers"], [6, 2, 1, "", "_check_passives"], [6, 2, 1, "", "_configure_budget"], [6, 3, 1, "", "_forward_hooks"], [6, 3, 1, "", "_forward_pre_hooks"], [6, 2, 1, "", "_get_device"], [6, 3, 1, "", "_is_full_backward_hook"], [6, 3, 1, "", "_load_state_dict_post_hooks"], [6, 3, 1, "", "_load_state_dict_pre_hooks"], [6, 3, 1, "", "_modules"], [6, 3, 1, "", "_non_persistent_buffers_set"], [6, 3, 1, "", "_parameters"], [6, 3, 1, "", "_state_dict_hooks"], [6, 2, 1, "", "assign_budget"], [6, 2, 1, "", "build_edges"], [6, 4, 1, "", "centres"], [6, 4, 1, "", "device"], [6, 2, 1, "", "draw"], [6, 4, 1, "", "edges"], [6, 2, 1, "", "forward"], [6, 2, 1, "", "get_cost"], [6, 2, 1, "", "get_detectors"], [6, 2, 1, "", "get_passive_z_range"], [6, 2, 1, "", "get_passives"], [6, 2, 1, "", "get_rad_cube"], [6, 4, 1, "", "h"], [6, 2, 1, "", "load_rad_length"], [6, 2, 1, "", "lookup_passive_xyz_coords"], [6, 4, 1, "", "lw"], [6, 4, 1, "", "passive_size"], [6, 4, 1, "", "target"], [6, 3, 1, "", "training"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"tomopt": [0, 1, 2, 3, 4, 5, 6], "differenti": 0, "muon": [0, 3], "tomographi": 0, "optimis": [0, 4, 5], "packag": [0, 1, 2, 3, 4, 5, 6], "overview": 0, "document": 0, "index": 0, "subpackag": [1, 4], "submodul": [1, 2, 3, 5, 6], "core": 1, "modul": [1, 2, 3, 5, 6], "util": 1, "version": 1, "infer": 2, "scatter": 2, "volum": [2, 6], "gener": 3, "muon_batch": 3, "callback": 5, "cyclic_callback": 5, "data_callback": 5, "diagnostic_callback": 5, "eval_metr": 5, "grad_callback": 5, "heatmap_gif": 5, "loss_callback": 5, "monitor": 5, "opt_callback": 5, "pred_callback": 5, "warmup_callback": 5, "detector_callback": 5, "heatmap": 6, "layer": 6, "panel": 6, "scatter_model": 6}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"TomOpt: Differential Muon Tomography Optimisation": [[0, "tomopt-differential-muon-tomography-optimisation"]], "Package overview": [[0, "package-overview"]], "Package documentation": [[0, "package-documentation"]], "Index": [[0, "index"]], "tomopt.optimisation package": [[4, "tomopt-optimisation-package"]], "Subpackages": [[4, "subpackages"], [1, "subpackages"]], "tomopt package": [[1, "tomopt-package"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [5, "submodules"], [6, "submodules"]], "tomopt.core module": [[1, "module-tomopt.core"]], "tomopt.utils module": [[1, "module-tomopt.utils"]], "tomopt.version module": [[1, "module-tomopt.version"]], "tomopt.inference package": [[2, "tomopt-inference-package"]], "tomopt.inference.scattering module": [[2, "module-tomopt.inference.scattering"]], "tomopt.inference.volume module": [[2, "module-tomopt.inference.volume"]], "tomopt.muon package": [[3, "tomopt-muon-package"]], "tomopt.muon.generation module": [[3, "module-tomopt.muon.generation"]], "tomopt.muon.muon_batch module": [[3, "module-tomopt.muon.muon_batch"]], "tomopt.optimisation.callbacks package": [[5, "tomopt-optimisation-callbacks-package"]], "tomopt.optimisation.callbacks.callback module": [[5, "module-tomopt.optimisation.callbacks.callback"]], "tomopt.optimisation.callbacks.cyclic_callbacks module": [[5, "module-tomopt.optimisation.callbacks.cyclic_callbacks"]], "tomopt.optimisation.callbacks.data_callbacks module": [[5, "module-tomopt.optimisation.callbacks.data_callbacks"]], "tomopt.optimisation.callbacks.diagnostic_callbacks module": [[5, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"]], "tomopt.optimisation.callbacks.eval_metric module": [[5, "module-tomopt.optimisation.callbacks.eval_metric"]], "tomopt.optimisation.callbacks.grad_callbacks module": [[5, "module-tomopt.optimisation.callbacks.grad_callbacks"]], "tomopt.optimisation.callbacks.heatmap_gif module": [[5, "module-tomopt.optimisation.callbacks.heatmap_gif"]], "tomopt.optimisation.callbacks.loss_callbacks module": [[5, "tomopt-optimisation-callbacks-loss-callbacks-module"]], "tomopt.optimisation.callbacks.monitors module": [[5, "module-tomopt.optimisation.callbacks.monitors"]], "tomopt.optimisation.callbacks.opt_callbacks module": [[5, "module-tomopt.optimisation.callbacks.opt_callbacks"], [5, "id3"]], "tomopt.optimisation.callbacks.pred_callbacks module": [[5, "module-tomopt.optimisation.callbacks.pred_callbacks"]], "tomopt.optimisation.callbacks.warmup_callbacks module": [[5, "tomopt-optimisation-callbacks-warmup-callbacks-module"]], "tomopt.optimisation.callbacks.detector_callbacks module": [[5, "tomopt-optimisation-callbacks-detector-callbacks-module"]], "tomopt.volume package": [[6, "tomopt-volume-package"]], "tomopt.volume.heatmap module": [[6, "module-tomopt.volume.heatmap"]], "tomopt.volume.layer module": [[6, "module-tomopt.volume.layer"]], "tomopt.volume.panel module": [[6, "module-tomopt.volume.panel"]], "tomopt.volume.scatter_model module": [[6, "module-tomopt.volume.scatter_model"]], "tomopt.volume.volume module": [[6, "module-tomopt.volume.volume"]]}, "indexentries": {"class_to_x0preds() (in module tomopt.utils)": [[1, "tomopt.utils.class_to_x0preds"]], "jacobian() (in module tomopt.utils)": [[1, "tomopt.utils.jacobian"]], "module": [[1, "module-tomopt.core"], [1, "module-tomopt.utils"], [1, "module-tomopt.version"], [2, "module-tomopt.inference.scattering"], [2, "module-tomopt.inference.volume"], [3, "module-tomopt.muon.generation"], [3, "module-tomopt.muon.muon_batch"], [5, "module-0"], [5, "module-tomopt.optimisation.callbacks.callback"], [5, "module-tomopt.optimisation.callbacks.cyclic_callbacks"], [5, "module-tomopt.optimisation.callbacks.data_callbacks"], [5, "module-tomopt.optimisation.callbacks.detector_callbacks"], [5, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"], [5, "module-tomopt.optimisation.callbacks.eval_metric"], [5, "module-tomopt.optimisation.callbacks.grad_callbacks"], [5, "module-tomopt.optimisation.callbacks.heatmap_gif"], [5, "module-tomopt.optimisation.callbacks.monitors"], [5, "module-tomopt.optimisation.callbacks.opt_callbacks"], [5, "module-tomopt.optimisation.callbacks.pred_callbacks"], [5, "module-tomopt.optimisation.callbacks.warmup_callbacks"], [6, "module-tomopt.volume.heatmap"], [6, "module-tomopt.volume.layer"], [6, "module-tomopt.volume.panel"], [6, "module-tomopt.volume.scatter_model"], [6, "module-tomopt.volume.volume"]], "tomopt.core": [[1, "module-tomopt.core"]], "tomopt.utils": [[1, "module-tomopt.utils"]], "tomopt.version": [[1, "module-tomopt.version"]], "x0_from_mixture() (in module tomopt.utils)": [[1, "tomopt.utils.x0_from_mixture"]], "x0targs_to_classtargs() (in module tomopt.utils)": [[1, "tomopt.utils.x0targs_to_classtargs"]], "absintclassifierfromx0 (class in tomopt.inference.volume)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0"]], "absvolumeinferrer (class in tomopt.inference.volume)": [[2, "tomopt.inference.volume.AbsVolumeInferrer"]], "absx0inferrer (class in tomopt.inference.volume)": [[2, "tomopt.inference.volume.AbsX0Inferrer"]], "denseblockclassifierfromx0s (class in tomopt.inference.volume)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s"]], "genscatterbatch (class in tomopt.inference.scattering)": [[2, "tomopt.inference.scattering.GenScatterBatch"]], "panelx0inferrer (class in tomopt.inference.volume)": [[2, "tomopt.inference.volume.PanelX0Inferrer"]], "scatterbatch (class in tomopt.inference.scattering)": [[2, "tomopt.inference.scattering.ScatterBatch"]], "_abc_impl (tomopt.inference.volume.absintclassifierfromx0 attribute)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0._abc_impl"]], "_abc_impl (tomopt.inference.volume.absvolumeinferrer attribute)": [[2, "tomopt.inference.volume.AbsVolumeInferrer._abc_impl"]], "_abc_impl (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._abc_impl"]], "_abc_impl (tomopt.inference.volume.denseblockclassifierfromx0s attribute)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s._abc_impl"]], "_abc_impl (tomopt.inference.volume.panelx0inferrer attribute)": [[2, "tomopt.inference.volume.PanelX0Inferrer._abc_impl"]], "_combine_scatters() (tomopt.inference.volume.absx0inferrer method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._combine_scatters"]], "_compute_dtheta_dphi_scatter() (tomopt.inference.scattering.scatterbatch static method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_dtheta_dphi_scatter"]], "_compute_out_var_unc() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_out_var_unc"]], "_compute_phi() (tomopt.inference.scattering.scatterbatch static method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_phi"]], "_compute_scatters() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_scatters"]], "_compute_theta() (tomopt.inference.scattering.scatterbatch static method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_theta"]], "_compute_theta_msc() (tomopt.inference.scattering.scatterbatch static method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_theta_msc"]], "_compute_tracks() (tomopt.inference.scattering.genscatterbatch method)": [[2, "tomopt.inference.scattering.GenScatterBatch._compute_tracks"]], "_compute_tracks() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_tracks"]], "_compute_xyz_in() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_xyz_in"]], "_compute_xyz_out() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._compute_xyz_out"]], "_cross_track (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._cross_track"]], "_dphi (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dphi"]], "_dphi_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dphi_unc"]], "_dtheta (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dtheta"]], "_dtheta_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dtheta_unc"]], "_dtheta_xy (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dtheta_xy"]], "_dtheta_xy_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dtheta_xy_unc"]], "_dxy (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dxy"]], "_dxy_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._dxy_unc"]], "_extract_hits() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._extract_hits"]], "_filter_scatters() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._filter_scatters"]], "_gen_hits (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._gen_hits"]], "_get_voxel_zxy_x0_pred_uncs() (tomopt.inference.volume.absx0inferrer method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._get_voxel_zxy_x0_pred_uncs"]], "_get_voxel_zxy_x0_preds() (tomopt.inference.volume.absx0inferrer method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._get_voxel_zxy_x0_preds"]], "_hit_effs (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._hit_effs"]], "_hit_uncs (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._hit_uncs"]], "_muon_efficiency (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._muon_efficiency"]], "_muon_probs_per_voxel_zxy (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._muon_probs_per_voxel_zxy"]], "_muon_scatter_var_uncs (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._muon_scatter_var_uncs"]], "_muon_scatter_vars (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._muon_scatter_vars"]], "_n_mu (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._n_mu"]], "_phi_in (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._phi_in"]], "_phi_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._phi_in_unc"]], "_phi_out (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._phi_out"]], "_phi_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._phi_out_unc"]], "_poca_xyz (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._poca_xyz"]], "_poca_xyz_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._poca_xyz_unc"]], "_reco_hits (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._reco_hits"]], "_reset_vars() (tomopt.inference.volume.absintclassifierfromx0 method)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0._reset_vars"]], "_reset_vars() (tomopt.inference.volume.absvolumeinferrer method)": [[2, "tomopt.inference.volume.AbsVolumeInferrer._reset_vars"]], "_reset_vars() (tomopt.inference.volume.absx0inferrer method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._reset_vars"]], "_reset_vars() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s._reset_vars"]], "_set_dtheta_dphi_scatter() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch._set_dtheta_dphi_scatter"]], "_set_var_dimensions() (tomopt.inference.volume.absx0inferrer method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._set_var_dimensions"]], "_theta_in (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_in"]], "_theta_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_in_unc"]], "_theta_out (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_out"]], "_theta_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_out_unc"]], "_theta_xy_in (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_xy_in"]], "_theta_xy_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_xy_in_unc"]], "_theta_xy_out (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_xy_out"]], "_theta_xy_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._theta_xy_out_unc"]], "_total_scatter (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._total_scatter"]], "_total_scatter_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._total_scatter_unc"]], "_track_coefs (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._track_coefs"]], "_track_in (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._track_in"]], "_track_out (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._track_out"]], "_track_start_in (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._track_start_in"]], "_track_start_out (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._track_start_out"]], "_var_order_szs (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._var_order_szs"]], "_vox_zxy_x0_pred_uncs (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._vox_zxy_x0_pred_uncs"]], "_vox_zxy_x0_preds (tomopt.inference.volume.absx0inferrer attribute)": [[2, "tomopt.inference.volume.AbsX0Inferrer._vox_zxy_x0_preds"]], "_weighted_mean() (tomopt.inference.volume.absx0inferrer static method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._weighted_mean"]], "_weighted_rms() (tomopt.inference.volume.absx0inferrer static method)": [[2, "tomopt.inference.volume.AbsX0Inferrer._weighted_rms"]], "_xyz_in (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._xyz_in"]], "_xyz_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._xyz_in_unc"]], "_xyz_out (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._xyz_out"]], "_xyz_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[2, "tomopt.inference.scattering.ScatterBatch._xyz_out_unc"]], "above_gen_hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.above_gen_hits"]], "above_hit_effs (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.above_hit_effs"]], "above_hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.above_hit_uncs"]], "above_hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.above_hits"]], "add_scatters() (tomopt.inference.volume.absintclassifierfromx0 method)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0.add_scatters"]], "add_scatters() (tomopt.inference.volume.absvolumeinferrer method)": [[2, "tomopt.inference.volume.AbsVolumeInferrer.add_scatters"]], "add_scatters() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s.add_scatters"]], "below_gen_hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.below_gen_hits"]], "below_hit_effs (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.below_hit_effs"]], "below_hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.below_hit_uncs"]], "below_hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.below_hits"]], "compute_efficiency() (tomopt.inference.volume.absintclassifierfromx0 method)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.absvolumeinferrer method)": [[2, "tomopt.inference.volume.AbsVolumeInferrer.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.panelx0inferrer method)": [[2, "tomopt.inference.volume.PanelX0Inferrer.compute_efficiency"]], "dphi (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dphi"]], "dphi_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dphi_unc"]], "dtheta (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dtheta"]], "dtheta_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dtheta_unc"]], "dtheta_xy (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dtheta_xy"]], "dtheta_xy_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dtheta_xy_unc"]], "dxy (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dxy"]], "dxy_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.dxy_unc"]], "gen_hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.gen_hits"]], "get_muon_trajectory() (tomopt.inference.scattering.scatterbatch static method)": [[2, "tomopt.inference.scattering.ScatterBatch.get_muon_trajectory"]], "get_prediction() (tomopt.inference.volume.absintclassifierfromx0 method)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0.get_prediction"]], "get_prediction() (tomopt.inference.volume.absvolumeinferrer method)": [[2, "tomopt.inference.volume.AbsVolumeInferrer.get_prediction"]], "get_prediction() (tomopt.inference.volume.absx0inferrer method)": [[2, "tomopt.inference.volume.AbsX0Inferrer.get_prediction"]], "get_prediction() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s.get_prediction"]], "get_scatter_mask() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch.get_scatter_mask"]], "hit_effs (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.hit_effs"]], "hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.hit_uncs"]], "hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.hits"]], "inv_weights (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.inv_weights"]], "muon_efficiency (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_efficiency"]], "muon_mom (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_mom"]], "muon_mom_unc (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_mom_unc"]], "muon_poca_xyz (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_poca_xyz"]], "muon_poca_xyz_unc (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_poca_xyz_unc"]], "muon_probs_per_voxel_zxy (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_probs_per_voxel_zxy"]], "muon_theta_in (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_in"]], "muon_theta_in_unc (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_in_unc"]], "muon_theta_out (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_out"]], "muon_theta_out_unc (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_out_unc"]], "muon_total_scatter (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_total_scatter"]], "muon_total_scatter_unc (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.muon_total_scatter_unc"]], "n_hits_above (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.n_hits_above"]], "n_hits_below (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.n_hits_below"]], "n_mu (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.n_mu"]], "phi_in (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.phi_in"]], "phi_in_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.phi_in_unc"]], "phi_out (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.phi_out"]], "phi_out_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.phi_out_unc"]], "plot_scatter() (tomopt.inference.scattering.scatterbatch method)": [[2, "tomopt.inference.scattering.ScatterBatch.plot_scatter"]], "poca_xyz (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.poca_xyz"]], "poca_xyz_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.poca_xyz_unc"]], "reco_hits (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.reco_hits"]], "scatter_batches (tomopt.inference.volume.denseblockclassifierfromx0s attribute)": [[2, "tomopt.inference.volume.DenseBlockClassifierFromX0s.scatter_batches"]], "scatter_batches (tomopt.inference.volume.panelx0inferrer attribute)": [[2, "tomopt.inference.volume.PanelX0Inferrer.scatter_batches"]], "theta_in (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_in"]], "theta_in_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_in_unc"]], "theta_msc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_msc"]], "theta_msc_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_msc_unc"]], "theta_out (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_out"]], "theta_out_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_out_unc"]], "theta_xy_in (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_xy_in"]], "theta_xy_in_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_xy_in_unc"]], "theta_xy_out (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_xy_out"]], "theta_xy_out_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.theta_xy_out_unc"]], "tomopt.inference.scattering": [[2, "module-tomopt.inference.scattering"]], "tomopt.inference.volume": [[2, "module-tomopt.inference.volume"]], "total_scatter (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.total_scatter"]], "total_scatter_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.total_scatter_unc"]], "track_in (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.track_in"]], "track_out (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.track_out"]], "track_start_in (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.track_start_in"]], "track_start_out (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.track_start_out"]], "vox_zxy_x0_pred_uncs (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.vox_zxy_x0_pred_uncs"]], "vox_zxy_x0_preds (tomopt.inference.volume.absx0inferrer property)": [[2, "tomopt.inference.volume.AbsX0Inferrer.vox_zxy_x0_preds"]], "x02probs() (tomopt.inference.volume.absintclassifierfromx0 method)": [[2, "tomopt.inference.volume.AbsIntClassifierFromX0.x02probs"]], "x0_from_scatters() (tomopt.inference.volume.absx0inferrer static method)": [[2, "tomopt.inference.volume.AbsX0Inferrer.x0_from_scatters"]], "xyz_in (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.xyz_in"]], "xyz_in_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.xyz_in_unc"]], "xyz_out (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.xyz_out"]], "xyz_out_unc (tomopt.inference.scattering.scatterbatch property)": [[2, "tomopt.inference.scattering.ScatterBatch.xyz_out_unc"]], "absmuongenerator (class in tomopt.muon.generation)": [[3, "tomopt.muon.generation.AbsMuonGenerator"]], "e_0 (tomopt.muon.generation.muongenerator2016 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2016.E_0"]], "e_c (tomopt.muon.generation.muongenerator2016 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2016.E_c"]], "i_0 (tomopt.muon.generation.muongenerator2016 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2016.I_0"]], "muonbatch (class in tomopt.muon.muon_batch)": [[3, "tomopt.muon.muon_batch.MuonBatch"]], "muongenerator2015 (class in tomopt.muon.generation)": [[3, "tomopt.muon.generation.MuonGenerator2015"]], "muongenerator2016 (class in tomopt.muon.generation)": [[3, "tomopt.muon.generation.MuonGenerator2016"]], "n (tomopt.muon.generation.muongenerator2016 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2016.N"], [3, "tomopt.muon.generation.MuonGenerator2016.n"]], "p1 (tomopt.muon.generation.muongenerator2015 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2015.P1"]], "p2 (tomopt.muon.generation.muongenerator2015 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2015.P2"]], "p3 (tomopt.muon.generation.muongenerator2015 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2015.P3"]], "p4 (tomopt.muon.generation.muongenerator2015 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2015.P4"]], "p5 (tomopt.muon.generation.muongenerator2015 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2015.P5"]], "rod (tomopt.muon.generation.muongenerator2016 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2016.Rod"]], "_keep_mask (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch._keep_mask"]], "_mom (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._mom"]], "_muon_mass2 (tomopt.muon.generation.absmuongenerator attribute)": [[3, "tomopt.muon.generation.AbsMuonGenerator._muon_mass2"]], "_n_bins_energy (tomopt.muon.generation.absmuongenerator attribute)": [[3, "tomopt.muon.generation.AbsMuonGenerator._n_bins_energy"]], "_n_bins_theta (tomopt.muon.generation.absmuongenerator attribute)": [[3, "tomopt.muon.generation.AbsMuonGenerator._n_bins_theta"]], "_phi (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._phi"]], "_theta (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._theta"]], "_x (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._x"]], "_xy (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._xy"]], "_xyz (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._xyz"]], "_y (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._y"]], "_z (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch._z"]], "append_hits() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.append_hits"]], "copy() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.copy"]], "dtheta() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.dtheta"]], "dtheta_x() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.dtheta_x"]], "dtheta_y() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.dtheta_y"]], "epinv (tomopt.muon.generation.muongenerator2016 attribute)": [[3, "tomopt.muon.generation.MuonGenerator2016.epinv"]], "filter_muons() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.filter_muons"]], "flux() (tomopt.muon.generation.absmuongenerator method)": [[3, "tomopt.muon.generation.AbsMuonGenerator.flux"]], "flux() (tomopt.muon.generation.muongenerator2015 method)": [[3, "tomopt.muon.generation.MuonGenerator2015.flux"]], "flux() (tomopt.muon.generation.muongenerator2016 method)": [[3, "tomopt.muon.generation.MuonGenerator2016.flux"]], "from_volume() (tomopt.muon.generation.absmuongenerator class method)": [[3, "tomopt.muon.generation.AbsMuonGenerator.from_volume"]], "generate_set() (tomopt.muon.generation.absmuongenerator method)": [[3, "tomopt.muon.generation.AbsMuonGenerator.generate_set"]], "get_hits() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.get_hits"]], "get_xy_mask() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.get_xy_mask"]], "mom (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.mom"]], "muons (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.muons"]], "p_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch.p_dim"]], "ph_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch.ph_dim"]], "phi (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.phi"]], "phi_from_theta_xy() (tomopt.muon.muon_batch.muonbatch static method)": [[3, "tomopt.muon.muon_batch.MuonBatch.phi_from_theta_xy"]], "propagate_d() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.propagate_d"]], "propagate_dz() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.propagate_dz"]], "reco_mom (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.reco_mom"]], "remove_upwards_muons() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.remove_upwards_muons"]], "scatter_dtheta_dphi() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.scatter_dtheta_dphi"]], "scatter_dtheta_xy() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.scatter_dtheta_xy"]], "scatter_dxyz() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.scatter_dxyz"]], "snapshot_xyz() (tomopt.muon.muon_batch.muonbatch method)": [[3, "tomopt.muon.muon_batch.MuonBatch.snapshot_xyz"]], "th_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch.th_dim"]], "theta (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta"]], "theta_from_theta_xy() (tomopt.muon.muon_batch.muonbatch static method)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta_from_theta_xy"]], "theta_x (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta_x"]], "theta_x_from_theta_phi() (tomopt.muon.muon_batch.muonbatch static method)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta_x_from_theta_phi"]], "theta_xy (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta_xy"]], "theta_y (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta_y"]], "theta_y_from_theta_phi() (tomopt.muon.muon_batch.muonbatch static method)": [[3, "tomopt.muon.muon_batch.MuonBatch.theta_y_from_theta_phi"]], "tomopt.muon.generation": [[3, "module-tomopt.muon.generation"]], "tomopt.muon.muon_batch": [[3, "module-tomopt.muon.muon_batch"]], "upwards_muons (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.upwards_muons"]], "x (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.x"]], "x_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch.x_dim"]], "xy (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.xy"]], "xyz (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.xyz"]], "xyz_hist (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.xyz_hist"]], "y (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.y"]], "y_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch.y_dim"]], "z (tomopt.muon.muon_batch.muonbatch property)": [[3, "tomopt.muon.muon_batch.MuonBatch.z"]], "z_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[3, "tomopt.muon.muon_batch.MuonBatch.z_dim"]], "callback (class in tomopt.optimisation.callbacks.callback)": [[5, "tomopt.optimisation.callbacks.callback.Callback"]], "costcoefwarmup (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup"]], "cycliccallback (class in tomopt.optimisation.callbacks.cyclic_callbacks)": [[5, "tomopt.optimisation.callbacks.cyclic_callbacks.CyclicCallback"]], "evalmetric (class in tomopt.optimisation.callbacks.eval_metric)": [[5, "tomopt.optimisation.callbacks.eval_metric.EvalMetric"]], "heatmapgif (class in tomopt.optimisation.callbacks.heatmap_gif)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif"]], "hitrecord (class in tomopt.optimisation.callbacks.diagnostic_callbacks)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord"]], "metriclogger (class in tomopt.optimisation.callbacks.monitors)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger"]], "muonresampler (class in tomopt.optimisation.callbacks.data_callbacks)": [[5, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler"]], "nomorenans (class in tomopt.optimisation.callbacks.grad_callbacks)": [[5, "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs"]], "onecycle (class in tomopt.optimisation.callbacks.opt_callbacks)": [[5, "id0"], [5, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle"]], "panelmetriclogger (class in tomopt.optimisation.callbacks.monitors)": [[5, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger"]], "paneloptconfig (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig"]], "panelupdatelimiter (class in tomopt.optimisation.callbacks.detector_callbacks)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter"]], "postwarmupcallback (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback"]], "predhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler"]], "save2hdf5predhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler"]], "scatterrecord (class in tomopt.optimisation.callbacks.diagnostic_callbacks)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord"]], "sigmoidpanelsmoothnessschedule (class in tomopt.optimisation.callbacks.detector_callbacks)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule"]], "volumetargetpredhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler"]], "warmupcallback (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback"]], "_abc_impl (tomopt.optimisation.callbacks.opt_callbacks.onecycle attribute)": [[5, "id4"], [5, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle._abc_impl"]], "_activate() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule._activate"]], "_activate() (tomopt.optimisation.callbacks.opt_callbacks.onecycle method)": [[5, "id5"], [5, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle._activate"]], "_activate() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback._activate"]], "_build_grid_spec() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger._build_grid_spec"]], "_build_grid_spec() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._build_grid_spec"]], "_create_gif() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif._create_gif"]], "_create_gif() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger._create_gif"]], "_open_file() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler._open_file"]], "_plot_current() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif._plot_current"]], "_prep_plots() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger._prep_plots"]], "_prep_plots() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._prep_plots"]], "_reset() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord._reset"]], "_reset() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif._reset"]], "_reset() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger._reset"]], "_reset() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._reset"]], "_reset() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup._reset"]], "_reset() (tomopt.optimisation.callbacks.warmup_callbacks.paneloptconfig method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig._reset"]], "_reset() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback._reset"]], "_set_axes_labels() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._set_axes_labels"]], "_set_smooth() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule._set_smooth"]], "_snapshot_monitor() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger._snapshot_monitor"]], "_to_df() (tomopt.optimisation.callbacks.diagnostic_callbacks.hitrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord._to_df"]], "_to_df() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord._to_df"]], "_write_data() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler._write_data"]], "cat_palette (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.cat_palette"]], "check_mu_batch() (tomopt.optimisation.callbacks.data_callbacks.muonresampler static method)": [[5, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.check_mu_batch"]], "check_warmups() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.check_warmups"]], "check_warmups() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.check_warmups"]], "get_loss_history() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.get_loss_history"]], "get_metric() (tomopt.optimisation.callbacks.eval_metric.evalmetric method)": [[5, "tomopt.optimisation.callbacks.eval_metric.EvalMetric.get_metric"]], "get_preds() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.get_preds"]], "get_record() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.get_record"]], "get_results() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.get_results"]], "h_mid (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.h_mid"]], "lbl_col (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.lbl_col"]], "lbl_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.lbl_sz"]], "leg_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.leg_sz"]], "on_backwards_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_backwards_begin"]], "on_backwards_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.detector_callbacks.panelupdatelimiter method)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.grad_callbacks.nomorenans method)": [[5, "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.warmup_callbacks.paneloptconfig method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig.on_backwards_end"]], "on_epoch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_epoch_begin"]], "on_epoch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.opt_callbacks.onecycle method)": [[5, "id6"], [5, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.paneloptconfig method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_epoch_end"]], "on_mu_batch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_mu_batch_begin"]], "on_mu_batch_begin() (tomopt.optimisation.callbacks.data_callbacks.muonresampler method)": [[5, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.on_mu_batch_begin"]], "on_mu_batch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_mu_batch_end"]], "on_pred_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_pred_begin"]], "on_pred_begin() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_pred_begin"]], "on_pred_begin() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.on_pred_begin"]], "on_pred_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_pred_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_scatter_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.diagnostic_callbacks.hitrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord.on_scatter_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_scatter_end"]], "on_step_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_step_end"]], "on_step_end() (tomopt.optimisation.callbacks.detector_callbacks.panelupdatelimiter method)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter.on_step_end"]], "on_train_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[5, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[5, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.eval_metric.evalmetric method)": [[5, "tomopt.optimisation.callbacks.eval_metric.EvalMetric.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_train_begin"]], "on_train_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_train_end"]], "on_train_end() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[5, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_train_end"]], "on_train_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_train_end"]], "on_volume_batch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_volume_batch_begin"]], "on_volume_batch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_volume_batch_end"]], "on_volume_batch_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_volume_batch_end"]], "on_volume_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_volume_begin"]], "on_volume_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_volume_end"]], "on_volume_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_volume_end"]], "on_volume_end() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[5, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup.on_volume_end"]], "on_x0_pred_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_x0_pred_begin"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.volumetargetpredhandler method)": [[5, "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler.on_x0_pred_end"]], "print_losses() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.print_losses"]], "resample() (tomopt.optimisation.callbacks.data_callbacks.muonresampler static method)": [[5, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.resample"]], "schedule() (tomopt.optimisation.callbacks.opt_callbacks.onecycle method)": [[5, "id7"], [5, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle.schedule"]], "set_wrapper() (tomopt.optimisation.callbacks.callback.callback method)": [[5, "tomopt.optimisation.callbacks.callback.Callback.set_wrapper"]], "style (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.style"]], "tk_col (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.tk_col"]], "tk_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.tk_sz"]], "tomopt.optimisation.callbacks.callback": [[5, "module-tomopt.optimisation.callbacks.callback"]], "tomopt.optimisation.callbacks.cyclic_callbacks": [[5, "module-tomopt.optimisation.callbacks.cyclic_callbacks"]], "tomopt.optimisation.callbacks.data_callbacks": [[5, "module-tomopt.optimisation.callbacks.data_callbacks"]], "tomopt.optimisation.callbacks.detector_callbacks": [[5, "module-tomopt.optimisation.callbacks.detector_callbacks"]], "tomopt.optimisation.callbacks.diagnostic_callbacks": [[5, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"]], "tomopt.optimisation.callbacks.eval_metric": [[5, "module-tomopt.optimisation.callbacks.eval_metric"]], "tomopt.optimisation.callbacks.grad_callbacks": [[5, "module-tomopt.optimisation.callbacks.grad_callbacks"]], "tomopt.optimisation.callbacks.heatmap_gif": [[5, "module-tomopt.optimisation.callbacks.heatmap_gif"]], "tomopt.optimisation.callbacks.monitors": [[5, "module-tomopt.optimisation.callbacks.monitors"]], "tomopt.optimisation.callbacks.opt_callbacks": [[5, "module-0"], [5, "module-tomopt.optimisation.callbacks.opt_callbacks"]], "tomopt.optimisation.callbacks.pred_callbacks": [[5, "module-tomopt.optimisation.callbacks.pred_callbacks"]], "tomopt.optimisation.callbacks.warmup_callbacks": [[5, "module-tomopt.optimisation.callbacks.warmup_callbacks"]], "update_plot() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.update_plot"]], "update_plot() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[5, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger.update_plot"]], "w_mid (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[5, "tomopt.optimisation.callbacks.monitors.MetricLogger.w_mid"]], "wrapper (tomopt.optimisation.callbacks.callback.callback attribute)": [[5, "tomopt.optimisation.callbacks.callback.Callback.wrapper"]], "absdetectorlayer (class in tomopt.volume.layer)": [[6, "tomopt.volume.layer.AbsDetectorLayer"]], "abslayer (class in tomopt.volume.layer)": [[6, "tomopt.volume.layer.AbsLayer"]], "detectorheatmap (class in tomopt.volume.heatmap)": [[6, "tomopt.volume.heatmap.DetectorHeatMap"]], "detectorpanel (class in tomopt.volume.panel)": [[6, "tomopt.volume.panel.DetectorPanel"]], "paneldetectorlayer (class in tomopt.volume.layer)": [[6, "tomopt.volume.layer.PanelDetectorLayer"]], "passivelayer (class in tomopt.volume.layer)": [[6, "tomopt.volume.layer.PassiveLayer"]], "sigmoiddetectorpanel (class in tomopt.volume.panel)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel"]], "volume (class in tomopt.volume.volume)": [[6, "tomopt.volume.volume.Volume"]], "_abc_impl (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._abc_impl"]], "_abc_impl (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._abc_impl"]], "_abc_impl (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._abc_impl"]], "_abc_impl (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._abc_impl"]], "_backward_hooks (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._backward_hooks"]], "_backward_hooks (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._backward_hooks"]], "_backward_hooks (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._backward_hooks"]], "_backward_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._backward_hooks"]], "_backward_hooks (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._backward_hooks"]], "_backward_hooks (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._backward_hooks"]], "_backward_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._backward_hooks"]], "_backward_hooks (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._backward_hooks"]], "_buffers (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._buffers"]], "_buffers (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._buffers"]], "_buffers (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._buffers"]], "_buffers (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._buffers"]], "_buffers (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._buffers"]], "_buffers (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._buffers"]], "_buffers (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._buffers"]], "_buffers (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._buffers"]], "_check_passives() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume._check_passives"]], "_compute_scattering() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer._compute_scattering"]], "_configure_budget() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume._configure_budget"]], "_forward_hooks (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._forward_hooks"]], "_forward_hooks (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._forward_hooks"]], "_forward_hooks (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._forward_hooks"]], "_forward_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._forward_hooks"]], "_forward_hooks (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._forward_hooks"]], "_forward_hooks (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._forward_hooks"]], "_forward_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._forward_hooks"]], "_forward_hooks (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._forward_hooks"]], "_forward_pre_hooks (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._forward_pre_hooks"]], "_get_device() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume._get_device"]], "_is_full_backward_hook (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._is_full_backward_hook"]], "_load_state_dict_post_hooks (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._load_state_dict_post_hooks"]], "_load_state_dict_post_hooks (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._load_state_dict_post_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._load_state_dict_pre_hooks"]], "_modules (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._modules"]], "_modules (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._modules"]], "_modules (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._modules"]], "_modules (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._modules"]], "_modules (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._modules"]], "_modules (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._modules"]], "_modules (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._modules"]], "_modules (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._modules"]], "_n_costs (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._n_costs"]], "_non_persistent_buffers_set (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._non_persistent_buffers_set"]], "_parameters (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._parameters"]], "_parameters (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._parameters"]], "_parameters (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._parameters"]], "_parameters (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._parameters"]], "_parameters (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._parameters"]], "_parameters (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._parameters"]], "_parameters (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._parameters"]], "_parameters (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._parameters"]], "_pdg_scatter() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer._pdg_scatter"]], "_pgeant_scatter() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer._pgeant_scatter"]], "_state_dict_hooks (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume._state_dict_hooks"]], "abs2idx() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer.abs2idx"]], "assign_budget() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.assign_budget"]], "assign_budget() (tomopt.volume.layer.absdetectorlayer method)": [[6, "tomopt.volume.layer.AbsDetectorLayer.assign_budget"]], "assign_budget() (tomopt.volume.layer.paneldetectorlayer method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.assign_budget"]], "assign_budget() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.assign_budget"]], "assign_budget() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.assign_budget"]], "build_edges() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.build_edges"]], "centres (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.centres"]], "clamp_params() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.clamp_params"]], "clamp_params() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.clamp_params"]], "conform_detector() (tomopt.volume.layer.absdetectorlayer method)": [[6, "tomopt.volume.layer.AbsDetectorLayer.conform_detector"]], "conform_detector() (tomopt.volume.layer.paneldetectorlayer method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.conform_detector"]], "device (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.device"]], "draw() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.draw"]], "edges (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.edges"]], "forward() (tomopt.volume.layer.absdetectorlayer method)": [[6, "tomopt.volume.layer.AbsDetectorLayer.forward"]], "forward() (tomopt.volume.layer.abslayer method)": [[6, "tomopt.volume.layer.AbsLayer.forward"]], "forward() (tomopt.volume.layer.paneldetectorlayer method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.forward"]], "forward() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer.forward"]], "forward() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.forward"]], "forward() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.forward"]], "get_cost() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.get_cost"]], "get_cost() (tomopt.volume.layer.absdetectorlayer method)": [[6, "tomopt.volume.layer.AbsDetectorLayer.get_cost"]], "get_cost() (tomopt.volume.layer.paneldetectorlayer method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.get_cost"]], "get_cost() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_cost"]], "get_cost() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.get_cost"]], "get_detectors() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.get_detectors"]], "get_device() (tomopt.volume.layer.paneldetectorlayer static method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.get_device"]], "get_efficiency() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.get_efficiency"]], "get_efficiency() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_efficiency"]], "get_efficiency() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel.get_efficiency"]], "get_gauss() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_gauss"]], "get_hits() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.get_hits"]], "get_hits() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_hits"]], "get_lw_z_size() (tomopt.volume.layer.abslayer method)": [[6, "tomopt.volume.layer.AbsLayer.get_lw_z_size"]], "get_panel_zorder() (tomopt.volume.layer.paneldetectorlayer method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.get_panel_zorder"]], "get_passive_z_range() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.get_passive_z_range"]], "get_passives() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.get_passives"]], "get_rad_cube() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.get_rad_cube"]], "get_resolution() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.get_resolution"]], "get_resolution() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_resolution"]], "get_resolution() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel.get_resolution"]], "get_scaled_xy_span() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_scaled_xy_span"]], "get_xy_mask() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.get_xy_mask"]], "get_xy_mask() (tomopt.volume.panel.detectorpanel method)": [[6, "tomopt.volume.panel.DetectorPanel.get_xy_mask"]], "h (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.h"]], "load_rad_length() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer.load_rad_length"]], "load_rad_length() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.load_rad_length"]], "lookup_passive_xyz_coords() (tomopt.volume.volume.volume method)": [[6, "tomopt.volume.volume.Volume.lookup_passive_xyz_coords"]], "lw (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.lw"]], "mu_abs2idx() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer.mu_abs2idx"]], "passive_size (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.passive_size"]], "plot_map() (tomopt.volume.heatmap.detectorheatmap method)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.plot_map"]], "rad_length (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer.rad_length"]], "rad_length (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer.rad_length"]], "scatter_and_propagate() (tomopt.volume.layer.passivelayer method)": [[6, "tomopt.volume.layer.PassiveLayer.scatter_and_propagate"]], "sig_model() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel.sig_model"]], "smooth (tomopt.volume.panel.sigmoiddetectorpanel property)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel.smooth"]], "target (tomopt.volume.volume.volume property)": [[6, "tomopt.volume.volume.Volume.target"]], "tomopt.volume.heatmap": [[6, "module-tomopt.volume.heatmap"]], "tomopt.volume.layer": [[6, "module-tomopt.volume.layer"]], "tomopt.volume.panel": [[6, "module-tomopt.volume.panel"]], "tomopt.volume.scatter_model": [[6, "module-tomopt.volume.scatter_model"]], "tomopt.volume.volume": [[6, "module-tomopt.volume.volume"]], "training (tomopt.volume.heatmap.detectorheatmap attribute)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.training"]], "training (tomopt.volume.layer.absdetectorlayer attribute)": [[6, "tomopt.volume.layer.AbsDetectorLayer.training"]], "training (tomopt.volume.layer.abslayer attribute)": [[6, "tomopt.volume.layer.AbsLayer.training"]], "training (tomopt.volume.layer.paneldetectorlayer attribute)": [[6, "tomopt.volume.layer.PanelDetectorLayer.training"]], "training (tomopt.volume.layer.passivelayer attribute)": [[6, "tomopt.volume.layer.PassiveLayer.training"]], "training (tomopt.volume.panel.detectorpanel attribute)": [[6, "tomopt.volume.panel.DetectorPanel.training"]], "training (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[6, "tomopt.volume.panel.SigmoidDetectorPanel.training"]], "training (tomopt.volume.volume.volume attribute)": [[6, "tomopt.volume.volume.Volume.training"]], "x (tomopt.volume.heatmap.detectorheatmap property)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.x"]], "x (tomopt.volume.panel.detectorpanel property)": [[6, "tomopt.volume.panel.DetectorPanel.x"]], "y (tomopt.volume.heatmap.detectorheatmap property)": [[6, "tomopt.volume.heatmap.DetectorHeatMap.y"]], "y (tomopt.volume.panel.detectorpanel property)": [[6, "tomopt.volume.panel.DetectorPanel.y"]], "yield_zordered_panels() (tomopt.volume.layer.paneldetectorlayer method)": [[6, "tomopt.volume.layer.PanelDetectorLayer.yield_zordered_panels"]]}})