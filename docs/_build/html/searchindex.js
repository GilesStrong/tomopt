Search.setIndex({"docnames": ["index", "installation", "modules", "tomopt", "tomopt.benchmarks", "tomopt.benchmarks.ladle_furnace", "tomopt.benchmarks.small_walls", "tomopt.benchmarks.u_lorry", "tomopt.inference", "tomopt.muon", "tomopt.optimisation", "tomopt.optimisation.callbacks", "tomopt.optimisation.data", "tomopt.optimisation.loss", "tomopt.optimisation.wrapper", "tomopt.plotting", "tomopt.volume"], "filenames": ["index.rst", "installation.rst", "modules.rst", "tomopt.rst", "tomopt.benchmarks.rst", "tomopt.benchmarks.ladle_furnace.rst", "tomopt.benchmarks.small_walls.rst", "tomopt.benchmarks.u_lorry.rst", "tomopt.inference.rst", "tomopt.muon.rst", "tomopt.optimisation.rst", "tomopt.optimisation.callbacks.rst", "tomopt.optimisation.data.rst", "tomopt.optimisation.loss.rst", "tomopt.optimisation.wrapper.rst", "tomopt.plotting.rst", "tomopt.volume.rst"], "titles": ["TomOpt: Differential Muon Tomography Optimisation", "Installation", "tomopt", "tomopt package", "tomopt.benchmarks package", "tomopt.benchmarks.ladle_furnace package", "tomopt.benchmarks.small_walls package", "tomopt.benchmarks.u_lorry package", "tomopt.inference package", "tomopt.muon package", "tomopt.optimisation package", "tomopt.optimisation.callbacks package", "tomopt.optimisation.data package", "tomopt.optimisation.loss package", "tomopt.optimisation.wrapper package", "tomopt.plotting package", "tomopt.volume package"], "terms": {"instal": 0, "test": [0, 5, 7, 8, 11, 13], "extern": 0, "repo": 0, "author": 0, "volum": [0, 1, 3, 7, 9, 11, 12, 13, 14, 15], "infer": [0, 1, 3, 9, 11, 13, 14, 16], "plot": [0, 3, 8, 11, 16], "benchmark": [0, 3], "muon": [3, 5, 8, 11, 14, 15, 16], "optimis": [3, 16], "class_to_x0pr": 3, "arrai": [3, 9, 11, 15], "id2x0": 3, "sourc": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "convert": [3, 5, 8, 13], "class": [1, 3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16], "x0": [3, 5, 8, 11, 12, 13, 14, 15, 16], "predict": [3, 5, 8, 11, 12, 13, 14], "us": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16], "map": [3, 9, 11, 13, 14], "defin": [3, 9, 11, 16], "paramet": [3, 5, 8, 9, 11, 12, 13, 14, 15, 16], "ndarrai": [3, 9, 11, 14, 15], "integ": [3, 8, 13], "id": [3, 11, 13, 16], "dict": [3, 8, 9, 11, 13, 14, 16], "int": [3, 5, 8, 9, 11, 12, 13, 14, 16], "float": [3, 8, 9, 11, 12, 13, 14, 16], "valu": [3, 8, 9, 11, 12, 13, 15, 16], "return": [3, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16], "type": [3, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16], "new": [1, 3, 5, 8, 9, 11, 12, 14, 16], "jacobian": 3, "y": [3, 5, 8, 9, 15, 16], "x": [3, 5, 8, 9, 15, 16], "create_graph": 3, "fals": [3, 5, 9, 11, 13, 14, 16], "allow_unus": 3, "true": [3, 5, 8, 9, 11, 12, 13, 14, 15, 16], "comput": [1, 3, 5, 8, 9, 11, 13, 14, 16], "dy": 3, "dx": 3, "respect": 3, "variabl": [3, 8, 9, 14], "can": [1, 3, 8, 9, 11, 12, 13, 14, 16], "have": [1, 3, 5, 8, 9, 11, 12, 13, 14, 16], "multipl": [3, 8, 11, 13, 14, 16], "element": [3, 9, 16], "If": [3, 8, 9, 11, 12, 13, 14, 16], "ha": [3, 5, 8, 9, 11, 16], "i": [1, 3, 5, 8, 9, 11, 12, 13, 14, 15, 16], "vectoris": 3, "via": [1, 3, 5, 8, 9, 11, 13, 14, 16], "vmap": 3, "tensor": [3, 5, 6, 8, 9, 11, 12, 13, 14, 16], "differenti": [3, 8, 11, 16], "depend": [1, 3, 13], "bool": [3, 5, 8, 11, 12, 13, 14, 16], "graph": 3, "deriv": 3, "construct": 3, "allow": [3, 8, 11, 16], "higher": [3, 8, 11, 13, 16], "order": [3, 8, 11, 12, 13, 14, 15, 16], "product": 3, "default": [1, 3, 9, 11, 13, 14, 16], "specifi": [3, 9, 11, 12, 13, 14, 16], "input": 3, "were": [3, 8, 9], "when": [1, 3, 5, 8, 11, 12, 13, 14, 16], "output": [3, 13], "therefor": [3, 16], "grad": 3, "alwai": [3, 8, 12, 16], "shape": [3, 9, 13], "x0_from_mixtur": 3, "densiti": 3, "weight_frac": 3, "none": [3, 5, 8, 9, 11, 12, 13, 14, 15, 16], "volume_frac": 3, "mixtur": 3, "non": [3, 16], "chemic": 3, "bond": 3, "materi": [3, 8, 11, 12, 13, 16], "base": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16], "http": [1, 3, 8, 11, 16], "cd": [1, 3], "cern": 3, "ch": 3, "record": [3, 8, 9, 11, 14, 15, 16], "1279627": 3, "file": [3, 11, 14], "ph": 3, "ep": 3, "tech": 3, "note": 3, "2010": 3, "013": 3, "pdf": [3, 8, 16], "union": [3, 9, 11, 12, 13, 14, 16], "list": [1, 3, 9, 11, 12, 14, 16], "metr": [3, 8, 9, 11, 16], "kg": 3, "m": [1, 3, 5, 9, 16], "3": [1, 3, 8, 9, 13, 16], "rel": [3, 8, 13, 16], "amount": [3, 8, 9, 11], "each": [1, 3, 8, 9, 11, 13, 14, 16], "weight": [3, 5, 8, 13, 16], "The": [1, 3, 8, 11, 12, 13, 14, 16], "x0targs_to_classtarg": 3, "x02id": [3, 11, 13], "target": [3, 8, 11, 12, 13, 14, 16], "To": [3, 8], "account": [3, 8, 11, 14, 16], "point": [3, 8, 9, 11, 14, 16], "precis": [3, 8, 9, 11, 14, 16], "ar": [1, 3, 8, 9, 11, 12, 13, 14, 15, 16], "which": [3, 8, 9, 11, 12, 13, 14, 16], "closest": 3, "kei": [1, 3, 9, 11], "thi": [1, 3, 5, 8, 9, 11, 12, 13, 15, 16], "mean": [3, 8, 11, 13, 14, 16], "method": [3, 5, 8, 9, 11, 12, 13, 14, 16], "cannot": [3, 8], "detect": [3, 11, 16], "miss": 3, "from": [1, 3, 8, 9, 11, 12, 13, 14, 16], "even": [3, 11], "isn": 3, "t": [3, 8, 9, 16], "modifi": [3, 9], "place": [3, 8, 9, 11, 16], "genscatterbatch": 8, "mu": [8, 11, 14, 16], "scatterbatch": [5, 8, 14], "inform": [8, 9, 13, 14, 16], "hit": [5, 8, 9, 11, 15, 16], "incom": [8, 11, 16], "outgo": 8, "trajectori": [8, 9, 14, 16], "fit": [5, 8, 11, 14, 16], "intend": [8, 16], "diagnost": 8, "purpos": 8, "onli": [5, 7, 8, 9, 11, 12, 14, 16], "track": [8, 11], "carri": 8, "gradient": [8, 11, 14], "w": [8, 9, 16], "r": [1, 8, 9, 16], "detector": [5, 8, 9, 11, 13, 14, 15, 16], "except": [8, 9, 16], "z": [5, 8, 9, 11, 12, 14, 15, 16], "posit": [8, 9, 11, 12, 14, 15, 16], "linear": 8, "perform": [8, 13, 16], "separ": [1, 8], "all": [1, 8, 9, 11, 12, 13, 14, 16], "associ": [1, 8, 9, 11, 14], "layer": [8, 9, 11, 12, 13, 14, 15], "group": [8, 11, 16], "indic": [8, 11, 16], "po": [8, 9, 16], "attribut": [8, 9, 11, 16], "current": [8, 9, 11, 13, 16], "expect": [8, 11, 13, 16], "abov": [5, 8, 9, 16], "passiv": [1, 5, 8, 9, 11, 13, 14, 15, 16], "those": [8, 9, 11, 16], "below": [5, 8, 9, 16], "an": [8, 11, 12, 13, 16], "analyt": 8, "likelihood": [8, 13], "minimis": 8, "uncertainti": [5, 8], "consid": [8, 11], "doe": [8, 9, 11, 16], "e": [1, 8, 9, 11, 13, 15, 16], "g": [1, 8, 9, 11, 13, 16], "third": 8, "set": [1, 8, 9, 11, 12, 13, 14, 16], "sinc": [8, 14, 16], "split": 8, "n_hits_abov": 8, "One": 8, "instanc": [1, 8, 16], "should": [5, 8, 9, 11, 12, 13, 14, 16], "creat": [1, 8, 9, 11], "muonbatch": [8, 9, 11, 14, 16], "As": [8, 11], "part": [8, 11, 16], "initialis": [8, 9, 11, 12, 14, 16], "filter": 8, "_filter_scatt": 8, "avoid": [8, 11], "nan": [8, 11, 16], "inf": 8, "result": [1, 8, 9, 16], "direct": [8, 9], "chang": [8, 9, 16], "mani": [1, 8, 9, 13], "requir": [1, 8, 9, 14, 16], "further": 8, "downstream": 8, "lazi": 8, "basi": 8, "memois": 8, "first": [1, 8, 11, 13, 15], "request": [1, 8, 14], "store": [8, 9, 14, 16], "case": [8, 13], "dtheta": [8, 9], "dphi": 8, "total": [5, 8, 11, 12, 13, 14, 16], "under": [8, 16], "assumpt": 8, "small": [8, 16], "angular": [8, 9], "necessari": [8, 14], "here": [1, 8, 11, 16], "loss": [8, 10, 11, 14], "undergo": [8, 16], "theta": [8, 9], "phi": [8, 9], "0": [5, 6, 7, 8, 9, 11, 14, 16], "pi": [8, 9], "neg": [5, 8, 9, 13], "becom": 8, "one": [8, 11, 13, 14, 16], "tell": 8, "whether": [8, 11, 13, 16], "instead": [8, 9, 11, 13, 16], "larg": [8, 9, 11, 13], "occur": [8, 14], "total_scatt": 8, "quadratur": 8, "sum": [8, 13, 16], "three": [8, 16], "both": [8, 12, 13, 14, 16], "hypothes": 8, "final": [5, 8, 11, 13], "chosen": 8, "hypothesi": 8, "been": [5, 8, 11], "found": [8, 11, 16], "good": [1, 8], "through": [8, 9, 11, 16], "travel": [8, 9], "_compute_track": [], "object": [8, 9, 11, 12, 14, 16], "effici": [5, 8, 9, 11, 16], "static": [5, 8, 9, 11, 16], "_compute_dtheta_dphi_scatt": [], "theta_in": 8, "phi_in": 8, "theta_out": 8, "phi_out": 8, "n": [1, 8, 9, 16], "1": [1, 5, 6, 8, 9, 11, 13, 14, 16], "angl": 9, "str": [8, 9, 11, 12, 13, 14, 15, 16], "dictionari": [8, 9, 11, 13, 14], "_compute_out_var_unc": [], "var": [], "due": [], "error": [11, 13], "propag": [9, 11, 16], "triangl": [], "matrix": [], "assum": [1, 5, 8, 13, 16], "zero": [11, 14, 16], "off": [9, 13], "diagon": [], "warn": [], "un": [], "correl": [], "probabl": [5, 8, 13, 16], "ok": [], "behaviour": [], "_compute_phi": [], "xy": [8, 9, 11, 12, 14, 15, 16], "compon": [11, 13, 16], "vector": 8, "_compute_scatt": [], "normal": [14, 16], "them": [11, 16], "extract": [], "handl": 1, "locat": [5, 8, 11, 14, 16], "adapt": 11, "misc": [], "3334866": [], "titl": [], "between": [8, 9, 11, 13, 16], "two": [5, 8, 16], "line": [], "brian": [], "math": [], "stackexchang": [], "com": 1, "user": [1, 8, 11, 14, 16], "72614": [], "howpublish": [], "mathemat": [], "stack": [9, 16], "exchang": [], "url": [], "q": [], "version": [1, 13], "2019": [8, 16], "08": [], "26": [], "eprint": [], "_compute_theta": [], "xyz": [5, 8, 9, 16], "_compute_theta_msc": [], "p": [8, 9, 11, 14], "cosin": [], "dot": [], "2": [8, 9, 11, 16], "accord": [1, 8, 9, 11, 14, 16], "resolut": [11, 16], "_compute_xyz_in": [], "level": [5, 8, 16], "top": [8, 16], "_compute_xyz_out": [], "bottom": [8, 11, 15, 16], "_cross_track": [], "option": [8, 9, 11, 12, 13, 14, 15, 16], "_dphi": [], "_dphi_unc": [], "_dtheta": [], "_dtheta_unc": [], "_dtheta_xi": [], "_dtheta_xy_unc": [], "_dxy": [], "_dxy_unc": [], "_extract_hit": [], "take": [11, 16], "combin": [1, 8, 11], "singl": [8, 9, 11, 12, 13, 14, 16], "might": [], "seem": [], "heavi": [], "hand": 8, "invalid": [], "extrem": 9, "spoil": [], "other": [11, 13, 14, 16], "remov": 9, "ani": [9, 11, 14, 16], "least": [5, 8, 9, 13], "high": [11, 13], "some": [11, 13, 16], "configur": [13, 14, 16], "tini": [], "best": [], "manual": [1, 8, 9, 16], "unneed": [], "gain": [], "increas": [11, 13, 15], "number": [5, 8, 9, 11, 12, 13, 14, 16], "avail": [11, 16], "criteria": [], "parallel": [], "far": 13, "its": [1, 5, 9, 11, 12, 13, 16], "1e10": [], "_gen_hit": [], "_hit_eff": [], "_hit_unc": [], "_phi_in": [], "_phi_in_unc": [], "_phi_out": [], "_phi_out_unc": [], "_poca_xyz": [], "_poca_xyz_unc": [], "_reco_hit": [], "_set_dtheta_dphi_scatt": [], "simultan": [], "done": [], "_theta_in": [], "_theta_in_unc": [], "_theta_out": [], "_theta_out_unc": [], "_theta_xy_in": [], "_theta_xy_in_unc": [], "_theta_xy_out": [], "_theta_xy_out_unc": [], "_total_scatt": [], "_total_scatter_unc": [], "_track_coef": [], "_track_in": [], "_track_out": [], "_track_start_in": [], "_track_start_out": [], "_xyz_in": [], "_xyz_in_unc": [], "_xyz_out": [], "_xyz_out_unc": [], "properti": [5, 8, 9, 16], "above_gen_hit": 8, "above_hit_eff": 8, "eff": [5, 6, 8, 16], "above_hit_unc": 8, "above_hit": 8, "below_gen_hit": 8, "below_hit_eff": 8, "below_hit_unc": 8, "below_hit": 8, "delta": 8, "dphi_unc": 8, "dtheta_unc": 8, "dtheta_xi": [8, 9], "theta_xi": [8, 9], "zx": 8, "zy": 8, "plane": [8, 9, 16], "dtheta_xy_unc": 8, "dxy": 8, "distanc": [8, 9, 16], "poca": [5, 8, 11, 15], "dxy_unc": 8, "gen_hit": 8, "get_muon_trajectori": 8, "unc": 8, "lw": [8, 16], "whilst": [1, 8, 11, 16], "No": 8, "maximis": 8, "length": [8, 11, 12, 16], "width": [8, 12, 16], "start": [8, 9, 11, 16], "initi": [8, 9, 11, 16], "vec": 8, "get_scatter_mask": 8, "boolean": [8, 9, 11, 16], "where": [8, 9, 11, 12, 13, 14, 16], "within": [1, 8, 9, 11, 14, 16], "hit_eff": 8, "hit_unc": 8, "get_hit": [8, 9, 16], "per": [5, 8, 11, 12, 13, 14, 16], "n_hits_below": 8, "phi_in_unc": 8, "phi_out_unc": 8, "plot_scatt": 8, "idx": 8, "represent": [8, 11], "index": [8, 9, 16], "poca_xyz": 8, "poca_xyz_unc": 8, "reco_hit": 8, "theta_in_unc": 8, "theta_msc": 8, "theta_msc_unc": 8, "theta_out_unc": 8, "theta_xy_in": 8, "decompos": 8, "theta_xy_in_unc": 8, "theta_xy_out": 8, "theta_xy_out_unc": 8, "total_scatter_unc": 8, "track_in": 8, "track_out": 8, "track_start_in": 8, "track_start_out": 8, "xyz_in": 8, "xyz_in_unc": 8, "xyz_out": 8, "xyz_out_unc": 8, "absintclassifierfromx0": [5, 8], "partial_x0_inferr": [5, 8], "output_prob": [5, 8], "class2float": 8, "absvolumeinferr": [5, 8, 14], "abstract": [8, 9, 12, 13, 14, 16], "multiclass": [8, 13], "classif": [8, 13], "voxelwis": [5, 8, 11, 13, 15], "inherit": [5, 8, 9, 11, 13, 14, 16], "must": [1, 5, 8, 11, 13, 16], "provid": [8, 9, 11, 12, 13, 14, 16], "wai": [1, 8], "dimens": 8, "basic": 8, "inferr": [5, 8, 11], "raw": 8, "most": [8, 15], "In": [8, 9, 11, 14], "latter": [8, 16], "process": [8, 11, 16], "function": [8, 9, 11, 12, 13, 14, 16], "absx0inferr": 8, "partial": 8, "instati": 8, "pass": [8, 9, 11, 16], "probabilit": 8, "otherwis": [1, 8, 11, 12, 13, 16], "argmax": 8, "over": [8, 9, 11, 13, 14, 16], "last": [8, 9, 11], "callabl": [8, 12, 14, 16], "_abc_impl": [], "_abc_data": [], "_reset_var": [], "reset": [], "made": [5, 11, 13], "ad": [8, 9, 11, 16], "batch": [5, 8, 9, 11, 14, 16], "add_scatt": 8, "append": [8, 11, 14], "vairabl": 8, "get_predict": [5, 8], "call": [8, 9, 11, 12, 14, 16], "": [8, 9, 11, 14, 16], "up": [1, 8, 11, 13, 14, 16], "compute_effici": [5, 8], "compuat": 8, "implement": [8, 9, 11, 14, 16], "contain": [5, 8, 9, 11, 12, 13, 14, 16], "whose": [1, 5, 8], "predicion": 8, "dure": [1, 8, 11, 12, 16], "inv_weight": [], "pred": [5, 8, 13, 14, 15], "x02prob": [5, 8], "vox_pr": [5, 8], "overrid": [5, 8, 9, 11, 13, 14, 16], "fed": 8, "given": [5, 8, 9, 12, 13], "individu": [5, 8, 13], "accompani": [], "invers": 8, "design": [11, 13, 14, 16], "divid": 8, "targ": [], "tupl": [9, 11, 12, 14, 16], "everi": [8, 9, 11, 12, 13, 14, 16], "voxel": [5, 8, 11, 12, 13, 16], "approach": [8, 16], "assign": [8, 14, 16], "entireti": 8, "pdg": [8, 16], "model": [1, 8, 9, 11, 16], "describ": [8, 16], "lbl": [8, 16], "gov": [8, 16], "review": [8, 16], "rpp2018": [8, 16], "rev": [8, 16], "passag": [8, 16], "particl": [8, 16], "matter": [8, 16], "onc": [8, 9, 11], "proce": [8, 14], "thusli": 8, "For": [1, 8, 9, 11, 13, 14, 16], "p_ij": 8, "wa": [8, 11, 13], "j": 8, "These": [8, 13], "integr": 8, "uncorrel": [8, 16], "gaussian": [8, 14, 16], "centr": [8, 11, 12, 13, 16], "scale": [8, 14], "equal": [8, 9, 13, 16], "multipli": [8, 13, 16], "e_i": 8, "w_ij": 8, "give": 8, "x_0": 8, "left": [8, 16], "frac": 8, "0136": 8, "mathrm": 8, "rm": 8, "right": 8, "co": 8, "bar": 8, "_": 8, "tot": 8, "differ": [8, 9, 11, 12, 16], "whole": [8, 14], "popul": 8, "rmss": 8, "term": [8, 13], "side": 8, "equat": 8, "addit": [8, 9, 13], "varianc": 8, "squar": [8, 13, 16], "x0_j": 8, "NOT": [8, 9, 16], "natur": 8, "log": [8, 11, 13], "simplifi": 8, "code": [8, 13], "reli": [8, 16], "heavili": 8, "care": [8, 16], "privat": [1, 8], "_combine_scatt": [], "data": [1, 10, 11, 14, 16], "so": 11, "entri": [], "out": 13, "aid": [], "pair": [9, 11], "retriev": [9, 11, 16], "_get_voxel_zxy_x0_pred_unc": [], "incorrect": [], "todo": [8, 11, 13, 15, 16], "correct": [1, 16], "incredibli": [], "slow": [], "recommend": [1, 8, 16], "_get_voxel_zxy_x0_pr": [], "spread": [], "_muon_effici": [], "_muon_probs_per_voxel_zxi": [], "_muon_scatter_var_unc": [], "_muon_scatter_var": [], "_n_mu": [], "_set_var_dimens": [], "_var_order_sz": [], "tot_scatt": [], "mom": [8, 9, 14], "_vox_zxy_x0_pred_unc": [], "_vox_zxy_x0_pr": [], "_weighted_mean": [], "wgt": [], "row": [], "_weighted_rm": [], "root": 1, "muon_effici": [5, 8], "muon_mom": 8, "momenta": [8, 9], "muon_mom_unc": 8, "muon_poca_xyz": [5, 8], "muon_poca_xyz_unc": [5, 8], "muon_probs_per_voxel_zxi": 8, "don": 8, "muon_theta_in": 8, "muon_theta_in_unc": 8, "muon_theta_out": 8, "muon_theta_out_unc": 8, "muon_total_scatt": 8, "muon_total_scatter_unc": 8, "n_mu": [5, 8], "includ": [5, 8, 11, 13, 16], "vox_zxy_x0_pred_unc": 8, "Not": 8, "long": [8, 16], "calcul": [8, 11], "unit": [5, 7, 8, 11, 13, 16], "vox_zxy_x0_pr": 8, "x0_from_scatt": 8, "deltaz": 8, "invert": 8, "height": [5, 8, 13, 16], "momentum": [8, 9, 11, 14], "estim": 8, "denseblockclassifierfromx0": 8, "n_block_voxel": 8, "use_avgpool": 8, "cut_coef": 8, "10000": [5, 6, 8], "ratio_offset": 8, "ratio_coef": 8, "presenc": 8, "denser": 8, "transform": [8, 11], "wise": [8, 11], "binari": [8, 13], "statist": 8, "dens": 8, "block": [8, 12, 13, 16], "against": [8, 11, 12], "light": 8, "background": [8, 12], "bkg": 8, "blk": 8, "sigma": [8, 16], "b": [1, 8], "lowest": [8, 16], "remain": [8, 16], "rescal": [8, 13, 16], "coeffici": [8, 11, 13, 14, 16], "offset": 8, "constrain": 8, "beween": 8, "present": [8, 11, 12], "nearer": 8, "form": [8, 16], "contigu": [8, 16], "blur": 8, "stride": 8, "kernel": [5, 8], "size": [6, 8, 12, 14, 16], "averag": [5, 8, 11, 13], "pool": 8, "actual": [8, 11, 16], "cut": 8, "sigmoid": [8, 13, 16], "kth": 8, "statisitc": 8, "also": [1, 8, 9, 14, 16], "occupi": [8, 16], "wether": 8, "prediciton": 8, "sharp": 8, "sharper": [8, 11, 16], "constant": [8, 9], "ratio": [8, 16], "scatter_batch": [], "panelx0inferr": [8, 14], "paneldetectorlay": [8, 11, 16], "absmuongener": [9, 11, 14], "x_rang": 9, "y_rang": 9, "fixed_mom": 9, "5": [6, 7, 9, 13, 16], "energy_rang": 9, "500": 9, "theta_rang": 9, "2217304763960306": 9, "core": 9, "flux": 9, "generate_set": 9, "kinemat": 9, "sampl": [9, 11, 16], "uniformli": 9, "region": 9, "rang": [9, 11, 14, 16], "absolut": [9, 13, 16], "refer": [9, 14], "frame": [9, 16], "gev": 9, "radian": 9, "_muon_mass2": [], "01116369210198225": [], "_n_bins_energi": [], "200": [], "_n_bins_theta": [], "energi": 9, "suppli": [9, 14, 16], "classmethod": [9, 14], "from_volum": [9, 14], "min_angl": 9, "2617993877991494": 9, "heurist": 9, "d": 9, "balanc": [9, 13], "trade": 9, "realism": 9, "minimum": [1, 9, 16], "boundari": [9, 11, 14, 16], "would": [9, 16], "directli": 9, "toward": 9, "n_muon": 9, "rank": 9, "2pi": 9, "muongenerator2015": 9, "guan": 9, "et": 9, "al": 9, "2015": 9, "arxiv": [9, 11], "1509": 9, "06176": 9, "p1": 9, "102573": 9, "p2": 9, "068287": 9, "p3": 9, "958633": 9, "p4": 9, "0407253": 9, "p5": 9, "817285": 9, "gaisser": 9, "formula": 9, "cosmic": 9, "np": 9, "incid": 9, "muongenerator2016": 9, "shukla": 9, "sanskrith": 9, "2018": 9, "1606": 9, "06907": 9, "e_0": 9, "87": 9, "e_c": 9, "i_0": 9, "88": 9, "38": 9, "1938": 9, "rod": 9, "174": 9, "epinv": 9, "00117096018735363": 9, "xy_p_theta_phi": [9, 11], "init_z": 9, "devic": [5, 6, 9, 14, 16], "cpu": [5, 6, 9, 14, 16], "own": 9, "coordin": [9, 11], "axi": [9, 16], "upward": 9, "mai": [9, 11, 16], "automat": [9, 11, 16], "anticlockwis": 9, "updat": [5, 9, 11, 14, 16], "propagate_dz_dz": 9, "dz": 9, "propagate_dz_d": 9, "scatter_dxi": 9, "dx_vol": 9, "dy_vol": 9, "mask": [9, 16], "shift": 9, "scatter_dtheta_dphi": 9, "dtheta_vol": 9, "dphi_vol": 9, "alter": 9, "eventu": 9, "extend": [9, 11], "about": [9, 11, 13], "reco_mom": 9, "howev": [9, 16], "simul": [9, 16], "measur": 9, "By": [9, 16], "snapshot_xyz": 9, "time": [1, 8, 9, 13, 16], "xyz_hist": 9, "append_hit": 9, "_hit": 9, "_keep_mask": [], "_mom": [], "_phi": [], "_theta": [], "_x": [], "_xy": [], "_xyz": [], "_y": [], "_z": [], "reco_xi": [9, 16], "gen_xi": [9, 16], "either": [9, 11, 12, 16], "copi": 9, "detach": 9, "clone": [1, 9], "theta_ref": 9, "compar": [9, 13, 15], "dtheta_x": 9, "theta_ref_x": 9, "theta_x": 9, "dtheta_i": 9, "theta_ref_i": 9, "theta_i": 9, "filter_muon": 9, "keep_mask": 9, "along": 9, "xy_low": 9, "xy_high": 9, "eas": 9, "n_hit": 9, "lower": [9, 11, 12, 13, 16], "limit": [9, 11], "upper": 9, "get_xy_mask": [9, 16], "correspond": [9, 13, 16], "p_dim": 9, "ph_dim": 9, "phi_from_theta_xi": 9, "work": [1, 9, 14], "xz": 9, "yz": 9, "anti": 9, "clockwis": 9, "propagate_d": 9, "flight": 9, "move": [9, 11, 16], "propagate_dz": 9, "afterward": [9, 16], "thei": [9, 11, 12, 13, 14, 16], "downward": 9, "remove_upwards_muon": 9, "after": [1, 5, 9, 11, 13, 14, 16], "scatter": [5, 9, 11, 14, 16], "run": [1, 5, 9, 11, 14, 16], "make": [1, 9, 11, 15, 16], "sure": [1, 9], "complet": [9, 11], "longer": 9, "scatter_dtheta_xi": 9, "dtheta_x_vol": 9, "dtheta_y_vol": 9, "scatter_dxyz": 9, "dz_vol": 9, "displac": 9, "th_dim": 9, "4": [6, 9, 16], "theta_from_theta_xi": 9, "theta_x_from_theta_phi": 9, "theta_y_from_theta_phi": 9, "upwards_muon": 9, "x_dim": 9, "y_dim": 9, "z_dim": 9, "callback": [5, 10, 14], "wrapper": [10, 11], "valid": [1, 11, 14], "absvolumewrapp": [11, 14, 16], "interject": [11, 14], "variou": [11, 14, 16], "do": [11, 16], "noth": [11, 16], "pleas": [11, 16], "check": [1, 11, 16], "see": [11, 16], "exactli": 11, "write": [1, 11, 14], "volumewrapp": [11, 16], "Their": 11, "fit_param": 11, "fitparam": [11, 14], "style": 11, "It": [11, 13, 16], "read": [11, 14], "rather": [11, 16], "than": [11, 12, 13, 16], "on_": [11, 14], "_begin": [11, 14], "_end": [11, 14], "full": [11, 14, 16], "loop": [11, 14, 16], "set_wrapp": [11, 14], "on_train_begin": [5, 11, 14], "epoch": [11, 12, 14], "n_epoch": [11, 14], "state": [11, 13, 14], "train": [1, 5, 11, 12, 13, 14, 16], "on_epoch_begin": [11, 14], "enumer": [11, 14], "trn_passiv": [11, 14], "passive_b": [11, 14], "on_volume_batch_begin": [5, 11, 14], "load": [1, 11, 12, 14, 16], "on_volume_begin": [11, 14], "muon_batch": [11, 14], "n_mu_per_volum": [11, 14], "mu_b": [11, 14], "on_mu_batch_begin": [11, 14], "irradi": [11, 14], "on_scatter_end": [11, 14], "on_mu_batch_end": [11, 14], "on_x0_pred_begin": [11, 14], "overal": [11, 13, 14], "on_x0_pred_end": [5, 11, 14], "cost": [11, 13, 14, 16], "add": [11, 13, 14, 16], "on_volume_batch_end": [5, 11, 14], "on_backwards_begin": [11, 14], "backpropag": [5, 11, 14], "on_backwards_end": [5, 11, 14], "viii": [11, 14], "ensur": [11, 14, 16], "physic": [11, 14, 16], "absdetectorlay": [11, 14, 16], "conform_detector": [11, 14, 16], "viv": [11, 14], "len": [11, 14], "break": [11, 14], "on_epoch_end": [11, 14], "val_pass": [11, 14], "on_train_end": [11, 14], "yet": [5, 11], "begin": [5, 11, 16], "end": [5, 11], "on_pred_begin": 11, "mode": [11, 14, 16], "on_pred_end": 11, "finish": 11, "latest": 11, "on_step_end": 11, "layout": [5, 11, 12, 16], "on_volume_end": 11, "befor": [1, 5, 11], "cycliccallback": [11, 14], "muonresampl": 11, "resampl": 11, "impact": 11, "check_mu_batch": 11, "determin": [11, 12], "prior": [11, 13, 16], "realist": 11, "gen": 11, "until": [11, 14], "gener": [1, 11, 12, 14, 16], "replac": 11, "hitrecord": [11, 15], "scatterrecord": [11, 15], "get_record": [11, 15], "plot_hit_dens": [11, 15], "distinct": 11, "_to_df": [], "save": [8, 11, 14, 15], "panda": 11, "datafram": [11, 15], "insid": [11, 16], "plot_scatter_dens": [11, 15], "_reset": [], "prepar": [11, 16], "as_df": 11, "access": [1, 11], "evalmetr": [11, 14], "lower_metric_bett": 11, "name": [1, 5, 11, 12, 14], "main_metr": 11, "metric": 11, "metriclogg": [11, 14], "live": 11, "feedback": 11, "main": [11, 16], "better": [11, 16], "get_metr": 11, "nomorenan": 11, "introduc": 11, "need": [1, 11, 13, 14, 16], "heatmapgif": 11, "gif_filenam": 11, "heatmap": 11, "gif": 11, "savenam": [8, 11, 14, 15], "savepath": 11, "_create_gif": [], "imag": 11, "_plot_curr": [], "optimisation_histori": 11, "gif_length": 11, "10": [5, 6, 11, 13, 16], "show_plot": 11, "show": 11, "varieti": 11, "help": 11, "highlight": 11, "problem": 11, "hyper": 11, "without": 11, "print": [11, 13], "histori": 11, "get_loss_histori": 11, "addition": 11, "control": [1, 11, 13], "second": 11, "notebook": [11, 16], "_build_grid_spec": [], "gridspec": [], "snapshot": 11, "_prep_plot": [], "_snapshot_monitor": [], "cat_palett": 11, "tab10": 11, "get": 11, "get_result": 11, "loaded_best": 11, "h_mid": 11, "8": [1, 5, 7, 11, 13], "lbl_col": 11, "black": 11, "lbl_sz": 11, "24": 11, "leg_sz": 11, "16": 11, "info": 11, "clean": 11, "grab": 11, "sub": [11, 16], "print_loss": 11, "rc": 11, "patch": 11, "edgecolor": 11, "whitegrid": 11, "tk_col": 11, "tk_sz": 11, "update_plot": 11, "w_mid": 11, "14": 11, "222222222222221": 11, "panelmetriclogg": 11, "logger": 11, "_set_axes_label": [], "clear": [], "onecycl": 11, "opt_nam": 11, "warmup_length": 11, "init_lr": 11, "init_mom": 11, "mid_lr": 11, "mid_mom": 11, "final_lr": 11, "final_mom": 11, "absoptschedul": 11, "smith": 11, "cycl": 11, "evolut": 11, "lr": [11, 14], "beta_1": [11, 14], "org": [1, 11], "ab": 11, "1803": 11, "09820": 11, "warmup": 11, "phase": 11, "learn": [11, 14, 16], "rate": [11, 14, 16], "decreas": [11, 14, 16], "stabilis": 11, "converg": 11, "instanti": [11, 14, 16], "argument": 11, "anneal": [11, 16], "affect": [11, 16], "schedul": 11, "low": [11, 16], "nomin": [11, 16], "moder": 11, "_activ": [], "inter_cnt": [], "predhandl": [11, 14], "collect": 11, "numpi": 11, "get_pr": [11, 14], "save2hdf5predhandl": 11, "path": [8, 11, 14], "use_volume_target": 11, "overwrit": 11, "compress": 11, "lzf": 11, "volumetargetpredhandl": 11, "hdf5": [1, 11], "cach": 11, "written": 11, "increment": 11, "lookup": [11, 16], "exist": [1, 11], "same": [8, 11, 12, 13, 16], "string": [11, 14, 16], "_open_fil": [], "_write_data": [], "costcoefwarmup": 11, "n_warmup": 11, "warmupcallback": [11, 14], "more": [11, 15, 16], "stabl": 11, "absdetectorloss": [11, 13, 14], "sever": [11, 14], "warm": 11, "kept": 11, "fix": [11, 12, 14, 16], "wait": 11, "activ": [1, 11], "enough": 11, "past": 11, "median": 11, "paneloptconfig": [], "xy_pos_r": 11, "z_pos_rat": 11, "xy_span_r": 11, "budget_r": [], "desir": 11, "step": [11, 16], "cours": 11, "suitabl": [1, 11], "panel": [11, 14], "expand": [], "fraction": [14, 16], "budget": [13, 14, 16], "postwarmupcallback": 11, "obejct": 11, "check_warmup": 11, "act": [11, 16], "prevent": 11, "flag": 11, "warmup_act": 11, "super": 11, "next": [11, 16], "skip": 11, "unset": 11, "panelupdatelimit": 11, "max_xy_step": 11, "max_z_step": 11, "max_xy_span_step": 11, "maximum": [11, 12, 16], "being": [11, 13, 16], "anomol": 11, "enact": 11, "hard": 11, "clamp": 11, "xy_span": [11, 16], "paramat": 11, "goe": 11, "sigmoidpanelsmoothnessschedul": [11, 16], "smooth_rang": 11, "smooth": [5, 11, 16], "sigmoiddetectorpanel": [11, 16], "unphys": 11, "sensit": [11, 16], "outsid": [11, 16], "edg": [11, 16], "close": [11, 13], "resembl": 11, "still": [1, 11], "A": [11, 12, 13, 14, 16], "appropri": [], "come": [], "_set_smooth": [], "At": 11, "detectorheatmap": [14, 16], "re": [5, 6, 16], "init_xyz": 16, "init_xy_span": 16, "m2_cost": 16, "realistic_valid": 16, "n_cluster": 16, "30": 16, "_backward_hook": [], "_buffer": [], "_forward_hook": [], "_forward_pre_hook": [], "_is_full_backward_hook": [], "_load_state_dict_post_hook": [], "_load_state_dict_pre_hook": [], "_modul": [], "_non_persistent_buffers_set": [], "_paramet": [], "_state_dict_hook": [], "assign_budget": 16, "clamp_param": 16, "musigz_low": 16, "musigz_high": 16, "get_cost": 16, "get_effici": 16, "as_2d": 16, "get_resolut": 16, "plot_map": 16, "bpixel": 16, "bsavefig": 16, "filenam": 16, "abslay": 16, "oper": 16, "_n_cost": 16, "learnabl": 16, "how": [13, 16], "type_label": 16, "encod": [13, 16], "extra": 16, "pure": 16, "togeth": [12, 16], "span": [5, 6, 16], "meter": 16, "ax": 16, "divis": 16, "correctli": 16, "relat": [13, 16], "proper": 16, "determinist": 16, "currenc": [13, 16], "lie": 16, "etc": 16, "forward": [13, 16], "get_lw_z_siz": 16, "detectorpanel": [14, 16], "modulelist": [5, 16], "zeroth": [11, 12, 13, 16], "highest": 16, "necessarili": 16, "investig": 16, "bound": 16, "get_devic": 16, "helper": 16, "rais": 16, "get_panel_zord": 16, "rad_length": 16, "yield_zordered_panel": 16, "yield": [12, 16], "iter": [14, 16], "passivelay": 16, "rad_length_func": 16, "step_sz": 16, "01": 16, "pgeant": [1, 16], "develop": [1, 16], "parameteris": 16, "geant": [1, 16], "radiat": 16, "n_x": 16, "n_y": 16, "exampl": [11, 13, 16], "def": 16, "arb_rad_length": 16, "torch": [1, 16], "ones": [11, 13, 16], "lead": 16, "beryllium": 16, "later": 16, "load_rad_length": 16, "select": [13, 16], "travers": [], "_pdg_scatter": [], "log_term": [], "euler": [], "rotat": 16, "matric": [], "convers": 1, "_pgeant_scatt": [], "abs2idx": 16, "possibl": [13, 16], "seri": 16, "mu_abs2idx": 16, "look": 16, "scatter_and_propag": 16, "prespecifi": 16, "neighbour": 16, "infinit": 16, "thin": 16, "rectangular": 16, "despit": [13, 16], "nn": 16, "continu": [1, 16], "2d": [15, 16], "across": 16, "decid": 16, "evalu": [13, 14, 16], "eval": 16, "area": 16, "learnt": 16, "effect": [11, 16], "now": 16, "aspect": [13, 14, 16], "improv": [8, 16], "resiz": 16, "meet": 16, "interpret": [13, 16], "budget_scal": 16, "match": [13, 16], "xyz_low": 16, "xyz_high": 16, "20": 16, "random": [12, 16], "1e": 16, "subtract": 16, "min": 16, "max": 16, "doesn": 16, "overlap": 16, "overridden": [12, 16], "subclass": 16, "although": 16, "recip": 16, "former": 16, "regist": [1, 16], "hook": [1, 16], "while": 16, "silent": 16, "ignor": 16, "pre": [1, 12, 14, 16], "get_gauss": 16, "distribut": [1, 16], "interact": 16, "consist": [13, 16], "reconstruct": 16, "get_scaled_xy_span": 16, "xy2": 16, "li": 16, "border": 16, "slower": [13, 16], "wherea": 16, "transit": 16, "strongli": 16, "approxim": 16, "sig_model": 16, "interfac": 16, "conveni": 16, "respons": 16, "optim": [14, 16], "could": [8, 16], "volumeclassloss": [13, 16], "front": 16, "zxy": 16, "corner": 16, "support": [1, 14, 16], "spars": 16, "_check_pass": [], "_configure_budget": [], "budget_weight": [], "explicit": [], "hierarchi": [], "thu": [], "_n_layer_cost": 16, "softmax": [13, 16], "normalis": [13, 14, 16], "slice": 16, "taken": 16, "_get_devic": [], "system": [1, 16], "amongst": 16, "build_edg": [], "draw": 16, "xlim": 16, "ylim": 16, "zlim": 16, "pertain": 16, "jupyt": 16, "matplotlib": 16, "you": [1, 16], "dimension": 16, "turn": 16, "won": 16, "explicitli": 16, "get_detector": [14, 16], "get_passive_z_rang": 16, "get_pass": 16, "get_rad_cub": [13, 16], "h": [5, 16], "lookup_passive_xyz_coord": 16, "passive_s": 16, "public": 1, "ssh": 1, "your": 1, "github": 1, "profil": 1, "follow": 1, "instruct": 1, "checkout": 1, "packag": [1, 2], "git": 1, "gilesstrong": 1, "mode_muon_tomographi": 1, "gpu": 1, "setup": 1, "conda": 1, "pytorch": 1, "nb_conda_kernel": 1, "tomopt": 1, "python": 1, "pip": 1, "ipykernel": 1, "cu111": 1, "f": 1, "download": 1, "whl": 1, "torch_stabl": 1, "html": 1, "txt": 1, "virtual": 1, "environ": 1, "anaconda": 1, "miniconda": 1, "rememb": 1, "restart": 1, "shell": 1, "attemt": 1, "command": 1, "bashrc": 1, "env": 1, "yml": 1, "choic": 1, "content": 1, "commit": 1, "appar": 1, "ipython": 1, "displai": 1, "pytest": 1, "pull": 1, "ran": 1, "local": 1, "test_muon": 1, "py": 1, "tomo_deepinf": 1, "contact": 1, "definit": 1, "gnn": 1, "export": 1, "jit": 1, "trace": 1, "script": 1, "deepvolumeinfer": 1, "we": 1, "find": 1, "host": 1, "easi": 1, "mode_muon_tomography_scatt": 1, "csv": 1, "tomopt_sphinx_them": 1, "appear": 1, "doc": [1, 13], "project": 1, "peopl": 1, "contribut": 1, "summaris": 1, "ladle_furnac": 4, "small_wal": 4, "u_lorri": 4, "ladlefurnacepassivegener": 5, "x0_furnac": 5, "01782": 5, "fill_materi": 5, "hot": 5, "liquid": 5, "steel": 5, "slag_materi": 5, "slag": 5, "abspassivegener": [5, 6, 7, 12], "research": [5, 7], "edgedetladlefurnacefilllevelinferr": 5, "pipelin": 5, "remove_ladl": 5, "avg_3d": 5, "avg_lay": 5, "avg_1d": 5, "ridge_1d_0": 5, "max_div_min": 5, "add_batch_dim": 5, "edge_det": 5, "gauss_1d": 5, "gauss_3d": 5, "laplacian_1d": 5, "max_sub_min": 5, "prewit_1d": 5, "ladl": 5, "thick": 5, "ridge_1d_2": 5, "ridge_1d_4": 5, "ridge_1d_8": 5, "linearcorrectioncallback": 5, "partial_opt": [5, 14], "init_weight": 5, "init_bia": 5, "pocazladlefurnacefilllevelinferr": 5, "fill": [5, 13], "heigh": 5, "pred_height": 5, "ladlefurnaceintclassloss": 5, "pred_int_start": [5, 13], "use_ms": [5, 13], "target_budget": [5, 13], "budget_smooth": [5, 13], "cost_coef": [5, 13], "steep_budget": [5, 13], "debug": [5, 13], "volumeintclassloss": [5, 13], "spreadrangeloss": 5, "compare_init_optimised_2": 5, "df_start": 5, "df_opt_2": 5, "compare_init_to_optimis": 5, "df_opt": 5, "compare_optimised_to_baselin": 5, "df_bl_1": 5, "df_bl_2": 5, "compare_raw_init_to_bias_corrected_init": 5, "get_baseline_detector_1": 5, "9": 5, "get_baseline_detector_2": 5, "get_initial_detector": 5, "smallwallspassivegener": 6, "x0_soil": 6, "2624248696430881": 6, "x0_wall": 6, "08022522418503258": 6, "stop_k": 6, "turn_k": 6, "min_length": 6, "min_height": 6, "get_small_walls_volum": 6, "passive_lwh": 6, "det_height": 6, "get_small_walls_volume_wrapp": 6, "panelvolumewrapp": [6, 14], "ulorrypassivegener": 7, "u_volum": 7, "u_prob": 7, "fill_frac": 7, "x0_lorri": 7, "01757": 7, "bkg_materi": 7, "air": 7, "iron": 7, "figur": 8, "cdf": 8, "precomput": 8, "prob": 8, "tripl": 8, "rtype": 8, "refactor": 8, "panelcentr": 11, "epochsav": 11, "uniqu": 11, "specifc": 11, "resum": 11, "iter_cnt": 11, "optconfig": 11, "nor": 11, "sgd": 11, "opt": [11, 14], "param_group": 11, "param": 11, "impli": 11, "xy_pos_opt": [11, 14], "z_pos_opt": [11, 14], "xy_span_opt": [11, 14], "absblockpassivegener": 12, "block_siz": 12, "block_size_max_half": 12, "cuboid": 12, "_gener": 12, "get_data": 12, "randomli": 12, "orient": 12, "half": 12, "known": 12, "radlengthfunc": 12, "blockpresentpassivegener": 12, "potenti": 12, "passiveyield": [12, 14], "n_passiv": 12, "shuffl": 12, "dataset": 12, "randomblockpassivegener": 12, "sort_x0": 12, "enforce_diff_mat": 12, "unless": 12, "voxelpassivegener": 12, "quantifi": 13, "characteris": 13, "import": 13, "ideal": 13, "task": 13, "algorithm": 13, "gradual": 13, "predefin": 13, "rapidli": 13, "smoothli": 13, "Be": 13, "linearli": 13, "exceed": 13, "less": 13, "steep": 13, "flatten": 13, "slightli": 13, "_get_inference_loss": 13, "quickli": 13, "rise": 13, "veri": 13, "whenev": 13, "absmaterialclassloss": 13, "classifi": 13, "what": 13, "multi": 13, "cross": 13, "entropi": 13, "nll": 13, "bce": 13, "targ2int": 13, "treatabl": 13, "just": 13, "categor": 13, "integer_class_loss": 13, "icl": 13, "volumemseloss": 13, "voxelclassloss": 13, "voxelx0loss": 13, "mse": 13, "int_prob": 13, "target_int": 13, "pred_start_int": 13, "reduct": 13, "regress": 13, "applic": 13, "realli": 13, "like": 13, "aim": 13, "penalis": 13, "produc": [13, 15], "0154": 13, "greater": 13, "0007": 13, "8773": 13, "unreduc": 13, "loss_func": 14, "partial_scatter_inferr": 14, "partial_volume_inferr": 14, "mu_gener": 14, "_build_opt": 14, "qualiti": 14, "life": 14, "val_loss": 14, "broken": 14, "_fit_epoch": 14, "_scan_volum": 14, "mechan": 14, "abl": 14, "awar": 14, "uninitialis": 14, "plan": 14, "cb": 14, "cb_savepath": 14, "train_weight": 14, "count": 14, "reach": 14, "get_opt_lr": 14, "get_opt_mom": 14, "get_param_count": 14, "trainabl": 14, "pred_cb": 14, "pred_callback": 14, "set_opt_lr": 14, "set_opt_mom": 14, "arbvolumewrapp": 14, "arbitrari": 14, "whatev": 14, "paramt": 14, "from_sav": 14, "kwarg": 14, "cyclic_cb": 14, "epoch_bar": 14, "progressbar": 14, "loss_val": 14, "mean_loss": 14, "metric_cb": 14, "metric_log": 14, "passive_bar": 14, "nbprogressbar": 14, "consoleprogressbar": 14, "sb": 14, "skip_opt_step": 14, "stop": 14, "tst_passiv": 14, "volume_id": 14, "volume_inferr": 14, "warmup_cb": 14, "heatmapvolumewrapp": 14, "mu_opt": 14, "norm_opt": 14, "sig_opt": 14, "adjust": 14, "budget_opt": 14, "hit_df": 15, "scatter_df": 15, "plot_pred_true_x0": 15, "revis": 15, "intuit": 15, "build_xyz_edg": 16, "xyz_centr": 16, "xyz_edg": 16}, "objects": {"tomopt.benchmarks.ladle_furnace": [[5, 0, 0, "-", "data"], [5, 0, 0, "-", "inference"], [5, 0, 0, "-", "loss"], [5, 0, 0, "-", "plotting"], [5, 0, 0, "-", "volume"]], "tomopt.benchmarks.ladle_furnace.data": [[5, 1, 1, "", "LadleFurnacePassiveGenerator"]], "tomopt.benchmarks.ladle_furnace.inference": [[5, 1, 1, "", "EdgeDetLadleFurnaceFillLevelInferrer"], [5, 1, 1, "", "LinearCorrectionCallback"], [5, 1, 1, "", "PocaZLadleFurnaceFillLevelInferrer"]], "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer": [[5, 2, 1, "", "avg_1d"], [5, 2, 1, "", "avg_3d"], [5, 2, 1, "", "avg_layers"], [5, 2, 1, "", "edge_det"], [5, 2, 1, "", "gauss_1d"], [5, 2, 1, "", "gauss_3d"], [5, 2, 1, "", "laplacian_1d"], [5, 2, 1, "", "max_div_min"], [5, 2, 1, "", "max_sub_min"], [5, 2, 1, "", "negative"], [5, 2, 1, "", "prewit_1d"], [5, 2, 1, "", "remove_ladle"], [5, 2, 1, "", "ridge_1d_0"], [5, 2, 1, "", "ridge_1d_2"], [5, 2, 1, "", "ridge_1d_4"], [5, 2, 1, "", "ridge_1d_8"], [5, 2, 1, "", "x02probs"]], "tomopt.benchmarks.ladle_furnace.inference.LinearCorrectionCallback": [[5, 2, 1, "", "on_backwards_end"], [5, 2, 1, "", "on_train_begin"], [5, 2, 1, "", "on_volume_batch_begin"], [5, 2, 1, "", "on_x0_pred_end"]], "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer": [[5, 2, 1, "", "compute_efficiency"], [5, 2, 1, "", "get_prediction"], [5, 3, 1, "", "muon_efficiency"], [5, 3, 1, "", "muon_poca_xyz"], [5, 3, 1, "", "muon_poca_xyz_unc"], [5, 3, 1, "", "n_mu"], [5, 3, 1, "", "pred_height"], [5, 3, 1, "", "smooth"]], "tomopt.benchmarks.ladle_furnace.loss": [[5, 1, 1, "", "LadleFurnaceIntClassLoss"], [5, 1, 1, "", "SpreadRangeLoss"]], "tomopt.benchmarks.ladle_furnace.loss.LadleFurnaceIntClassLoss": [[5, 4, 1, "", "training"]], "tomopt.benchmarks.ladle_furnace.loss.SpreadRangeLoss": [[5, 2, 1, "", "on_volume_batch_begin"], [5, 2, 1, "", "on_volume_batch_end"], [5, 2, 1, "", "on_x0_pred_end"]], "tomopt.benchmarks.ladle_furnace.plotting": [[5, 5, 1, "", "compare_init_optimised_2"], [5, 5, 1, "", "compare_init_to_optimised"], [5, 5, 1, "", "compare_optimised_to_baselines"], [5, 5, 1, "", "compare_raw_init_to_bias_corrected_init"]], "tomopt.benchmarks.ladle_furnace.volume": [[5, 5, 1, "", "get_baseline_detector_1"], [5, 5, 1, "", "get_baseline_detector_2"], [5, 5, 1, "", "get_initial_detector"]], "tomopt.benchmarks.small_walls": [[6, 0, 0, "-", "data"], [6, 0, 0, "-", "volume"]], "tomopt.benchmarks.small_walls.data": [[6, 1, 1, "", "SmallWallsPassiveGenerator"]], "tomopt.benchmarks.small_walls.volume": [[6, 5, 1, "", "get_small_walls_volume"], [6, 5, 1, "", "get_small_walls_volume_wrapper"]], "tomopt.benchmarks.u_lorry": [[7, 0, 0, "-", "data"]], "tomopt.benchmarks.u_lorry.data": [[7, 1, 1, "", "ULorryPassiveGenerator"]], "tomopt": [[3, 0, 0, "-", "core"], [3, 0, 0, "-", "utils"], [3, 0, 0, "-", "version"]], "tomopt.inference": [[8, 0, 0, "-", "scattering"], [8, 0, 0, "-", "volume"]], "tomopt.inference.scattering": [[8, 1, 1, "", "GenScatterBatch"], [8, 1, 1, "", "ScatterBatch"]], "tomopt.inference.scattering.ScatterBatch": [[8, 3, 1, "", "above_gen_hits"], [8, 3, 1, "", "above_hit_effs"], [8, 3, 1, "", "above_hit_uncs"], [8, 3, 1, "", "above_hits"], [8, 3, 1, "", "below_gen_hits"], [8, 3, 1, "", "below_hit_effs"], [8, 3, 1, "", "below_hit_uncs"], [8, 3, 1, "", "below_hits"], [8, 3, 1, "", "dphi"], [8, 3, 1, "", "dphi_unc"], [8, 3, 1, "", "dtheta"], [8, 3, 1, "", "dtheta_unc"], [8, 3, 1, "", "dtheta_xy"], [8, 3, 1, "", "dtheta_xy_unc"], [8, 3, 1, "", "dxy"], [8, 3, 1, "", "dxy_unc"], [8, 3, 1, "", "gen_hits"], [8, 2, 1, "", "get_muon_trajectory"], [8, 2, 1, "", "get_scatter_mask"], [8, 3, 1, "", "hit_effs"], [8, 3, 1, "", "hit_uncs"], [8, 3, 1, "", "hits"], [8, 3, 1, "", "n_hits_above"], [8, 3, 1, "", "n_hits_below"], [8, 3, 1, "", "phi_in"], [8, 3, 1, "", "phi_in_unc"], [8, 3, 1, "", "phi_out"], [8, 3, 1, "", "phi_out_unc"], [8, 2, 1, "", "plot_scatter"], [8, 3, 1, "", "poca_xyz"], [8, 3, 1, "", "poca_xyz_unc"], [8, 3, 1, "", "reco_hits"], [8, 3, 1, "", "theta_in"], [8, 3, 1, "", "theta_in_unc"], [8, 3, 1, "", "theta_msc"], [8, 3, 1, "", "theta_msc_unc"], [8, 3, 1, "", "theta_out"], [8, 3, 1, "", "theta_out_unc"], [8, 3, 1, "", "theta_xy_in"], [8, 3, 1, "", "theta_xy_in_unc"], [8, 3, 1, "", "theta_xy_out"], [8, 3, 1, "", "theta_xy_out_unc"], [8, 3, 1, "", "total_scatter"], [8, 3, 1, "", "total_scatter_unc"], [8, 3, 1, "", "track_in"], [8, 3, 1, "", "track_out"], [8, 3, 1, "", "track_start_in"], [8, 3, 1, "", "track_start_out"], [8, 3, 1, "", "xyz_in"], [8, 3, 1, "", "xyz_in_unc"], [8, 3, 1, "", "xyz_out"], [8, 3, 1, "", "xyz_out_unc"]], "tomopt.inference.volume": [[8, 1, 1, "", "AbsIntClassifierFromX0"], [8, 1, 1, "", "AbsVolumeInferrer"], [8, 1, 1, "", "AbsX0Inferrer"], [8, 1, 1, "", "DenseBlockClassifierFromX0s"], [8, 1, 1, "", "PanelX0Inferrer"]], "tomopt.inference.volume.AbsIntClassifierFromX0": [[8, 2, 1, "", "add_scatters"], [8, 2, 1, "", "compute_efficiency"], [8, 2, 1, "", "get_prediction"], [8, 2, 1, "", "x02probs"]], "tomopt.inference.volume.AbsVolumeInferrer": [[8, 2, 1, "", "add_scatters"], [8, 2, 1, "", "compute_efficiency"], [8, 2, 1, "", "get_prediction"]], "tomopt.inference.volume.AbsX0Inferrer": [[8, 2, 1, "", "get_prediction"], [8, 3, 1, "", "muon_efficiency"], [8, 3, 1, "", "muon_mom"], [8, 3, 1, "", "muon_mom_unc"], [8, 3, 1, "", "muon_poca_xyz"], [8, 3, 1, "", "muon_poca_xyz_unc"], [8, 3, 1, "", "muon_probs_per_voxel_zxy"], [8, 3, 1, "", "muon_theta_in"], [8, 3, 1, "", "muon_theta_in_unc"], [8, 3, 1, "", "muon_theta_out"], [8, 3, 1, "", "muon_theta_out_unc"], [8, 3, 1, "", "muon_total_scatter"], [8, 3, 1, "", "muon_total_scatter_unc"], [8, 3, 1, "", "n_mu"], [8, 3, 1, "", "vox_zxy_x0_pred_uncs"], [8, 3, 1, "", "vox_zxy_x0_preds"], [8, 2, 1, "", "x0_from_scatters"]], "tomopt.inference.volume.DenseBlockClassifierFromX0s": [[8, 2, 1, "", "add_scatters"], [8, 2, 1, "", "compute_efficiency"], [8, 2, 1, "", "get_prediction"]], "tomopt.inference.volume.PanelX0Inferrer": [[8, 2, 1, "", "compute_efficiency"]], "tomopt.muon": [[9, 0, 0, "-", "generation"], [9, 0, 0, "-", "muon_batch"]], "tomopt.muon.generation": [[9, 1, 1, "", "AbsMuonGenerator"], [9, 1, 1, "", "MuonGenerator2015"], [9, 1, 1, "", "MuonGenerator2016"]], "tomopt.muon.generation.AbsMuonGenerator": [[9, 2, 1, "", "flux"], [9, 2, 1, "", "from_volume"], [9, 2, 1, "", "generate_set"]], "tomopt.muon.generation.MuonGenerator2015": [[9, 4, 1, "", "P1"], [9, 4, 1, "", "P2"], [9, 4, 1, "", "P3"], [9, 4, 1, "", "P4"], [9, 4, 1, "", "P5"], [9, 2, 1, "", "flux"]], "tomopt.muon.generation.MuonGenerator2016": [[9, 4, 1, "", "E_0"], [9, 4, 1, "", "E_c"], [9, 4, 1, "", "I_0"], [9, 4, 1, "", "N"], [9, 4, 1, "", "Rod"], [9, 4, 1, "", "epinv"], [9, 2, 1, "", "flux"], [9, 4, 1, "", "n"]], "tomopt.muon.muon_batch": [[9, 1, 1, "", "MuonBatch"]], "tomopt.muon.muon_batch.MuonBatch": [[9, 2, 1, "", "append_hits"], [9, 2, 1, "", "copy"], [9, 2, 1, "", "dtheta"], [9, 2, 1, "", "dtheta_x"], [9, 2, 1, "", "dtheta_y"], [9, 2, 1, "", "filter_muons"], [9, 2, 1, "", "get_hits"], [9, 2, 1, "", "get_xy_mask"], [9, 3, 1, "", "mom"], [9, 3, 1, "", "muons"], [9, 4, 1, "", "p_dim"], [9, 4, 1, "", "ph_dim"], [9, 3, 1, "", "phi"], [9, 2, 1, "", "phi_from_theta_xy"], [9, 2, 1, "", "propagate_d"], [9, 2, 1, "", "propagate_dz"], [9, 3, 1, "", "reco_mom"], [9, 2, 1, "", "remove_upwards_muons"], [9, 2, 1, "", "scatter_dtheta_dphi"], [9, 2, 1, "", "scatter_dtheta_xy"], [9, 2, 1, "", "scatter_dxyz"], [9, 2, 1, "", "snapshot_xyz"], [9, 4, 1, "", "th_dim"], [9, 3, 1, "", "theta"], [9, 2, 1, "", "theta_from_theta_xy"], [9, 3, 1, "", "theta_x"], [9, 2, 1, "", "theta_x_from_theta_phi"], [9, 3, 1, "", "theta_xy"], [9, 3, 1, "", "theta_y"], [9, 2, 1, "", "theta_y_from_theta_phi"], [9, 3, 1, "", "upwards_muons"], [9, 3, 1, "", "x"], [9, 4, 1, "", "x_dim"], [9, 3, 1, "", "xy"], [9, 3, 1, "", "xyz"], [9, 3, 1, "", "xyz_hist"], [9, 3, 1, "", "y"], [9, 4, 1, "", "y_dim"], [9, 3, 1, "", "z"], [9, 4, 1, "", "z_dim"]], "tomopt.optimisation.callbacks": [[11, 0, 0, "-", "callback"], [11, 0, 0, "-", "cyclic_callbacks"], [11, 0, 0, "-", "data_callbacks"], [11, 0, 0, "-", "detector_callbacks"], [11, 0, 0, "-", "diagnostic_callbacks"], [11, 0, 0, "-", "eval_metric"], [11, 0, 0, "-", "grad_callbacks"], [11, 0, 0, "-", "heatmap_gif"], [11, 0, 0, "-", "monitors"], [11, 0, 0, "-", "opt_callbacks"], [11, 0, 0, "-", "pred_callbacks"], [11, 0, 0, "-", "warmup_callbacks"]], "tomopt.optimisation.callbacks.callback": [[11, 1, 1, "", "Callback"]], "tomopt.optimisation.callbacks.callback.Callback": [[11, 2, 1, "", "on_backwards_begin"], [11, 2, 1, "", "on_backwards_end"], [11, 2, 1, "", "on_epoch_begin"], [11, 2, 1, "", "on_epoch_end"], [11, 2, 1, "", "on_mu_batch_begin"], [11, 2, 1, "", "on_mu_batch_end"], [11, 2, 1, "", "on_pred_begin"], [11, 2, 1, "", "on_pred_end"], [11, 2, 1, "", "on_scatter_end"], [11, 2, 1, "", "on_step_end"], [11, 2, 1, "", "on_train_begin"], [11, 2, 1, "", "on_train_end"], [11, 2, 1, "", "on_volume_batch_begin"], [11, 2, 1, "", "on_volume_batch_end"], [11, 2, 1, "", "on_volume_begin"], [11, 2, 1, "", "on_volume_end"], [11, 2, 1, "", "on_x0_pred_begin"], [11, 2, 1, "", "on_x0_pred_end"], [11, 2, 1, "", "set_wrapper"], [11, 4, 1, "", "wrapper"]], "tomopt.optimisation.callbacks.cyclic_callbacks": [[11, 1, 1, "", "CyclicCallback"]], "tomopt.optimisation.callbacks.data_callbacks": [[11, 1, 1, "", "MuonResampler"]], "tomopt.optimisation.callbacks.data_callbacks.MuonResampler": [[11, 2, 1, "", "check_mu_batch"], [11, 2, 1, "", "on_mu_batch_begin"], [11, 2, 1, "", "resample"]], "tomopt.optimisation.callbacks.detector_callbacks": [[11, 1, 1, "", "PanelCentring"], [11, 1, 1, "", "PanelUpdateLimiter"], [11, 1, 1, "", "SigmoidPanelSmoothnessSchedule"]], "tomopt.optimisation.callbacks.detector_callbacks.PanelCentring": [[11, 2, 1, "", "on_step_end"]], "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter": [[11, 2, 1, "", "on_backwards_end"], [11, 2, 1, "", "on_step_end"]], "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule": [[11, 2, 1, "", "on_epoch_begin"], [11, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.diagnostic_callbacks": [[11, 1, 1, "", "HitRecord"], [11, 1, 1, "", "ScatterRecord"]], "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord": [[11, 2, 1, "", "on_scatter_end"]], "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord": [[11, 2, 1, "", "get_record"], [11, 2, 1, "", "on_pred_begin"], [11, 2, 1, "", "on_scatter_end"], [11, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.eval_metric": [[11, 1, 1, "", "EvalMetric"]], "tomopt.optimisation.callbacks.eval_metric.EvalMetric": [[11, 2, 1, "", "get_metric"], [11, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.grad_callbacks": [[11, 1, 1, "", "NoMoreNaNs"]], "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs": [[11, 2, 1, "", "on_backwards_end"]], "tomopt.optimisation.callbacks.heatmap_gif": [[11, 1, 1, "", "HeatMapGif"]], "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif": [[11, 2, 1, "", "on_epoch_begin"], [11, 2, 1, "", "on_train_begin"], [11, 2, 1, "", "on_train_end"]], "tomopt.optimisation.callbacks.monitors": [[11, 1, 1, "", "MetricLogger"], [11, 1, 1, "", "PanelMetricLogger"]], "tomopt.optimisation.callbacks.monitors.MetricLogger": [[11, 4, 1, "", "cat_palette"], [11, 2, 1, "", "get_loss_history"], [11, 2, 1, "", "get_results"], [11, 4, 1, "", "h_mid"], [11, 4, 1, "", "lbl_col"], [11, 4, 1, "", "lbl_sz"], [11, 4, 1, "", "leg_sz"], [11, 2, 1, "", "on_backwards_end"], [11, 2, 1, "", "on_epoch_begin"], [11, 2, 1, "", "on_epoch_end"], [11, 2, 1, "", "on_train_begin"], [11, 2, 1, "", "on_train_end"], [11, 2, 1, "", "on_volume_batch_end"], [11, 2, 1, "", "on_volume_end"], [11, 2, 1, "", "print_losses"], [11, 4, 1, "", "style"], [11, 4, 1, "", "tk_col"], [11, 4, 1, "", "tk_sz"], [11, 2, 1, "", "update_plot"], [11, 4, 1, "", "w_mid"]], "tomopt.optimisation.callbacks.monitors.PanelMetricLogger": [[11, 2, 1, "", "update_plot"]], "tomopt.optimisation.callbacks.opt_callbacks": [[11, 1, 1, "", "EpochSave"], [11, 1, 1, "", "OneCycle"]], "tomopt.optimisation.callbacks.opt_callbacks.EpochSave": [[11, 2, 1, "", "on_epoch_end"]], "tomopt.optimisation.callbacks.opt_callbacks.OneCycle": [[11, 2, 1, "", "on_epoch_end"], [11, 2, 1, "", "schedule"]], "tomopt.optimisation.callbacks.pred_callbacks": [[11, 1, 1, "", "PredHandler"], [11, 1, 1, "", "Save2HDF5PredHandler"], [11, 1, 1, "", "VolumeTargetPredHandler"]], "tomopt.optimisation.callbacks.pred_callbacks.PredHandler": [[11, 2, 1, "", "get_preds"], [11, 2, 1, "", "on_pred_begin"], [11, 2, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler": [[11, 2, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler": [[11, 2, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.warmup_callbacks": [[11, 1, 1, "", "CostCoefWarmup"], [11, 1, 1, "", "OptConfig"], [11, 1, 1, "", "PostWarmupCallback"], [11, 1, 1, "", "WarmupCallback"]], "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup": [[11, 2, 1, "", "on_epoch_end"], [11, 2, 1, "", "on_volume_end"]], "tomopt.optimisation.callbacks.warmup_callbacks.OptConfig": [[11, 2, 1, "", "on_backwards_end"], [11, 2, 1, "", "on_epoch_end"]], "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback": [[11, 2, 1, "", "check_warmups"], [11, 2, 1, "", "on_epoch_begin"], [11, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback": [[11, 2, 1, "", "check_warmups"], [11, 2, 1, "", "on_epoch_begin"], [11, 2, 1, "", "on_epoch_end"], [11, 2, 1, "", "on_train_begin"]], "tomopt.optimisation.data": [[12, 0, 0, "-", "passives"]], "tomopt.optimisation.data.passives": [[12, 1, 1, "", "AbsBlockPassiveGenerator"], [12, 1, 1, "", "AbsPassiveGenerator"], [12, 1, 1, "", "BlockPresentPassiveGenerator"], [12, 1, 1, "", "PassiveYielder"], [12, 1, 1, "", "RandomBlockPassiveGenerator"], [12, 1, 1, "", "VoxelPassiveGenerator"]], "tomopt.optimisation.data.passives.AbsPassiveGenerator": [[12, 2, 1, "", "generate"], [12, 2, 1, "", "get_data"]], "tomopt.optimisation.loss": [[13, 0, 0, "-", "loss"], [13, 0, 0, "-", "sub_losses"]], "tomopt.optimisation.loss.loss": [[13, 1, 1, "", "AbsDetectorLoss"], [13, 1, 1, "", "AbsMaterialClassLoss"], [13, 1, 1, "", "VolumeClassLoss"], [13, 1, 1, "", "VolumeIntClassLoss"], [13, 1, 1, "", "VolumeMSELoss"], [13, 1, 1, "", "VoxelClassLoss"], [13, 1, 1, "", "VoxelX0Loss"]], "tomopt.optimisation.loss.loss.AbsDetectorLoss": [[13, 2, 1, "", "forward"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.loss.AbsMaterialClassLoss": [[13, 4, 1, "", "sub_losses"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.loss.VolumeClassLoss": [[13, 4, 1, "", "sub_losses"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.loss.VolumeIntClassLoss": [[13, 4, 1, "", "sub_losses"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.loss.VolumeMSELoss": [[13, 4, 1, "", "sub_losses"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.loss.VoxelClassLoss": [[13, 4, 1, "", "sub_losses"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.loss.VoxelX0Loss": [[13, 4, 1, "", "sub_losses"], [13, 4, 1, "", "training"]], "tomopt.optimisation.loss.sub_losses": [[13, 5, 1, "", "integer_class_loss"]], "tomopt.optimisation.wrapper": [[14, 0, 0, "-", "volume_wrapper"]], "tomopt.optimisation.wrapper.volume_wrapper": [[14, 1, 1, "", "AbsVolumeWrapper"], [14, 1, 1, "", "ArbVolumeWrapper"], [14, 1, 1, "", "FitParams"], [14, 1, 1, "", "HeatMapVolumeWrapper"], [14, 1, 1, "", "PanelVolumeWrapper"]], "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper": [[14, 2, 1, "", "fit"], [14, 2, 1, "", "get_detectors"], [14, 2, 1, "", "get_opt_lr"], [14, 2, 1, "", "get_opt_mom"], [14, 2, 1, "", "get_param_count"], [14, 2, 1, "", "load"], [14, 4, 1, "", "opts"], [14, 2, 1, "", "predict"], [14, 2, 1, "", "save"], [14, 2, 1, "", "set_opt_lr"], [14, 2, 1, "", "set_opt_mom"]], "tomopt.optimisation.wrapper.volume_wrapper.ArbVolumeWrapper": [[14, 2, 1, "", "from_save"], [14, 4, 1, "", "opts"]], "tomopt.optimisation.wrapper.volume_wrapper.FitParams": [[14, 4, 1, "", "cb_savepath"], [14, 4, 1, "", "cbs"], [14, 4, 1, "", "cyclic_cbs"], [14, 4, 1, "", "device"], [14, 4, 1, "", "epoch"], [14, 4, 1, "", "epoch_bar"], [14, 4, 1, "", "loss_val"], [14, 4, 1, "", "mean_loss"], [14, 4, 1, "", "metric_cbs"], [14, 4, 1, "", "metric_log"], [14, 4, 1, "", "mu"], [14, 4, 1, "", "mu_bs"], [14, 4, 1, "", "n_epochs"], [14, 4, 1, "", "n_mu_per_volume"], [14, 4, 1, "", "passive_bar"], [14, 4, 1, "", "passive_bs"], [14, 4, 1, "", "pred"], [14, 4, 1, "", "sb"], [14, 4, 1, "", "skip_opt_step"], [14, 4, 1, "", "state"], [14, 4, 1, "", "stop"], [14, 4, 1, "", "trn_passives"], [14, 4, 1, "", "tst_passives"], [14, 4, 1, "", "val_passives"], [14, 4, 1, "", "volume_id"], [14, 4, 1, "", "volume_inferrer"], [14, 4, 1, "", "warmup_cbs"]], "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper": [[14, 2, 1, "", "from_save"], [14, 4, 1, "", "opts"]], "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper": [[14, 2, 1, "", "from_save"], [14, 4, 1, "", "opts"]], "tomopt.plotting": [[15, 0, 0, "-", "appearance"], [15, 0, 0, "-", "diagnostics"], [15, 0, 0, "-", "predictions"]], "tomopt.plotting.diagnostics": [[15, 5, 1, "", "plot_hit_density"], [15, 5, 1, "", "plot_scatter_density"]], "tomopt.plotting.predictions": [[15, 5, 1, "", "plot_pred_true_x0"]], "tomopt.utils": [[3, 5, 1, "", "class_to_x0preds"], [3, 5, 1, "", "jacobian"], [3, 5, 1, "", "x0_from_mixture"], [3, 5, 1, "", "x0targs_to_classtargs"]], "tomopt.volume": [[16, 0, 0, "-", "heatmap"], [16, 0, 0, "-", "layer"], [16, 0, 0, "-", "panel"], [16, 0, 0, "-", "scatter_model"], [16, 0, 0, "-", "volume"]], "tomopt.volume.heatmap": [[16, 1, 1, "", "DetectorHeatMap"]], "tomopt.volume.heatmap.DetectorHeatMap": [[16, 2, 1, "", "assign_budget"], [16, 2, 1, "", "clamp_params"], [16, 2, 1, "", "get_cost"], [16, 2, 1, "", "get_efficiency"], [16, 2, 1, "", "get_hits"], [16, 2, 1, "", "get_resolution"], [16, 2, 1, "", "get_xy_mask"], [16, 2, 1, "", "plot_map"], [16, 4, 1, "", "training"], [16, 3, 1, "", "x"], [16, 3, 1, "", "y"]], "tomopt.volume.layer": [[16, 1, 1, "", "AbsDetectorLayer"], [16, 1, 1, "", "AbsLayer"], [16, 1, 1, "", "PanelDetectorLayer"], [16, 1, 1, "", "PassiveLayer"]], "tomopt.volume.layer.AbsDetectorLayer": [[16, 2, 1, "", "assign_budget"], [16, 2, 1, "", "conform_detector"], [16, 2, 1, "", "forward"], [16, 2, 1, "", "get_cost"], [16, 4, 1, "", "training"]], "tomopt.volume.layer.AbsLayer": [[16, 2, 1, "", "forward"], [16, 2, 1, "", "get_lw_z_size"], [16, 4, 1, "", "training"]], "tomopt.volume.layer.PanelDetectorLayer": [[16, 2, 1, "", "assign_budget"], [16, 2, 1, "", "conform_detector"], [16, 2, 1, "", "forward"], [16, 2, 1, "", "get_cost"], [16, 2, 1, "", "get_device"], [16, 2, 1, "", "get_panel_zorder"], [16, 4, 1, "", "rad_length"], [16, 4, 1, "", "training"], [16, 2, 1, "", "yield_zordered_panels"]], "tomopt.volume.layer.PassiveLayer": [[16, 2, 1, "", "abs2idx"], [16, 2, 1, "", "forward"], [16, 2, 1, "", "load_rad_length"], [16, 2, 1, "", "mu_abs2idx"], [16, 4, 1, "", "rad_length"], [16, 2, 1, "", "scatter_and_propagate"], [16, 4, 1, "", "training"]], "tomopt.volume.panel": [[16, 1, 1, "", "DetectorPanel"], [16, 1, 1, "", "SigmoidDetectorPanel"]], "tomopt.volume.panel.DetectorPanel": [[16, 2, 1, "", "assign_budget"], [16, 2, 1, "", "clamp_params"], [16, 2, 1, "", "forward"], [16, 2, 1, "", "get_cost"], [16, 2, 1, "", "get_efficiency"], [16, 2, 1, "", "get_gauss"], [16, 2, 1, "", "get_hits"], [16, 2, 1, "", "get_resolution"], [16, 2, 1, "", "get_scaled_xy_span"], [16, 2, 1, "", "get_xy_mask"], [16, 4, 1, "", "training"], [16, 3, 1, "", "x"], [16, 3, 1, "", "y"]], "tomopt.volume.panel.SigmoidDetectorPanel": [[16, 2, 1, "", "get_efficiency"], [16, 2, 1, "", "get_resolution"], [16, 2, 1, "", "sig_model"], [16, 3, 1, "", "smooth"], [16, 4, 1, "", "training"]], "tomopt.volume.volume": [[16, 1, 1, "", "Volume"]], "tomopt.volume.volume.Volume": [[16, 2, 1, "", "assign_budget"], [16, 2, 1, "", "build_xyz_edges"], [16, 3, 1, "", "device"], [16, 2, 1, "", "draw"], [16, 2, 1, "", "forward"], [16, 2, 1, "", "get_cost"], [16, 2, 1, "", "get_detectors"], [16, 2, 1, "", "get_passive_z_range"], [16, 2, 1, "", "get_passives"], [16, 2, 1, "", "get_rad_cube"], [16, 3, 1, "", "h"], [16, 2, 1, "", "load_rad_length"], [16, 2, 1, "", "lookup_passive_xyz_coords"], [16, 3, 1, "", "lw"], [16, 3, 1, "", "passive_size"], [16, 3, 1, "", "target"], [16, 4, 1, "", "training"], [16, 3, 1, "", "xyz_centres"], [16, 3, 1, "", "xyz_edges"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:attribute", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "titleterms": {"tomopt": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "differenti": 0, "muon": [0, 9], "tomographi": 0, "optimis": [0, 10, 11, 12, 13, 14], "packag": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], "overview": 0, "document": 0, "index": 0, "subpackag": [3, 4, 10], "submodul": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "core": 3, "modul": [3, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16], "util": 3, "version": 3, "infer": [5, 8], "scatter": 8, "volum": [5, 6, 8, 16], "gener": 9, "muon_batch": 9, "callback": 11, "cyclic_callback": 11, "data_callback": 11, "diagnostic_callback": 11, "eval_metr": 11, "grad_callback": 11, "heatmap_gif": 11, "loss_callback": [], "monitor": 11, "opt_callback": 11, "pred_callback": 11, "warmup_callback": 11, "detector_callback": 11, "heatmap": 16, "layer": 16, "panel": 16, "scatter_model": 16, "instal": 1, "window": 1, "usag": 1, "test": 1, "extern": 1, "repo": 1, "author": 1, "benchmark": [4, 5, 6, 7], "ladle_furnac": 5, "data": [5, 6, 7, 12], "loss": [5, 13], "plot": [5, 15], "small_wal": 6, "u_lorri": 7, "passiv": 12, "sub_loss": 13, "wrapper": 14, "volume_wrapp": 14, "appear": 15, "diagnost": 15, "predict": 15}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"TomOpt: Differential Muon Tomography Optimisation": [[0, "tomopt-differential-muon-tomography-optimisation"]], "Package overview": [[0, "package-overview"]], "Package documentation": [[0, "package-documentation"]], "Index": [[0, "index"]], "Installation": [[1, "installation"]], "Windows usage": [[1, "windows-usage"]], "Testing": [[1, "testing"]], "External repos": [[1, "external-repos"]], "Authors": [[1, "authors"]], "tomopt": [[2, "tomopt"]], "tomopt package": [[3, "tomopt-package"]], "Subpackages": [[3, "subpackages"], [4, "subpackages"], [10, "subpackages"]], "Submodules": [[3, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [11, "submodules"], [12, "submodules"], [13, "submodules"], [14, "submodules"], [15, "submodules"], [16, "submodules"]], "tomopt.core module": [[3, "module-tomopt.core"]], "tomopt.utils module": [[3, "module-tomopt.utils"]], "tomopt.version module": [[3, "module-tomopt.version"]], "tomopt.benchmarks package": [[4, "tomopt-benchmarks-package"]], "tomopt.benchmarks.ladle_furnace package": [[5, "tomopt-benchmarks-ladle-furnace-package"]], "tomopt.benchmarks.ladle_furnace.data module": [[5, "module-tomopt.benchmarks.ladle_furnace.data"]], "tomopt.benchmarks.ladle_furnace.inference module": [[5, "module-tomopt.benchmarks.ladle_furnace.inference"]], "tomopt.benchmarks.ladle_furnace.loss module": [[5, "module-tomopt.benchmarks.ladle_furnace.loss"]], "tomopt.benchmarks.ladle_furnace.plotting module": [[5, "module-tomopt.benchmarks.ladle_furnace.plotting"]], "tomopt.benchmarks.ladle_furnace.volume module": [[5, "module-tomopt.benchmarks.ladle_furnace.volume"]], "tomopt.benchmarks.small_walls package": [[6, "tomopt-benchmarks-small-walls-package"]], "tomopt.benchmarks.small_walls.data module": [[6, "module-tomopt.benchmarks.small_walls.data"]], "tomopt.benchmarks.small_walls.volume module": [[6, "module-tomopt.benchmarks.small_walls.volume"]], "tomopt.benchmarks.u_lorry package": [[7, "tomopt-benchmarks-u-lorry-package"]], "tomopt.benchmarks.u_lorry.data module": [[7, "module-tomopt.benchmarks.u_lorry.data"]], "tomopt.inference package": [[8, "tomopt-inference-package"]], "tomopt.inference.scattering module": [[8, "module-tomopt.inference.scattering"]], "tomopt.inference.volume module": [[8, "module-tomopt.inference.volume"]], "tomopt.muon package": [[9, "tomopt-muon-package"]], "tomopt.muon.generation module": [[9, "module-tomopt.muon.generation"]], "tomopt.muon.muon_batch module": [[9, "module-tomopt.muon.muon_batch"]], "tomopt.optimisation package": [[10, "tomopt-optimisation-package"]], "tomopt.optimisation.callbacks package": [[11, "tomopt-optimisation-callbacks-package"]], "tomopt.optimisation.callbacks.callback module": [[11, "module-tomopt.optimisation.callbacks.callback"]], "tomopt.optimisation.callbacks.cyclic_callbacks module": [[11, "module-tomopt.optimisation.callbacks.cyclic_callbacks"]], "tomopt.optimisation.callbacks.data_callbacks module": [[11, "module-tomopt.optimisation.callbacks.data_callbacks"]], "tomopt.optimisation.callbacks.detector_callbacks module": [[11, "module-tomopt.optimisation.callbacks.detector_callbacks"]], "tomopt.optimisation.callbacks.diagnostic_callbacks module": [[11, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"]], "tomopt.optimisation.callbacks.eval_metric module": [[11, "module-tomopt.optimisation.callbacks.eval_metric"]], "tomopt.optimisation.callbacks.grad_callbacks module": [[11, "module-tomopt.optimisation.callbacks.grad_callbacks"]], "tomopt.optimisation.callbacks.heatmap_gif module": [[11, "module-tomopt.optimisation.callbacks.heatmap_gif"]], "tomopt.optimisation.callbacks.monitors module": [[11, "module-tomopt.optimisation.callbacks.monitors"]], "tomopt.optimisation.callbacks.opt_callbacks module": [[11, "module-tomopt.optimisation.callbacks.opt_callbacks"]], "tomopt.optimisation.callbacks.pred_callbacks module": [[11, "module-tomopt.optimisation.callbacks.pred_callbacks"]], "tomopt.optimisation.callbacks.warmup_callbacks module": [[11, "module-tomopt.optimisation.callbacks.warmup_callbacks"]], "tomopt.optimisation.data package": [[12, "tomopt-optimisation-data-package"]], "tomopt.optimisation.data.passives module": [[12, "module-tomopt.optimisation.data.passives"]], "tomopt.optimisation.loss package": [[13, "tomopt-optimisation-loss-package"]], "tomopt.optimisation.loss.loss module": [[13, "module-tomopt.optimisation.loss.loss"]], "tomopt.optimisation.loss.sub_losses module": [[13, "module-tomopt.optimisation.loss.sub_losses"]], "tomopt.optimisation.wrapper package": [[14, "tomopt-optimisation-wrapper-package"]], "tomopt.optimisation.wrapper.volume_wrapper module": [[14, "module-tomopt.optimisation.wrapper.volume_wrapper"]], "tomopt.plotting package": [[15, "tomopt-plotting-package"]], "tomopt.plotting.appearance module": [[15, "module-tomopt.plotting.appearance"]], "tomopt.plotting.diagnostics module": [[15, "module-tomopt.plotting.diagnostics"]], "tomopt.plotting.predictions module": [[15, "module-tomopt.plotting.predictions"]], "tomopt.volume package": [[16, "tomopt-volume-package"]], "tomopt.volume.heatmap module": [[16, "module-tomopt.volume.heatmap"]], "tomopt.volume.layer module": [[16, "module-tomopt.volume.layer"]], "tomopt.volume.panel module": [[16, "module-tomopt.volume.panel"]], "tomopt.volume.scatter_model module": [[16, "module-tomopt.volume.scatter_model"]], "tomopt.volume.volume module": [[16, "module-tomopt.volume.volume"]]}, "indexentries": {"class_to_x0preds() (in module tomopt.utils)": [[3, "tomopt.utils.class_to_x0preds"]], "jacobian() (in module tomopt.utils)": [[3, "tomopt.utils.jacobian"]], "module": [[3, "module-tomopt.core"], [3, "module-tomopt.utils"], [3, "module-tomopt.version"], [5, "module-tomopt.benchmarks.ladle_furnace.data"], [5, "module-tomopt.benchmarks.ladle_furnace.inference"], [5, "module-tomopt.benchmarks.ladle_furnace.loss"], [5, "module-tomopt.benchmarks.ladle_furnace.plotting"], [5, "module-tomopt.benchmarks.ladle_furnace.volume"], [6, "module-tomopt.benchmarks.small_walls.data"], [6, "module-tomopt.benchmarks.small_walls.volume"], [7, "module-tomopt.benchmarks.u_lorry.data"], [8, "module-tomopt.inference.scattering"], [8, "module-tomopt.inference.volume"], [9, "module-tomopt.muon.generation"], [9, "module-tomopt.muon.muon_batch"], [11, "module-tomopt.optimisation.callbacks.callback"], [11, "module-tomopt.optimisation.callbacks.cyclic_callbacks"], [11, "module-tomopt.optimisation.callbacks.data_callbacks"], [11, "module-tomopt.optimisation.callbacks.detector_callbacks"], [11, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"], [11, "module-tomopt.optimisation.callbacks.eval_metric"], [11, "module-tomopt.optimisation.callbacks.grad_callbacks"], [11, "module-tomopt.optimisation.callbacks.heatmap_gif"], [11, "module-tomopt.optimisation.callbacks.monitors"], [11, "module-tomopt.optimisation.callbacks.opt_callbacks"], [11, "module-tomopt.optimisation.callbacks.pred_callbacks"], [11, "module-tomopt.optimisation.callbacks.warmup_callbacks"], [12, "module-tomopt.optimisation.data.passives"], [13, "module-tomopt.optimisation.loss.loss"], [13, "module-tomopt.optimisation.loss.sub_losses"], [14, "module-tomopt.optimisation.wrapper.volume_wrapper"], [15, "module-tomopt.plotting.appearance"], [15, "module-tomopt.plotting.diagnostics"], [15, "module-tomopt.plotting.predictions"], [16, "module-tomopt.volume.heatmap"], [16, "module-tomopt.volume.layer"], [16, "module-tomopt.volume.panel"], [16, "module-tomopt.volume.scatter_model"], [16, "module-tomopt.volume.volume"]], "tomopt.core": [[3, "module-tomopt.core"]], "tomopt.utils": [[3, "module-tomopt.utils"]], "tomopt.version": [[3, "module-tomopt.version"]], "x0_from_mixture() (in module tomopt.utils)": [[3, "tomopt.utils.x0_from_mixture"]], "x0targs_to_classtargs() (in module tomopt.utils)": [[3, "tomopt.utils.x0targs_to_classtargs"]], "edgedetladlefurnacefilllevelinferrer (class in tomopt.benchmarks.ladle_furnace.inference)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer"]], "ladlefurnaceintclassloss (class in tomopt.benchmarks.ladle_furnace.loss)": [[5, "tomopt.benchmarks.ladle_furnace.loss.LadleFurnaceIntClassLoss"]], "ladlefurnacepassivegenerator (class in tomopt.benchmarks.ladle_furnace.data)": [[5, "tomopt.benchmarks.ladle_furnace.data.LadleFurnacePassiveGenerator"]], "linearcorrectioncallback (class in tomopt.benchmarks.ladle_furnace.inference)": [[5, "tomopt.benchmarks.ladle_furnace.inference.LinearCorrectionCallback"]], "pocazladlefurnacefilllevelinferrer (class in tomopt.benchmarks.ladle_furnace.inference)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer"]], "spreadrangeloss (class in tomopt.benchmarks.ladle_furnace.loss)": [[5, "tomopt.benchmarks.ladle_furnace.loss.SpreadRangeLoss"]], "avg_1d() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.avg_1d"]], "avg_3d() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.avg_3d"]], "avg_layers() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.avg_layers"]], "compare_init_optimised_2() (in module tomopt.benchmarks.ladle_furnace.plotting)": [[5, "tomopt.benchmarks.ladle_furnace.plotting.compare_init_optimised_2"]], "compare_init_to_optimised() (in module tomopt.benchmarks.ladle_furnace.plotting)": [[5, "tomopt.benchmarks.ladle_furnace.plotting.compare_init_to_optimised"]], "compare_optimised_to_baselines() (in module tomopt.benchmarks.ladle_furnace.plotting)": [[5, "tomopt.benchmarks.ladle_furnace.plotting.compare_optimised_to_baselines"]], "compare_raw_init_to_bias_corrected_init() (in module tomopt.benchmarks.ladle_furnace.plotting)": [[5, "tomopt.benchmarks.ladle_furnace.plotting.compare_raw_init_to_bias_corrected_init"]], "compute_efficiency() (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.compute_efficiency"]], "edge_det() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.edge_det"]], "gauss_1d() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.gauss_1d"]], "gauss_3d() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.gauss_3d"]], "get_baseline_detector_1() (in module tomopt.benchmarks.ladle_furnace.volume)": [[5, "tomopt.benchmarks.ladle_furnace.volume.get_baseline_detector_1"]], "get_baseline_detector_2() (in module tomopt.benchmarks.ladle_furnace.volume)": [[5, "tomopt.benchmarks.ladle_furnace.volume.get_baseline_detector_2"]], "get_initial_detector() (in module tomopt.benchmarks.ladle_furnace.volume)": [[5, "tomopt.benchmarks.ladle_furnace.volume.get_initial_detector"]], "get_prediction() (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.get_prediction"]], "laplacian_1d() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.laplacian_1d"]], "max_div_min() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.max_div_min"]], "max_sub_min() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.max_sub_min"]], "muon_efficiency (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer property)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.muon_efficiency"]], "muon_poca_xyz (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer property)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.muon_poca_xyz"]], "muon_poca_xyz_unc (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer property)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.muon_poca_xyz_unc"]], "n_mu (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer property)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.n_mu"]], "negative() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.negative"]], "on_backwards_end() (tomopt.benchmarks.ladle_furnace.inference.linearcorrectioncallback method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.LinearCorrectionCallback.on_backwards_end"]], "on_train_begin() (tomopt.benchmarks.ladle_furnace.inference.linearcorrectioncallback method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.LinearCorrectionCallback.on_train_begin"]], "on_volume_batch_begin() (tomopt.benchmarks.ladle_furnace.inference.linearcorrectioncallback method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.LinearCorrectionCallback.on_volume_batch_begin"]], "on_volume_batch_begin() (tomopt.benchmarks.ladle_furnace.loss.spreadrangeloss method)": [[5, "tomopt.benchmarks.ladle_furnace.loss.SpreadRangeLoss.on_volume_batch_begin"]], "on_volume_batch_end() (tomopt.benchmarks.ladle_furnace.loss.spreadrangeloss method)": [[5, "tomopt.benchmarks.ladle_furnace.loss.SpreadRangeLoss.on_volume_batch_end"]], "on_x0_pred_end() (tomopt.benchmarks.ladle_furnace.inference.linearcorrectioncallback method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.LinearCorrectionCallback.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.benchmarks.ladle_furnace.loss.spreadrangeloss method)": [[5, "tomopt.benchmarks.ladle_furnace.loss.SpreadRangeLoss.on_x0_pred_end"]], "pred_height (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer property)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.pred_height"]], "prewit_1d() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.prewit_1d"]], "remove_ladle() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer static method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.remove_ladle"]], "ridge_1d_0() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.ridge_1d_0"]], "ridge_1d_2() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.ridge_1d_2"]], "ridge_1d_4() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.ridge_1d_4"]], "ridge_1d_8() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.ridge_1d_8"]], "smooth (tomopt.benchmarks.ladle_furnace.inference.pocazladlefurnacefilllevelinferrer property)": [[5, "tomopt.benchmarks.ladle_furnace.inference.PocaZLadleFurnaceFillLevelInferrer.smooth"]], "tomopt.benchmarks.ladle_furnace.data": [[5, "module-tomopt.benchmarks.ladle_furnace.data"]], "tomopt.benchmarks.ladle_furnace.inference": [[5, "module-tomopt.benchmarks.ladle_furnace.inference"]], "tomopt.benchmarks.ladle_furnace.loss": [[5, "module-tomopt.benchmarks.ladle_furnace.loss"]], "tomopt.benchmarks.ladle_furnace.plotting": [[5, "module-tomopt.benchmarks.ladle_furnace.plotting"]], "tomopt.benchmarks.ladle_furnace.volume": [[5, "module-tomopt.benchmarks.ladle_furnace.volume"]], "training (tomopt.benchmarks.ladle_furnace.loss.ladlefurnaceintclassloss attribute)": [[5, "tomopt.benchmarks.ladle_furnace.loss.LadleFurnaceIntClassLoss.training"]], "x02probs() (tomopt.benchmarks.ladle_furnace.inference.edgedetladlefurnacefilllevelinferrer method)": [[5, "tomopt.benchmarks.ladle_furnace.inference.EdgeDetLadleFurnaceFillLevelInferrer.x02probs"]], "smallwallspassivegenerator (class in tomopt.benchmarks.small_walls.data)": [[6, "tomopt.benchmarks.small_walls.data.SmallWallsPassiveGenerator"]], "get_small_walls_volume() (in module tomopt.benchmarks.small_walls.volume)": [[6, "tomopt.benchmarks.small_walls.volume.get_small_walls_volume"]], "get_small_walls_volume_wrapper() (in module tomopt.benchmarks.small_walls.volume)": [[6, "tomopt.benchmarks.small_walls.volume.get_small_walls_volume_wrapper"]], "tomopt.benchmarks.small_walls.data": [[6, "module-tomopt.benchmarks.small_walls.data"]], "tomopt.benchmarks.small_walls.volume": [[6, "module-tomopt.benchmarks.small_walls.volume"]], "ulorrypassivegenerator (class in tomopt.benchmarks.u_lorry.data)": [[7, "tomopt.benchmarks.u_lorry.data.ULorryPassiveGenerator"]], "tomopt.benchmarks.u_lorry.data": [[7, "module-tomopt.benchmarks.u_lorry.data"]], "absintclassifierfromx0 (class in tomopt.inference.volume)": [[8, "tomopt.inference.volume.AbsIntClassifierFromX0"]], "absvolumeinferrer (class in tomopt.inference.volume)": [[8, "tomopt.inference.volume.AbsVolumeInferrer"]], "absx0inferrer (class in tomopt.inference.volume)": [[8, "tomopt.inference.volume.AbsX0Inferrer"]], "denseblockclassifierfromx0s (class in tomopt.inference.volume)": [[8, "tomopt.inference.volume.DenseBlockClassifierFromX0s"]], "genscatterbatch (class in tomopt.inference.scattering)": [[8, "tomopt.inference.scattering.GenScatterBatch"]], "panelx0inferrer (class in tomopt.inference.volume)": [[8, "tomopt.inference.volume.PanelX0Inferrer"]], "scatterbatch (class in tomopt.inference.scattering)": [[8, "tomopt.inference.scattering.ScatterBatch"]], "above_gen_hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.above_gen_hits"]], "above_hit_effs (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.above_hit_effs"]], "above_hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.above_hit_uncs"]], "above_hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.above_hits"]], "add_scatters() (tomopt.inference.volume.absintclassifierfromx0 method)": [[8, "tomopt.inference.volume.AbsIntClassifierFromX0.add_scatters"]], "add_scatters() (tomopt.inference.volume.absvolumeinferrer method)": [[8, "tomopt.inference.volume.AbsVolumeInferrer.add_scatters"]], "add_scatters() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[8, "tomopt.inference.volume.DenseBlockClassifierFromX0s.add_scatters"]], "below_gen_hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.below_gen_hits"]], "below_hit_effs (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.below_hit_effs"]], "below_hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.below_hit_uncs"]], "below_hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.below_hits"]], "compute_efficiency() (tomopt.inference.volume.absintclassifierfromx0 method)": [[8, "tomopt.inference.volume.AbsIntClassifierFromX0.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.absvolumeinferrer method)": [[8, "tomopt.inference.volume.AbsVolumeInferrer.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[8, "tomopt.inference.volume.DenseBlockClassifierFromX0s.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.panelx0inferrer method)": [[8, "tomopt.inference.volume.PanelX0Inferrer.compute_efficiency"]], "dphi (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dphi"]], "dphi_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dphi_unc"]], "dtheta (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dtheta"]], "dtheta_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dtheta_unc"]], "dtheta_xy (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dtheta_xy"]], "dtheta_xy_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dtheta_xy_unc"]], "dxy (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dxy"]], "dxy_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.dxy_unc"]], "gen_hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.gen_hits"]], "get_muon_trajectory() (tomopt.inference.scattering.scatterbatch static method)": [[8, "tomopt.inference.scattering.ScatterBatch.get_muon_trajectory"]], "get_prediction() (tomopt.inference.volume.absintclassifierfromx0 method)": [[8, "tomopt.inference.volume.AbsIntClassifierFromX0.get_prediction"]], "get_prediction() (tomopt.inference.volume.absvolumeinferrer method)": [[8, "tomopt.inference.volume.AbsVolumeInferrer.get_prediction"]], "get_prediction() (tomopt.inference.volume.absx0inferrer method)": [[8, "tomopt.inference.volume.AbsX0Inferrer.get_prediction"]], "get_prediction() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[8, "tomopt.inference.volume.DenseBlockClassifierFromX0s.get_prediction"]], "get_scatter_mask() (tomopt.inference.scattering.scatterbatch method)": [[8, "tomopt.inference.scattering.ScatterBatch.get_scatter_mask"]], "hit_effs (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.hit_effs"]], "hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.hit_uncs"]], "hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.hits"]], "muon_efficiency (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_efficiency"]], "muon_mom (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_mom"]], "muon_mom_unc (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_mom_unc"]], "muon_poca_xyz (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_poca_xyz"]], "muon_poca_xyz_unc (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_poca_xyz_unc"]], "muon_probs_per_voxel_zxy (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_probs_per_voxel_zxy"]], "muon_theta_in (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_in"]], "muon_theta_in_unc (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_in_unc"]], "muon_theta_out (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_out"]], "muon_theta_out_unc (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_out_unc"]], "muon_total_scatter (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_total_scatter"]], "muon_total_scatter_unc (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.muon_total_scatter_unc"]], "n_hits_above (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.n_hits_above"]], "n_hits_below (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.n_hits_below"]], "n_mu (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.n_mu"]], "phi_in (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.phi_in"]], "phi_in_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.phi_in_unc"]], "phi_out (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.phi_out"]], "phi_out_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.phi_out_unc"]], "plot_scatter() (tomopt.inference.scattering.scatterbatch method)": [[8, "tomopt.inference.scattering.ScatterBatch.plot_scatter"]], "poca_xyz (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.poca_xyz"]], "poca_xyz_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.poca_xyz_unc"]], "reco_hits (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.reco_hits"]], "theta_in (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_in"]], "theta_in_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_in_unc"]], "theta_msc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_msc"]], "theta_msc_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_msc_unc"]], "theta_out (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_out"]], "theta_out_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_out_unc"]], "theta_xy_in (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_xy_in"]], "theta_xy_in_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_xy_in_unc"]], "theta_xy_out (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_xy_out"]], "theta_xy_out_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.theta_xy_out_unc"]], "tomopt.inference.scattering": [[8, "module-tomopt.inference.scattering"]], "tomopt.inference.volume": [[8, "module-tomopt.inference.volume"]], "total_scatter (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.total_scatter"]], "total_scatter_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.total_scatter_unc"]], "track_in (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.track_in"]], "track_out (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.track_out"]], "track_start_in (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.track_start_in"]], "track_start_out (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.track_start_out"]], "vox_zxy_x0_pred_uncs (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.vox_zxy_x0_pred_uncs"]], "vox_zxy_x0_preds (tomopt.inference.volume.absx0inferrer property)": [[8, "tomopt.inference.volume.AbsX0Inferrer.vox_zxy_x0_preds"]], "x02probs() (tomopt.inference.volume.absintclassifierfromx0 method)": [[8, "tomopt.inference.volume.AbsIntClassifierFromX0.x02probs"]], "x0_from_scatters() (tomopt.inference.volume.absx0inferrer static method)": [[8, "tomopt.inference.volume.AbsX0Inferrer.x0_from_scatters"]], "xyz_in (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.xyz_in"]], "xyz_in_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.xyz_in_unc"]], "xyz_out (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.xyz_out"]], "xyz_out_unc (tomopt.inference.scattering.scatterbatch property)": [[8, "tomopt.inference.scattering.ScatterBatch.xyz_out_unc"]], "absmuongenerator (class in tomopt.muon.generation)": [[9, "tomopt.muon.generation.AbsMuonGenerator"]], "e_0 (tomopt.muon.generation.muongenerator2016 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2016.E_0"]], "e_c (tomopt.muon.generation.muongenerator2016 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2016.E_c"]], "i_0 (tomopt.muon.generation.muongenerator2016 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2016.I_0"]], "muonbatch (class in tomopt.muon.muon_batch)": [[9, "tomopt.muon.muon_batch.MuonBatch"]], "muongenerator2015 (class in tomopt.muon.generation)": [[9, "tomopt.muon.generation.MuonGenerator2015"]], "muongenerator2016 (class in tomopt.muon.generation)": [[9, "tomopt.muon.generation.MuonGenerator2016"]], "n (tomopt.muon.generation.muongenerator2016 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2016.N"], [9, "tomopt.muon.generation.MuonGenerator2016.n"]], "p1 (tomopt.muon.generation.muongenerator2015 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2015.P1"]], "p2 (tomopt.muon.generation.muongenerator2015 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2015.P2"]], "p3 (tomopt.muon.generation.muongenerator2015 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2015.P3"]], "p4 (tomopt.muon.generation.muongenerator2015 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2015.P4"]], "p5 (tomopt.muon.generation.muongenerator2015 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2015.P5"]], "rod (tomopt.muon.generation.muongenerator2016 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2016.Rod"]], "append_hits() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.append_hits"]], "copy() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.copy"]], "dtheta() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.dtheta"]], "dtheta_x() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.dtheta_x"]], "dtheta_y() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.dtheta_y"]], "epinv (tomopt.muon.generation.muongenerator2016 attribute)": [[9, "tomopt.muon.generation.MuonGenerator2016.epinv"]], "filter_muons() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.filter_muons"]], "flux() (tomopt.muon.generation.absmuongenerator method)": [[9, "tomopt.muon.generation.AbsMuonGenerator.flux"]], "flux() (tomopt.muon.generation.muongenerator2015 method)": [[9, "tomopt.muon.generation.MuonGenerator2015.flux"]], "flux() (tomopt.muon.generation.muongenerator2016 method)": [[9, "tomopt.muon.generation.MuonGenerator2016.flux"]], "from_volume() (tomopt.muon.generation.absmuongenerator class method)": [[9, "tomopt.muon.generation.AbsMuonGenerator.from_volume"]], "generate_set() (tomopt.muon.generation.absmuongenerator method)": [[9, "tomopt.muon.generation.AbsMuonGenerator.generate_set"]], "get_hits() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.get_hits"]], "get_xy_mask() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.get_xy_mask"]], "mom (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.mom"]], "muons (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.muons"]], "p_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[9, "tomopt.muon.muon_batch.MuonBatch.p_dim"]], "ph_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[9, "tomopt.muon.muon_batch.MuonBatch.ph_dim"]], "phi (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.phi"]], "phi_from_theta_xy() (tomopt.muon.muon_batch.muonbatch static method)": [[9, "tomopt.muon.muon_batch.MuonBatch.phi_from_theta_xy"]], "propagate_d() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.propagate_d"]], "propagate_dz() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.propagate_dz"]], "reco_mom (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.reco_mom"]], "remove_upwards_muons() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.remove_upwards_muons"]], "scatter_dtheta_dphi() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.scatter_dtheta_dphi"]], "scatter_dtheta_xy() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.scatter_dtheta_xy"]], "scatter_dxyz() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.scatter_dxyz"]], "snapshot_xyz() (tomopt.muon.muon_batch.muonbatch method)": [[9, "tomopt.muon.muon_batch.MuonBatch.snapshot_xyz"]], "th_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[9, "tomopt.muon.muon_batch.MuonBatch.th_dim"]], "theta (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta"]], "theta_from_theta_xy() (tomopt.muon.muon_batch.muonbatch static method)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta_from_theta_xy"]], "theta_x (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta_x"]], "theta_x_from_theta_phi() (tomopt.muon.muon_batch.muonbatch static method)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta_x_from_theta_phi"]], "theta_xy (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta_xy"]], "theta_y (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta_y"]], "theta_y_from_theta_phi() (tomopt.muon.muon_batch.muonbatch static method)": [[9, "tomopt.muon.muon_batch.MuonBatch.theta_y_from_theta_phi"]], "tomopt.muon.generation": [[9, "module-tomopt.muon.generation"]], "tomopt.muon.muon_batch": [[9, "module-tomopt.muon.muon_batch"]], "upwards_muons (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.upwards_muons"]], "x (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.x"]], "x_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[9, "tomopt.muon.muon_batch.MuonBatch.x_dim"]], "xy (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.xy"]], "xyz (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.xyz"]], "xyz_hist (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.xyz_hist"]], "y (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.y"]], "y_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[9, "tomopt.muon.muon_batch.MuonBatch.y_dim"]], "z (tomopt.muon.muon_batch.muonbatch property)": [[9, "tomopt.muon.muon_batch.MuonBatch.z"]], "z_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[9, "tomopt.muon.muon_batch.MuonBatch.z_dim"]], "callback (class in tomopt.optimisation.callbacks.callback)": [[11, "tomopt.optimisation.callbacks.callback.Callback"]], "costcoefwarmup (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup"]], "cycliccallback (class in tomopt.optimisation.callbacks.cyclic_callbacks)": [[11, "tomopt.optimisation.callbacks.cyclic_callbacks.CyclicCallback"]], "epochsave (class in tomopt.optimisation.callbacks.opt_callbacks)": [[11, "tomopt.optimisation.callbacks.opt_callbacks.EpochSave"]], "evalmetric (class in tomopt.optimisation.callbacks.eval_metric)": [[11, "tomopt.optimisation.callbacks.eval_metric.EvalMetric"]], "heatmapgif (class in tomopt.optimisation.callbacks.heatmap_gif)": [[11, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif"]], "hitrecord (class in tomopt.optimisation.callbacks.diagnostic_callbacks)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord"]], "metriclogger (class in tomopt.optimisation.callbacks.monitors)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger"]], "muonresampler (class in tomopt.optimisation.callbacks.data_callbacks)": [[11, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler"]], "nomorenans (class in tomopt.optimisation.callbacks.grad_callbacks)": [[11, "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs"]], "onecycle (class in tomopt.optimisation.callbacks.opt_callbacks)": [[11, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle"]], "optconfig (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.OptConfig"]], "panelcentring (class in tomopt.optimisation.callbacks.detector_callbacks)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.PanelCentring"]], "panelmetriclogger (class in tomopt.optimisation.callbacks.monitors)": [[11, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger"]], "panelupdatelimiter (class in tomopt.optimisation.callbacks.detector_callbacks)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter"]], "postwarmupcallback (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback"]], "predhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler"]], "save2hdf5predhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler"]], "scatterrecord (class in tomopt.optimisation.callbacks.diagnostic_callbacks)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord"]], "sigmoidpanelsmoothnessschedule (class in tomopt.optimisation.callbacks.detector_callbacks)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule"]], "volumetargetpredhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler"]], "warmupcallback (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback"]], "cat_palette (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.cat_palette"]], "check_mu_batch() (tomopt.optimisation.callbacks.data_callbacks.muonresampler static method)": [[11, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.check_mu_batch"]], "check_warmups() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.check_warmups"]], "check_warmups() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.check_warmups"]], "get_loss_history() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.get_loss_history"]], "get_metric() (tomopt.optimisation.callbacks.eval_metric.evalmetric method)": [[11, "tomopt.optimisation.callbacks.eval_metric.EvalMetric.get_metric"]], "get_preds() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.get_preds"]], "get_record() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.get_record"]], "get_results() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.get_results"]], "h_mid (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.h_mid"]], "lbl_col (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.lbl_col"]], "lbl_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.lbl_sz"]], "leg_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.leg_sz"]], "on_backwards_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_backwards_begin"]], "on_backwards_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.detector_callbacks.panelupdatelimiter method)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.grad_callbacks.nomorenans method)": [[11, "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.warmup_callbacks.optconfig method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.OptConfig.on_backwards_end"]], "on_epoch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[11, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_epoch_begin"]], "on_epoch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.opt_callbacks.epochsave method)": [[11, "tomopt.optimisation.callbacks.opt_callbacks.EpochSave.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.opt_callbacks.onecycle method)": [[11, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.optconfig method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.OptConfig.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_epoch_end"]], "on_mu_batch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_mu_batch_begin"]], "on_mu_batch_begin() (tomopt.optimisation.callbacks.data_callbacks.muonresampler method)": [[11, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.on_mu_batch_begin"]], "on_mu_batch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_mu_batch_end"]], "on_pred_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_pred_begin"]], "on_pred_begin() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_pred_begin"]], "on_pred_begin() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.on_pred_begin"]], "on_pred_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_pred_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_scatter_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.diagnostic_callbacks.hitrecord method)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord.on_scatter_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_scatter_end"]], "on_step_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_step_end"]], "on_step_end() (tomopt.optimisation.callbacks.detector_callbacks.panelcentring method)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.PanelCentring.on_step_end"]], "on_step_end() (tomopt.optimisation.callbacks.detector_callbacks.panelupdatelimiter method)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter.on_step_end"]], "on_train_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[11, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[11, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.eval_metric.evalmetric method)": [[11, "tomopt.optimisation.callbacks.eval_metric.EvalMetric.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[11, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_train_begin"]], "on_train_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_train_end"]], "on_train_end() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[11, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_train_end"]], "on_train_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_train_end"]], "on_volume_batch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_volume_batch_begin"]], "on_volume_batch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_volume_batch_end"]], "on_volume_batch_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_volume_batch_end"]], "on_volume_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_volume_begin"]], "on_volume_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_volume_end"]], "on_volume_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_volume_end"]], "on_volume_end() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[11, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup.on_volume_end"]], "on_x0_pred_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_x0_pred_begin"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.volumetargetpredhandler method)": [[11, "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler.on_x0_pred_end"]], "print_losses() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.print_losses"]], "resample() (tomopt.optimisation.callbacks.data_callbacks.muonresampler static method)": [[11, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.resample"]], "schedule() (tomopt.optimisation.callbacks.opt_callbacks.onecycle method)": [[11, "tomopt.optimisation.callbacks.opt_callbacks.OneCycle.schedule"]], "set_wrapper() (tomopt.optimisation.callbacks.callback.callback method)": [[11, "tomopt.optimisation.callbacks.callback.Callback.set_wrapper"]], "style (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.style"]], "tk_col (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.tk_col"]], "tk_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.tk_sz"]], "tomopt.optimisation.callbacks.callback": [[11, "module-tomopt.optimisation.callbacks.callback"]], "tomopt.optimisation.callbacks.cyclic_callbacks": [[11, "module-tomopt.optimisation.callbacks.cyclic_callbacks"]], "tomopt.optimisation.callbacks.data_callbacks": [[11, "module-tomopt.optimisation.callbacks.data_callbacks"]], "tomopt.optimisation.callbacks.detector_callbacks": [[11, "module-tomopt.optimisation.callbacks.detector_callbacks"]], "tomopt.optimisation.callbacks.diagnostic_callbacks": [[11, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"]], "tomopt.optimisation.callbacks.eval_metric": [[11, "module-tomopt.optimisation.callbacks.eval_metric"]], "tomopt.optimisation.callbacks.grad_callbacks": [[11, "module-tomopt.optimisation.callbacks.grad_callbacks"]], "tomopt.optimisation.callbacks.heatmap_gif": [[11, "module-tomopt.optimisation.callbacks.heatmap_gif"]], "tomopt.optimisation.callbacks.monitors": [[11, "module-tomopt.optimisation.callbacks.monitors"]], "tomopt.optimisation.callbacks.opt_callbacks": [[11, "module-tomopt.optimisation.callbacks.opt_callbacks"]], "tomopt.optimisation.callbacks.pred_callbacks": [[11, "module-tomopt.optimisation.callbacks.pred_callbacks"]], "tomopt.optimisation.callbacks.warmup_callbacks": [[11, "module-tomopt.optimisation.callbacks.warmup_callbacks"]], "update_plot() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.update_plot"]], "update_plot() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[11, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger.update_plot"]], "w_mid (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[11, "tomopt.optimisation.callbacks.monitors.MetricLogger.w_mid"]], "wrapper (tomopt.optimisation.callbacks.callback.callback attribute)": [[11, "tomopt.optimisation.callbacks.callback.Callback.wrapper"]], "absblockpassivegenerator (class in tomopt.optimisation.data.passives)": [[12, "tomopt.optimisation.data.passives.AbsBlockPassiveGenerator"]], "abspassivegenerator (class in tomopt.optimisation.data.passives)": [[12, "tomopt.optimisation.data.passives.AbsPassiveGenerator"]], "blockpresentpassivegenerator (class in tomopt.optimisation.data.passives)": [[12, "tomopt.optimisation.data.passives.BlockPresentPassiveGenerator"]], "passiveyielder (class in tomopt.optimisation.data.passives)": [[12, "tomopt.optimisation.data.passives.PassiveYielder"]], "randomblockpassivegenerator (class in tomopt.optimisation.data.passives)": [[12, "tomopt.optimisation.data.passives.RandomBlockPassiveGenerator"]], "voxelpassivegenerator (class in tomopt.optimisation.data.passives)": [[12, "tomopt.optimisation.data.passives.VoxelPassiveGenerator"]], "generate() (tomopt.optimisation.data.passives.abspassivegenerator method)": [[12, "tomopt.optimisation.data.passives.AbsPassiveGenerator.generate"]], "get_data() (tomopt.optimisation.data.passives.abspassivegenerator method)": [[12, "tomopt.optimisation.data.passives.AbsPassiveGenerator.get_data"]], "tomopt.optimisation.data.passives": [[12, "module-tomopt.optimisation.data.passives"]], "absdetectorloss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.AbsDetectorLoss"]], "absmaterialclassloss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.AbsMaterialClassLoss"]], "volumeclassloss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.VolumeClassLoss"]], "volumeintclassloss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.VolumeIntClassLoss"]], "volumemseloss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.VolumeMSELoss"]], "voxelclassloss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.VoxelClassLoss"]], "voxelx0loss (class in tomopt.optimisation.loss.loss)": [[13, "tomopt.optimisation.loss.loss.VoxelX0Loss"]], "forward() (tomopt.optimisation.loss.loss.absdetectorloss method)": [[13, "tomopt.optimisation.loss.loss.AbsDetectorLoss.forward"]], "integer_class_loss() (in module tomopt.optimisation.loss.sub_losses)": [[13, "tomopt.optimisation.loss.sub_losses.integer_class_loss"]], "sub_losses (tomopt.optimisation.loss.loss.absmaterialclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.AbsMaterialClassLoss.sub_losses"]], "sub_losses (tomopt.optimisation.loss.loss.volumeclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.VolumeClassLoss.sub_losses"]], "sub_losses (tomopt.optimisation.loss.loss.volumeintclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.VolumeIntClassLoss.sub_losses"]], "sub_losses (tomopt.optimisation.loss.loss.volumemseloss attribute)": [[13, "tomopt.optimisation.loss.loss.VolumeMSELoss.sub_losses"]], "sub_losses (tomopt.optimisation.loss.loss.voxelclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.VoxelClassLoss.sub_losses"]], "sub_losses (tomopt.optimisation.loss.loss.voxelx0loss attribute)": [[13, "tomopt.optimisation.loss.loss.VoxelX0Loss.sub_losses"]], "tomopt.optimisation.loss.loss": [[13, "module-tomopt.optimisation.loss.loss"]], "tomopt.optimisation.loss.sub_losses": [[13, "module-tomopt.optimisation.loss.sub_losses"]], "training (tomopt.optimisation.loss.loss.absdetectorloss attribute)": [[13, "tomopt.optimisation.loss.loss.AbsDetectorLoss.training"]], "training (tomopt.optimisation.loss.loss.absmaterialclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.AbsMaterialClassLoss.training"]], "training (tomopt.optimisation.loss.loss.volumeclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.VolumeClassLoss.training"]], "training (tomopt.optimisation.loss.loss.volumeintclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.VolumeIntClassLoss.training"]], "training (tomopt.optimisation.loss.loss.volumemseloss attribute)": [[13, "tomopt.optimisation.loss.loss.VolumeMSELoss.training"]], "training (tomopt.optimisation.loss.loss.voxelclassloss attribute)": [[13, "tomopt.optimisation.loss.loss.VoxelClassLoss.training"]], "training (tomopt.optimisation.loss.loss.voxelx0loss attribute)": [[13, "tomopt.optimisation.loss.loss.VoxelX0Loss.training"]], "absvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper"]], "arbvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.ArbVolumeWrapper"]], "fitparams (class in tomopt.optimisation.wrapper.volume_wrapper)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams"]], "heatmapvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper"]], "panelvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper"]], "cb_savepath (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.cb_savepath"]], "cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.cbs"]], "cyclic_cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.cyclic_cbs"]], "device (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.device"]], "epoch (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.epoch"]], "epoch_bar (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.epoch_bar"]], "fit() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.fit"]], "from_save() (tomopt.optimisation.wrapper.volume_wrapper.arbvolumewrapper class method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.ArbVolumeWrapper.from_save"]], "from_save() (tomopt.optimisation.wrapper.volume_wrapper.heatmapvolumewrapper class method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper.from_save"]], "from_save() (tomopt.optimisation.wrapper.volume_wrapper.panelvolumewrapper class method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper.from_save"]], "get_detectors() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_detectors"]], "get_opt_lr() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_opt_lr"]], "get_opt_mom() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_opt_mom"]], "get_param_count() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_param_count"]], "load() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.load"]], "loss_val (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.loss_val"]], "mean_loss (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.mean_loss"]], "metric_cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.metric_cbs"]], "metric_log (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.metric_log"]], "mu (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.mu"]], "mu_bs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.mu_bs"]], "n_epochs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.n_epochs"]], "n_mu_per_volume (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.n_mu_per_volume"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.opts"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.arbvolumewrapper attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.ArbVolumeWrapper.opts"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.heatmapvolumewrapper attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper.opts"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.panelvolumewrapper attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper.opts"]], "passive_bar (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.passive_bar"]], "passive_bs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.passive_bs"]], "pred (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.pred"]], "predict() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.predict"]], "save() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.save"]], "sb (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.sb"]], "set_opt_lr() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.set_opt_lr"]], "set_opt_mom() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.set_opt_mom"]], "skip_opt_step (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.skip_opt_step"]], "state (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.state"]], "stop (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.stop"]], "tomopt.optimisation.wrapper.volume_wrapper": [[14, "module-tomopt.optimisation.wrapper.volume_wrapper"]], "trn_passives (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.trn_passives"]], "tst_passives (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.tst_passives"]], "val_passives (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.val_passives"]], "volume_id (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.volume_id"]], "volume_inferrer (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.volume_inferrer"]], "warmup_cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[14, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.warmup_cbs"]], "plot_hit_density() (in module tomopt.plotting.diagnostics)": [[15, "tomopt.plotting.diagnostics.plot_hit_density"]], "plot_pred_true_x0() (in module tomopt.plotting.predictions)": [[15, "tomopt.plotting.predictions.plot_pred_true_x0"]], "plot_scatter_density() (in module tomopt.plotting.diagnostics)": [[15, "tomopt.plotting.diagnostics.plot_scatter_density"]], "tomopt.plotting.appearance": [[15, "module-tomopt.plotting.appearance"]], "tomopt.plotting.diagnostics": [[15, "module-tomopt.plotting.diagnostics"]], "tomopt.plotting.predictions": [[15, "module-tomopt.plotting.predictions"]], "absdetectorlayer (class in tomopt.volume.layer)": [[16, "tomopt.volume.layer.AbsDetectorLayer"]], "abslayer (class in tomopt.volume.layer)": [[16, "tomopt.volume.layer.AbsLayer"]], "detectorheatmap (class in tomopt.volume.heatmap)": [[16, "tomopt.volume.heatmap.DetectorHeatMap"]], "detectorpanel (class in tomopt.volume.panel)": [[16, "tomopt.volume.panel.DetectorPanel"]], "paneldetectorlayer (class in tomopt.volume.layer)": [[16, "tomopt.volume.layer.PanelDetectorLayer"]], "passivelayer (class in tomopt.volume.layer)": [[16, "tomopt.volume.layer.PassiveLayer"]], "sigmoiddetectorpanel (class in tomopt.volume.panel)": [[16, "tomopt.volume.panel.SigmoidDetectorPanel"]], "volume (class in tomopt.volume.volume)": [[16, "tomopt.volume.volume.Volume"]], "abs2idx() (tomopt.volume.layer.passivelayer method)": [[16, "tomopt.volume.layer.PassiveLayer.abs2idx"]], "assign_budget() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.assign_budget"]], "assign_budget() (tomopt.volume.layer.absdetectorlayer method)": [[16, "tomopt.volume.layer.AbsDetectorLayer.assign_budget"]], "assign_budget() (tomopt.volume.layer.paneldetectorlayer method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.assign_budget"]], "assign_budget() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.assign_budget"]], "assign_budget() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.assign_budget"]], "build_xyz_edges() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.build_xyz_edges"]], "clamp_params() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.clamp_params"]], "clamp_params() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.clamp_params"]], "conform_detector() (tomopt.volume.layer.absdetectorlayer method)": [[16, "tomopt.volume.layer.AbsDetectorLayer.conform_detector"]], "conform_detector() (tomopt.volume.layer.paneldetectorlayer method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.conform_detector"]], "device (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.device"]], "draw() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.draw"]], "forward() (tomopt.volume.layer.absdetectorlayer method)": [[16, "tomopt.volume.layer.AbsDetectorLayer.forward"]], "forward() (tomopt.volume.layer.abslayer method)": [[16, "tomopt.volume.layer.AbsLayer.forward"]], "forward() (tomopt.volume.layer.paneldetectorlayer method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.forward"]], "forward() (tomopt.volume.layer.passivelayer method)": [[16, "tomopt.volume.layer.PassiveLayer.forward"]], "forward() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.forward"]], "forward() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.forward"]], "get_cost() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.get_cost"]], "get_cost() (tomopt.volume.layer.absdetectorlayer method)": [[16, "tomopt.volume.layer.AbsDetectorLayer.get_cost"]], "get_cost() (tomopt.volume.layer.paneldetectorlayer method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.get_cost"]], "get_cost() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_cost"]], "get_cost() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.get_cost"]], "get_detectors() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.get_detectors"]], "get_device() (tomopt.volume.layer.paneldetectorlayer static method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.get_device"]], "get_efficiency() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.get_efficiency"]], "get_efficiency() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_efficiency"]], "get_efficiency() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[16, "tomopt.volume.panel.SigmoidDetectorPanel.get_efficiency"]], "get_gauss() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_gauss"]], "get_hits() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.get_hits"]], "get_hits() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_hits"]], "get_lw_z_size() (tomopt.volume.layer.abslayer method)": [[16, "tomopt.volume.layer.AbsLayer.get_lw_z_size"]], "get_panel_zorder() (tomopt.volume.layer.paneldetectorlayer method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.get_panel_zorder"]], "get_passive_z_range() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.get_passive_z_range"]], "get_passives() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.get_passives"]], "get_rad_cube() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.get_rad_cube"]], "get_resolution() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.get_resolution"]], "get_resolution() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_resolution"]], "get_resolution() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[16, "tomopt.volume.panel.SigmoidDetectorPanel.get_resolution"]], "get_scaled_xy_span() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_scaled_xy_span"]], "get_xy_mask() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.get_xy_mask"]], "get_xy_mask() (tomopt.volume.panel.detectorpanel method)": [[16, "tomopt.volume.panel.DetectorPanel.get_xy_mask"]], "h (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.h"]], "load_rad_length() (tomopt.volume.layer.passivelayer method)": [[16, "tomopt.volume.layer.PassiveLayer.load_rad_length"]], "load_rad_length() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.load_rad_length"]], "lookup_passive_xyz_coords() (tomopt.volume.volume.volume method)": [[16, "tomopt.volume.volume.Volume.lookup_passive_xyz_coords"]], "lw (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.lw"]], "mu_abs2idx() (tomopt.volume.layer.passivelayer method)": [[16, "tomopt.volume.layer.PassiveLayer.mu_abs2idx"]], "passive_size (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.passive_size"]], "plot_map() (tomopt.volume.heatmap.detectorheatmap method)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.plot_map"]], "rad_length (tomopt.volume.layer.paneldetectorlayer attribute)": [[16, "tomopt.volume.layer.PanelDetectorLayer.rad_length"]], "rad_length (tomopt.volume.layer.passivelayer attribute)": [[16, "tomopt.volume.layer.PassiveLayer.rad_length"]], "scatter_and_propagate() (tomopt.volume.layer.passivelayer method)": [[16, "tomopt.volume.layer.PassiveLayer.scatter_and_propagate"]], "sig_model() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[16, "tomopt.volume.panel.SigmoidDetectorPanel.sig_model"]], "smooth (tomopt.volume.panel.sigmoiddetectorpanel property)": [[16, "tomopt.volume.panel.SigmoidDetectorPanel.smooth"]], "target (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.target"]], "tomopt.volume.heatmap": [[16, "module-tomopt.volume.heatmap"]], "tomopt.volume.layer": [[16, "module-tomopt.volume.layer"]], "tomopt.volume.panel": [[16, "module-tomopt.volume.panel"]], "tomopt.volume.scatter_model": [[16, "module-tomopt.volume.scatter_model"]], "tomopt.volume.volume": [[16, "module-tomopt.volume.volume"]], "training (tomopt.volume.heatmap.detectorheatmap attribute)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.training"]], "training (tomopt.volume.layer.absdetectorlayer attribute)": [[16, "tomopt.volume.layer.AbsDetectorLayer.training"]], "training (tomopt.volume.layer.abslayer attribute)": [[16, "tomopt.volume.layer.AbsLayer.training"]], "training (tomopt.volume.layer.paneldetectorlayer attribute)": [[16, "tomopt.volume.layer.PanelDetectorLayer.training"]], "training (tomopt.volume.layer.passivelayer attribute)": [[16, "tomopt.volume.layer.PassiveLayer.training"]], "training (tomopt.volume.panel.detectorpanel attribute)": [[16, "tomopt.volume.panel.DetectorPanel.training"]], "training (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[16, "tomopt.volume.panel.SigmoidDetectorPanel.training"]], "training (tomopt.volume.volume.volume attribute)": [[16, "tomopt.volume.volume.Volume.training"]], "x (tomopt.volume.heatmap.detectorheatmap property)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.x"]], "x (tomopt.volume.panel.detectorpanel property)": [[16, "tomopt.volume.panel.DetectorPanel.x"]], "xyz_centres (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.xyz_centres"]], "xyz_edges (tomopt.volume.volume.volume property)": [[16, "tomopt.volume.volume.Volume.xyz_edges"]], "y (tomopt.volume.heatmap.detectorheatmap property)": [[16, "tomopt.volume.heatmap.DetectorHeatMap.y"]], "y (tomopt.volume.panel.detectorpanel property)": [[16, "tomopt.volume.panel.DetectorPanel.y"]], "yield_zordered_panels() (tomopt.volume.layer.paneldetectorlayer method)": [[16, "tomopt.volume.layer.PanelDetectorLayer.yield_zordered_panels"]]}})