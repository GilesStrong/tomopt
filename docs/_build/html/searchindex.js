Search.setIndex({"docnames": ["index", "tomopt", "tomopt.benchmarks", "tomopt.benchmarks.phi_detector", "tomopt.inference", "tomopt.muon", "tomopt.optimisation", "tomopt.optimisation.callbacks", "tomopt.optimisation.wrapper", "tomopt.plotting", "tomopt.volume"], "filenames": ["index.rst", "tomopt.rst", "tomopt.benchmarks.rst", "tomopt.benchmarks.phi_detector.rst", "tomopt.inference.rst", "tomopt.muon.rst", "tomopt.optimisation.rst", "tomopt.optimisation.callbacks.rst", "tomopt.optimisation.wrapper.rst", "tomopt.plotting.rst", "tomopt.volume.rst"], "titles": ["TomOpt: Differential Muon Tomography Optimisation", "tomopt package", "tomopt.benchmarks package", "tomopt.benchmarks.phi_detector package", "tomopt.inference package", "tomopt.muon package", "tomopt.optimisation package", "tomopt.optimisation.callbacks package", "tomopt.optimisation.wrapper package", "tomopt.plotting package", "tomopt.volume package"], "terms": {"instal": 0, "test": [0, 3, 4, 7], "extern": 0, "repo": 0, "author": [0, 4], "volum": [0, 1, 3, 5, 7, 8, 9], "infer": [0, 1, 5, 7, 8, 10], "plot": [0, 1, 3, 4, 7, 10], "benchmark": [0, 1], "muon": [1, 3, 4, 7, 8, 9, 10], "optimis": [1, 10], "class_to_x0pr": 1, "arrai": [1, 5, 7, 9], "id2x0": 1, "sourc": [1, 3, 4, 5, 7, 8, 9, 10], "convert": [1, 4, 7], "class": [1, 3, 4, 5, 7, 8, 10], "x0": [1, 3, 4, 7, 8, 9, 10], "predict": [1, 4, 7, 8], "us": [1, 3, 4, 5, 7, 8, 9, 10], "map": [1, 5, 7, 10], "defin": [1, 5, 9, 10], "paramet": [1, 3, 4, 5, 7, 8, 9, 10], "ndarrai": [1, 5, 7, 8, 9], "integ": [1, 4], "id": [1, 7, 10], "dict": [1, 3, 4, 5, 7, 8, 10], "int": [1, 3, 4, 5, 7, 8, 10], "float": [1, 3, 4, 5, 7, 8, 10], "valu": [1, 3, 4, 5, 7, 9, 10], "return": [1, 3, 4, 5, 7, 8, 9, 10], "type": [1, 3, 4, 5, 7, 8, 9, 10], "new": [1, 4, 5, 7, 8, 10], "jacobian": 1, "y": [1, 3, 4, 5, 9, 10], "x": [1, 3, 4, 5, 9, 10], "create_graph": 1, "fals": [1, 3, 5, 7, 8, 10], "allow_unus": 1, "true": [1, 3, 4, 5, 7, 8, 9, 10], "comput": [1, 3, 4, 5, 7, 8, 10], "dy": [1, 10], "dx": [1, 10], "respect": 1, "variabl": [1, 4, 5, 8, 10], "can": [1, 4, 5, 7, 8, 10], "have": [1, 3, 4, 5, 7, 8, 10], "multipl": [1, 4, 7, 8, 10], "element": [1, 4, 5, 10], "If": [1, 3, 4, 5, 7, 8, 10], "ha": [1, 4, 5, 7, 10], "i": [1, 3, 4, 5, 7, 8, 9, 10], "vectoris": 1, "via": [1, 4, 5, 7, 8, 10], "vmap": 1, "tensor": [1, 3, 4, 5, 7, 8, 10], "differenti": [1, 4, 7, 10], "depend": [1, 4], "bool": [1, 3, 4, 7, 8, 10], "graph": 1, "deriv": 1, "construct": 1, "allow": [1, 4, 7, 10], "higher": [1, 4, 7, 10], "order": [1, 4, 7, 8, 9, 10], "product": [1, 4], "default": [1, 5, 7, 8, 10], "specifi": [1, 5, 7, 8, 10], "input": 1, "were": [1, 4, 5], "when": [1, 4, 7, 8, 10], "output": 1, "therefor": [1, 10], "grad": [1, 4], "alwai": [1, 4, 10], "shape": [1, 5], "x0_from_mixtur": 1, "densiti": 1, "weight_frac": 1, "none": [1, 3, 4, 5, 7, 8, 9, 10], "volume_frac": 1, "mixtur": 1, "non": [1, 10], "chemic": 1, "bond": 1, "materi": [1, 4, 7, 10], "base": [1, 3, 4, 5, 7, 8, 10], "http": [1, 4, 10], "cd": 1, "cern": 1, "ch": 1, "record": [1, 3, 4, 5, 7, 8, 9, 10], "1279627": 1, "file": [1, 7, 8], "ph": 1, "ep": 1, "tech": 1, "note": [1, 4], "2010": 1, "013": 1, "pdf": [1, 4, 10], "union": [1, 5, 7, 8, 10], "list": [1, 3, 4, 5, 7, 8, 10], "metr": [1, 3, 4, 5, 7, 10], "kg": 1, "m": [1, 5, 10], "3": [1, 3, 4, 5, 10], "rel": [1, 4, 10], "amount": [1, 4, 5], "each": [1, 4, 5, 7, 8, 10], "weight": [1, 4, 10], "The": [1, 3, 4, 7, 8, 10], "x0targs_to_classtarg": 1, "x02id": [1, 7], "target": [1, 4, 7, 8, 10], "To": [1, 4], "account": [1, 4, 7, 8, 10], "point": [1, 3, 4, 5, 7, 8, 10], "precis": [1, 4, 5, 7, 8, 10], "ar": [1, 4, 5, 7, 8, 9, 10], "which": [1, 4, 5, 7, 8, 10], "closest": [1, 4], "kei": [1, 5], "thi": [1, 4, 5, 7, 8, 9, 10], "mean": [1, 4, 8, 10], "method": [1, 3, 4, 5, 7, 8, 10], "cannot": [1, 4], "detect": [1, 7, 10], "miss": 1, "from": [1, 3, 4, 5, 7, 8, 10], "even": [1, 4, 7], "isn": 1, "t": [1, 3, 4, 5, 10], "modifi": [1, 5], "place": [1, 4, 5, 10], "ladle_furnac": 2, "phi_detector": 2, "small_wal": 2, "u_lorri": 2, "phidetectorpanel": 3, "init_phi": 3, "init_z": [3, 5], "re": [3, 10], "eff": [3, 4, 10], "devic": [3, 5, 8, 10], "cpu": [3, 5, 8, 10], "detectorpanel": [3, 8, 10], "research": 3, "onli": [3, 4, 5, 7, 8, 10], "unit": [3, 4, 7, 10], "_is_full_backward_hook": [3, 10], "option": [3, 4, 5, 7, 8, 9, 10], "clamp_param": [3, 10], "xyz_low": [3, 10], "xyz_high": [3, 10], "ensur": [3, 7, 8, 10], "panel": [3, 7, 8], "centr": [3, 4, 10], "within": [3, 4, 5, 7, 8, 10], "suppli": [3, 5, 10], "xyz": [3, 4, 5, 7, 10], "rang": [3, 5, 7, 8, 10], "span": [3, 10], "between": [3, 4, 5, 7, 10], "20": [3, 10], "10": [3, 7, 10], "A": [3, 7, 8, 10], "small": [3, 4, 10], "random": [3, 10], "number": [3, 4, 5, 7, 8, 10], "1e": [3, 10], "ad": [3, 4, 5, 7, 10], "subtract": [3, 10], "min": [3, 10], "max": [3, 10], "z": [3, 4, 5, 7, 8, 9, 10], "posit": [3, 4, 5, 7, 8, 9, 10], "doesn": [3, 10], "overlap": [3, 10], "other": [3, 4, 7, 8, 10], "tupl": [3, 4, 5, 7, 8, 10], "minimum": [3, 5, 10], "maximum": [3, 7, 10], "get_effici": [3, 10], "xy": [3, 4, 5, 7, 8, 9, 10], "mask": [3, 5, 10], "as_2d": [3, 10], "effici": [3, 4, 5, 7, 8, 10], "run": [3, 5, 7, 8, 10], "evalu": [3, 8, 10], "mode": [3, 7, 8, 10], "realistic_valid": [3, 10], "full": [3, 7, 8, 10], "insid": [3, 7, 10], "indic": [3, 4, 7, 10], "zero": [3, 4, 7, 8, 10], "outsid": [3, 7, 10], "otherwis": [3, 4, 7, 10], "gaussian": [3, 4, 8, 10], "model": [3, 4, 5, 7, 10], "n": [3, 4, 5, 7, 10], "pre": [3, 10], "boolean": [3, 4, 5, 7, 10], "where": [3, 4, 5, 7, 8, 10], "requir": [3, 4, 5, 8, 10], "than": [3, 7, 10], "automat": [3, 5, 7, 10], "get_hit": [3, 4, 5, 10], "mu": [3, 4, 7, 8, 10], "budget": [3, 7, 8, 10], "main": [3, 7, 10], "interact": [3, 10], "hit": [3, 4, 5, 7, 9, 10], "consist": [3, 9, 10], "reco_xi": [3, 5, 10], "reconstruct": [3, 10], "includ": [3, 4, 7, 10], "simul": [3, 5, 10], "resolut": [3, 4, 7, 8, 10], "gen_xi": [3, 5, 10], "gener": [3, 7, 8, 10], "level": [3, 4, 10], "str": [3, 4, 5, 7, 8, 9, 10], "get_resolut": [3, 10], "train": [3, 7, 8, 10], "phidetscatterbatch": 3, "scatterbatch": [3, 4, 8], "untest": 3, "_compute_track": [3, 4], "track": [3, 4, 7], "accord": [3, 4, 5, 7, 8, 10], "uncertainti": [3, 4], "1": [3, 4, 5, 7, 8, 10], "_extract_hit": [3, 4], "take": [3, 4, 10], "dictionari": [3, 4, 5, 7, 8, 10], "combin": [3, 4, 7], "them": [3, 4, 7, 8, 10], "singl": [3, 4, 5, 7, 8, 10], "static": [3, 4, 5, 7, 8, 10], "_get_hit_unc": 3, "zordered_panel": 3, "get_muon_trajectori": [3, 4], "unc": [3, 4], "lw": [3, 4, 10], "h": [3, 10], "phi": [3, 4, 5], "0": [3, 4, 5, 7, 8, 10], "assum": [3, 4, 10], "an": [3, 4, 7, 10], "analyt": [3, 4], "likelihood": [3, 4], "maximis": [3, 4], "l": [3, 8], "prod_i": 3, "g": [3, 4, 5, 7, 8, 10], "h_i": 3, "h_": 3, "opt": [3, 8], "y0": 3, "theta": [3, 4, 5, 10], "x_": 3, "co": [3, 4], "phi_i": 3, "y_": 3, "sin": 3, "z_i": 3, "tan": 3, "z0": 3, "coordin": [3, 5], "angl": [3, 4, 5, 10], "sum_i": 3, "unc_i": 3, "2": [3, 4, 5, 10], "sun_i": 3, "In": [3, 4, 5, 8], "eval": [3, 10], "nan": [3, 4, 7, 10], "trajectori": [3, 4, 5, 8, 10], "valid": [3, 7, 8], "plot_scatt": [3, 4], "idx": [3, 4], "represent": [3, 4, 7], "fit": [3, 4, 7, 8, 10], "index": [3, 4, 5, 10], "genscatterbatch": 4, "inform": [4, 5, 8, 10], "incom": [4, 7, 10], "outgo": 4, "intend": [4, 10], "diagnost": 4, "purpos": 4, "carri": 4, "gradient": [4, 7, 8], "w": [4, 5, 10], "r": [4, 5, 10], "detector": [4, 5, 7, 8, 9, 10], "except": [4, 5, 10], "linear": 4, "perform": [4, 8, 10], "separ": 4, "all": [4, 5, 7, 8, 10], "associ": [4, 5, 7, 8], "layer": [4, 5, 7, 8, 9], "group": [4, 10], "po": [4, 5, 10], "attribut": [4, 5, 7, 10], "current": [4, 5, 7, 10], "expect": [4, 10], "abov": [4, 5, 10], "passiv": [4, 5, 7, 8, 9, 10], "those": [4, 5, 7, 10], "below": [4, 5, 10], "minimis": 4, "consid": [4, 7], "doe": [4, 5, 10], "e": [4, 5, 7, 8, 9, 10], "third": 4, "set": [4, 5, 7, 8, 10], "sinc": [4, 8, 10], "split": [4, 8], "n_hits_abov": 4, "One": 4, "instanc": [4, 10], "should": [4, 5, 7, 8, 10], "creat": [4, 5, 7, 10], "muonbatch": [4, 5, 7, 8, 10], "As": [4, 7], "part": [4, 7, 10], "initialis": [4, 5, 7, 8, 10], "filter": 4, "_filter_scatt": 4, "avoid": 4, "inf": 4, "result": [4, 5, 10], "direct": [4, 5], "chang": [4, 5, 7, 10], "mani": [4, 5], "further": 4, "downstream": 4, "lazi": 4, "basi": 4, "memois": 4, "first": [4, 7, 9], "request": [4, 8], "store": [4, 5, 8, 10], "case": 4, "dtheta": [4, 5], "dphi": 4, "total": [4, 7, 8, 10], "under": [4, 10], "assumpt": 4, "angular": [4, 5], "necessari": [4, 8], "here": [4, 10], "loss": [4, 6, 7, 8], "undergo": [4, 10], "pi": [4, 5], "neg": [4, 5], "becom": 4, "one": [4, 7, 8, 10], "tell": 4, "whether": [4, 7, 8, 10], "instead": [4, 5, 7, 10], "larg": [4, 5, 7], "occur": [4, 8], "total_scatt": 4, "quadratur": 4, "sum": [4, 10], "three": [4, 10], "both": [4, 8, 10], "hypothes": 4, "final": [4, 7], "chosen": [4, 10], "hypothesi": 4, "been": [4, 7], "found": [4, 10], "good": 4, "through": [4, 5, 7, 8, 10], "travel": [4, 5], "object": [4, 5, 7, 8, 10], "_compute_dtheta_dphi_scatt": 4, "theta_in": 4, "phi_in": 4, "theta_out": 4, "phi_out": 4, "_compute_out_var_unc": 4, "var": 4, "due": 4, "error": [4, 7], "propag": [4, 5, 7, 10], "triangl": 4, "matrix": 4, "off": [4, 5], "diagon": 4, "behaviour": 4, "_compute_phi": 4, "compon": [4, 7, 10], "vector": 4, "_compute_scatt": [4, 10], "normal": [4, 8, 10], "extract": 4, "handl": 4, "locat": [4, 7, 8, 10], "adapt": 4, "misc": 4, "3334866": 4, "titl": 4, "two": [4, 10], "line": 4, "brian": 4, "math": 4, "stackexchang": 4, "com": 4, "user": [4, 7, 10], "72614": 4, "howpublish": 4, "mathemat": 4, "stack": [4, 5, 10], "exchang": 4, "url": 4, "q": 4, "version": 4, "2019": [4, 10], "08": 4, "26": 4, "eprint": 4, "_compute_theta": 4, "_compute_theta_msc": 4, "p": [4, 5, 7, 8], "cosin": 4, "dot": 4, "NOT": [4, 5, 10], "pleas": [4, 7, 10], "code": 4, "kept": [4, 7], "still": [4, 7], "_compute_xyz_in": 4, "top": [4, 10], "_compute_xyz_out": 4, "bottom": [4, 7, 9, 10], "_cross_track": 4, "_dphi": 4, "_dphi_unc": 4, "_dtheta": 4, "_dtheta_unc": 4, "_dtheta_xi": 4, "_dtheta_xy_unc": 4, "_dxy": 4, "_dxy_unc": 4, "might": [4, 8], "seem": 4, "heavi": 4, "hand": 4, "invalid": 4, "extrem": [4, 5], "spoil": 4, "remov": [4, 5], "ani": [4, 5, 7, 8, 10], "least": [4, 5], "high": [4, 7], "ok": 4, "some": [4, 7, 10], "configur": [4, 8, 10], "tini": 4, "best": 4, "manual": [4, 5, 10], "unneed": 4, "gain": 4, "increas": [4, 9], "avail": [4, 7, 10], "criteria": 4, "parallel": 4, "far": 4, "its": [4, 5, 7, 10], "1e10": 4, "_gen_hit": 4, "_hit_eff": 4, "_hit_unc": 4, "_phi_in": 4, "_phi_in_unc": 4, "_phi_out": 4, "_phi_out_unc": 4, "_poca_xyz": 4, "_poca_xyz_unc": 4, "_reco_hit": 4, "_set_dtheta_dphi_scatt": 4, "simultan": 4, "_theta_in": 4, "_theta_in_unc": 4, "_theta_msc": 4, "_theta_msc_unc": 4, "_theta_out": 4, "_theta_out_unc": 4, "_theta_xy_in": 4, "_theta_xy_in_unc": 4, "_theta_xy_out": 4, "_theta_xy_out_unc": 4, "_total_scatt": 4, "_total_scatter_unc": 4, "_track_coef": 4, "_track_in": 4, "_track_out": 4, "_track_start_in": 4, "_track_start_out": 4, "_xyz_in": 4, "_xyz_in_unc": 4, "_xyz_out": 4, "_xyz_out_unc": 4, "properti": [4, 5, 10], "above_gen_hit": 4, "above_hit_eff": 4, "above_hit_unc": 4, "above_hit": 4, "below_gen_hit": 4, "below_hit_eff": 4, "below_hit_unc": 4, "below_hit": 4, "delta": 4, "dphi_unc": 4, "dtheta_unc": 4, "dtheta_xi": 4, "theta_xi": [4, 5], "zx": 4, "zy": 4, "plane": [4, 5, 10], "dtheta_xy_unc": 4, "dxy": 4, "distanc": [4, 5, 7, 10], "poca": [4, 7, 9], "dxy_unc": 4, "gen_hit": 4, "whilst": [4, 7, 10], "No": 4, "length": [4, 7, 10], "width": [4, 10], "start": [4, 5, 7, 10], "initi": [4, 5, 7, 10], "vec": 4, "get_scatter_mask": 4, "hit_eff": 4, "hit_unc": 4, "per": [4, 7, 8, 10], "n_hits_below": 4, "phi_in_unc": 4, "phi_out_unc": 4, "poca_xyz": 4, "poca_xyz_unc": 4, "reco_hit": 4, "theta_in_unc": 4, "theta_msc": 4, "rule": 4, "better": [4, 7, 10], "theta_msc_unc": 4, "theta_out_unc": 4, "theta_xy_in": 4, "decompos": 4, "theta_xy_in_unc": 4, "theta_xy_out": 4, "theta_xy_out_unc": 4, "fot": 4, "total_scatter_unc": 4, "track_in": 4, "track_out": 4, "track_start_in": 4, "track_start_out": 4, "xyz_in": 4, "xyz_in_unc": 4, "xyz_out": 4, "xyz_out_unc": 4, "absintclassifierfromx0": 4, "partial_x0_inferr": 4, "output_prob": 4, "class2float": 4, "absvolumeinferr": [4, 8], "abstract": [4, 5, 8, 10], "multiclass": 4, "classif": 4, "voxelwis": [4, 7, 9], "inherit": [4, 5, 7, 8, 10], "must": [4, 7, 10], "provid": [4, 5, 7, 8, 10], "wai": 4, "probabl": [4, 10], "dimens": 4, "basic": 4, "inferr": [4, 7], "raw": 4, "most": [4, 9], "latter": [4, 10], "process": [4, 7, 8, 10], "function": [4, 5, 8, 10], "absx0inferr": 4, "partial": 4, "instati": 4, "pass": [4, 5, 7, 8, 10], "probabilit": 4, "argmax": 4, "over": [4, 5, 7, 8, 10], "last": [4, 5, 7], "callabl": [4, 8, 10], "_abc_impl": [4, 8, 10], "_abc_data": [4, 8, 10], "_reset_var": 4, "reset": [4, 7], "made": [4, 7], "batch": [4, 5, 7, 8, 10], "add_scatt": 4, "append": [4, 7, 8, 10], "vairabl": 4, "get_predict": 4, "call": [4, 5, 7, 8, 10], "": [4, 5, 7, 8, 10], "up": [4, 7, 8, 10], "compute_effici": 4, "compuat": 4, "implement": [4, 5, 7, 8, 10], "contain": [4, 5, 7, 8, 10], "whose": 4, "predicion": 4, "dure": [4, 7, 10], "inv_weight": [4, 8], "pred": [4, 7, 8, 9], "x02prob": 4, "vox_pr": 4, "overrid": [4, 5, 8, 10], "fed": 4, "given": [4, 5], "individu": [4, 10], "accompani": 4, "invers": 4, "design": [4, 7, 8, 10], "divid": 4, "targ": [4, 7], "everi": [4, 5, 7, 8, 10], "voxel": [4, 7, 10], "approach": [4, 10], "assign": [4, 7, 8, 10], "entireti": 4, "pdg": [4, 10], "describ": [4, 10], "lbl": [4, 10], "gov": [4, 10], "review": [4, 10], "rpp2018": [4, 10], "rev": [4, 10], "passag": [4, 10], "particl": [4, 10], "matter": [4, 10], "onc": [4, 5, 7], "proce": [4, 8], "thusli": 4, "For": [4, 5, 8, 10], "p_ij": 4, "wa": [4, 7], "j": 4, "These": 4, "integr": 4, "uncorrel": [4, 10], "scale": [4, 8], "equal": [4, 5, 10], "multipli": [4, 10], "e_i": 4, "w_ij": 4, "give": 4, "x_0": 4, "left": [4, 10], "frac": 4, "0136": 4, "mathrm": 4, "rm": 4, "right": 4, "bar": 4, "_": 4, "tot": 4, "differ": [4, 5, 7, 10], "whole": [4, 8], "popul": 4, "rmss": 4, "term": 4, "side": 4, "equat": 4, "addit": [4, 5], "varianc": 4, "squar": [4, 10], "x0_j": 4, "natur": 4, "log": [4, 7], "simplifi": 4, "reli": [4, 10], "heavili": 4, "care": [4, 10], "privat": 4, "_combine_scatt": 4, "data": [4, 6, 7, 8, 10], "so": [4, 7], "entri": 4, "out": 4, "aid": 4, "pair": [4, 5, 7], "retriev": [4, 5, 7, 10], "_get_voxel_zxy_x0_pred_unc": 4, "incredibli": 4, "slow": 4, "recommend": [4, 10], "_get_voxel_zxy_x0_pr": 4, "todo": [4, 7, 9, 10], "spread": 4, "_muon_effici": 4, "_muon_probs_per_voxel_zxi": 4, "_muon_scatter_var_unc": 4, "_muon_scatter_var": 4, "_n_mu": 4, "_set_var_dimens": 4, "_var_order_sz": 4, "tot_scatt": 4, "mom": [4, 5, 8, 10], "_vox_zxy_x0_pred_unc": 4, "_vox_zxy_x0_pr": 4, "_weighted_mean": 4, "wgt": 4, "row": 4, "_weighted_rm": 4, "root": 4, "muon_effici": 4, "muon_mom": 4, "momenta": [4, 5], "muon_mom_unc": 4, "muon_poca_xyz": 4, "muon_poca_xyz_unc": 4, "muon_probs_per_voxel_zxi": 4, "don": 4, "muon_theta_in": 4, "muon_theta_in_unc": 4, "muon_theta_out": 4, "muon_theta_out_unc": 4, "muon_total_scatt": 4, "muon_total_scatter_unc": 4, "n_mu": 4, "vox_zxy_x0_pred_unc": 4, "Not": 4, "long": [4, 10], "calcul": 4, "vox_zxy_x0_pr": 4, "x0_from_scatt": 4, "deltaz": 4, "invert": 4, "height": [4, 10], "momentum": [4, 5, 8, 10], "estim": 4, "denseblockclassifierfromx0": 4, "n_block_voxel": 4, "use_avgpool": 4, "cut_coef": 4, "10000": 4, "ratio_offset": 4, "ratio_coef": 4, "presenc": 4, "denser": 4, "transform": [4, 7], "wise": [4, 7], "binari": 4, "statist": 4, "dens": 4, "block": [4, 10], "against": [4, 7], "light": 4, "background": 4, "bkg": 4, "blk": 4, "sigma": [4, 10], "b": 4, "lowest": [4, 10], "remain": [4, 8, 10], "rescal": [4, 10], "coeffici": [4, 7, 8, 10], "offset": 4, "constrain": 4, "beween": 4, "present": [4, 7, 8], "nearer": 4, "form": [4, 8, 10], "contigu": [4, 10], "blur": 4, "stride": 4, "kernel": 4, "size": [4, 8, 10], "averag": [4, 7], "pool": 4, "actual": [4, 10], "cut": 4, "sigmoid": [4, 10], "kth": 4, "statisitc": 4, "also": [4, 5, 8, 10], "occupi": [4, 10], "wether": 4, "prediciton": 4, "sharp": 4, "sharper": [4, 7, 10], "constant": [4, 5, 9], "ratio": [4, 10], "scatter_batch": 4, "panelx0inferr": [4, 8], "paneldetectorlay": [4, 7, 10], "absmuongener": [5, 7, 8], "x_rang": 5, "y_rang": 5, "fixed_mom": 5, "5": [5, 10], "energy_rang": 5, "500": 5, "theta_rang": 5, "2217304763960306": 5, "core": 5, "flux": 5, "generate_set": 5, "kinemat": 5, "sampl": [5, 7, 10], "uniformli": 5, "region": 5, "absolut": [5, 10], "refer": [5, 8, 10], "frame": [5, 10], "gev": 5, "radian": 5, "_muon_mass2": 5, "01116369210198225": 5, "_n_bins_energi": 5, "200": 5, "_n_bins_theta": 5, "energi": 5, "classmethod": [5, 8], "from_volum": [5, 8], "min_angl": 5, "2617993877991494": 5, "heurist": 5, "d": 5, "balanc": 5, "trade": 5, "realism": 5, "boundari": [5, 7, 8, 10], "would": [5, 10], "directli": 5, "toward": 5, "n_muon": 5, "rank": 5, "2pi": 5, "muongenerator2015": 5, "guan": 5, "et": 5, "al": 5, "2015": 5, "arxiv": 5, "1509": 5, "06176": 5, "p1": 5, "102573": 5, "p2": 5, "068287": 5, "p3": 5, "958633": 5, "p4": 5, "0407253": 5, "p5": 5, "817285": 5, "gaisser": 5, "formula": 5, "cosmic": 5, "np": 5, "incid": 5, "muongenerator2016": 5, "shukla": 5, "sanskrith": 5, "2018": 5, "1606": 5, "06907": 5, "e_0": 5, "87": 5, "e_c": 5, "i_0": 5, "88": 5, "38": 5, "1938": 5, "rod": 5, "174": 5, "epinv": 5, "00117096018735363": 5, "xy_p_theta_phi": [5, 7], "own": 5, "axi": [5, 10], "upward": 5, "mai": [5, 7, 10], "anticlockwis": 5, "updat": [5, 7, 8, 10], "propagate_dz_dz": 5, "dz": 5, "propagate_dz_d": 5, "scatter_dxi": 5, "dx_vol": [5, 10], "dy_vol": [5, 10], "shift": 5, "scatter_dtheta_dphi": 5, "dtheta_vol": [5, 10], "dphi_vol": [5, 10], "alter": 5, "eventu": 5, "extend": [5, 7], "about": [5, 7, 8], "reco_mom": 5, "howev": [5, 10], "measur": 5, "By": [5, 10], "snapshot_xyz": 5, "time": [5, 10], "xyz_hist": 5, "append_hit": 5, "_hit": 5, "_keep_mask": 5, "_mom": 5, "_phi": 5, "_theta": 5, "_x": 5, "_xy": 5, "_xyz": 5, "_y": 5, "_z": 5, "either": [5, 7, 10], "copi": 5, "detach": 5, "clone": 5, "theta_ref": 5, "compar": [5, 9], "dtheta_x": 5, "theta_ref_x": 5, "theta_x": [5, 10], "dtheta_i": 5, "theta_ref_i": 5, "theta_i": [5, 10], "filter_muon": 5, "keep_mask": 5, "along": 5, "xy_low": 5, "xy_high": 5, "eas": 5, "n_hit": 5, "lower": [5, 7, 10], "limit": [5, 7], "upper": 5, "get_xy_mask": [5, 10], "correspond": [5, 10], "p_dim": 5, "ph_dim": 5, "phi_from_theta_xi": 5, "work": [5, 8], "xz": 5, "yz": 5, "anti": 5, "clockwis": 5, "propagate_d": 5, "flight": [5, 10], "move": [5, 7, 10], "propagate_dz": 5, "afterward": [5, 10], "thei": [5, 7, 8, 10], "downward": 5, "remove_upwards_muon": 5, "after": [5, 7, 8, 10], "scatter": [5, 7, 8, 10], "make": [5, 7, 9, 10], "sure": 5, "complet": [5, 7, 8], "longer": 5, "displac": [5, 10], "th_dim": 5, "4": [5, 10], "theta_from_theta_xi": 5, "theta_x_from_theta_phi": 5, "theta_y_from_theta_phi": 5, "upwards_muon": 5, "x_dim": 5, "y_dim": 5, "z_dim": 5, "callback": [6, 8], "wrapper": [6, 7], "absvolumewrapp": [7, 8, 10], "interject": [7, 8], "variou": [7, 8, 10], "do": [7, 10], "noth": [7, 10], "check": [7, 10], "see": [7, 10], "exactli": 7, "write": [7, 8], "volumewrapp": [7, 10], "Their": 7, "fit_param": 7, "fitparam": [7, 8], "style": [7, 9], "It": [7, 10], "read": [7, 8], "rather": [7, 10], "on_": [7, 8], "_begin": [7, 8], "_end": [7, 8], "loop": [7, 8, 10], "set_wrapp": [7, 8], "on_train_begin": [7, 8], "epoch": [7, 8], "n_epoch": [7, 8], "state": [7, 8], "on_epoch_begin": [7, 8], "enumer": [7, 8], "trn_passiv": [7, 8], "passive_b": [7, 8], "on_volume_batch_begin": [7, 8], "load": [7, 8, 10], "on_volume_begin": [7, 8], "muon_batch": [7, 8], "n_mu_per_volum": [7, 8], "mu_b": [7, 8], "on_mu_batch_begin": [7, 8], "irradi": [7, 8], "on_scatter_end": [7, 8], "on_mu_batch_end": [7, 8], "on_x0_pred_begin": [7, 8], "overal": [7, 8], "on_x0_pred_end": [7, 8], "cost": [7, 8, 10], "add": [7, 8, 10], "on_volume_batch_end": [7, 8], "on_backwards_begin": [7, 8], "backpropag": [7, 8], "on_backwards_end": [7, 8], "viii": [7, 8], "physic": [7, 8, 10], "absdetectorlay": [7, 8, 10], "conform_detector": [7, 8, 10], "viv": [7, 8], "len": [7, 8], "break": [7, 8], "on_epoch_end": [7, 8], "val_pass": [7, 8], "on_train_end": [7, 8], "yet": 7, "begin": [7, 10], "end": [7, 8], "on_pred_begin": 7, "on_pred_end": 7, "finish": 7, "latest": 7, "on_step_end": 7, "layout": [7, 10], "on_volume_end": 7, "befor": 7, "cycliccallback": [7, 8], "muonresampl": 7, "resampl": 7, "impact": 7, "check_mu_batch": 7, "determin": 7, "prior": [7, 10], "realist": 7, "gen": 7, "until": [7, 8], "replac": 7, "hitrecord": [7, 9], "scatterrecord": [7, 9], "get_record": [7, 9], "plot_hit_dens": [7, 9], "distinct": 7, "_to_df": 7, "save": [7, 8, 9], "panda": 7, "datafram": [7, 9], "plot_scatter_dens": [7, 9], "_reset": 7, "prepar": [7, 10], "as_df": 7, "access": 7, "evalmetr": [7, 8], "lower_metric_bett": 7, "name": [7, 8], "main_metr": 7, "metric": [7, 8], "metriclogg": [7, 8], "live": 7, "feedback": 7, "get_metr": 7, "nomorenan": 7, "introduc": 7, "need": [7, 8, 10], "heatmapgif": 7, "gif_filenam": 7, "heatmap": 7, "gif": 7, "savenam": [7, 8, 9], "savepath": 7, "_create_gif": 7, "imag": 7, "_plot_curr": 7, "optimisation_histori": 7, "gif_length": 7, "show_plot": 7, "show": 7, "varieti": 7, "help": 7, "highlight": 7, "problem": 7, "hyper": 7, "without": 7, "print": 7, "histori": 7, "get_loss_histori": 7, "addition": 7, "control": 7, "second": 7, "notebook": [7, 10], "_build_grid_spec": 7, "gridspec": 7, "snapshot": 7, "_prep_plot": 7, "_snapshot_monitor": 7, "cat_palett": 7, "tab10": 7, "get": 7, "get_result": 7, "loaded_best": 7, "h_mid": 7, "8": 7, "lbl_col": 7, "black": 7, "lbl_sz": 7, "24": 7, "leg_sz": 7, "16": 7, "info": 7, "clean": 7, "grab": 7, "sub": [7, 10], "print_loss": 7, "rc": 7, "patch": 7, "edgecolor": 7, "whitegrid": 7, "tk_col": 7, "tk_sz": 7, "update_plot": 7, "w_mid": 7, "14": 7, "222222222222221": 7, "panelmetriclogg": 7, "logger": [7, 8], "_set_axes_label": 7, "clear": 7, "predhandl": [7, 8], "collect": 7, "numpi": 7, "get_pr": [7, 8], "save2hdf5predhandl": 7, "path": [7, 8, 10], "use_volume_target": 7, "overwrit": 7, "compress": 7, "lzf": 7, "volumetargetpredhandl": 7, "hdf5": 7, "cach": 7, "written": 7, "increment": 7, "lookup": [7, 10], "exist": 7, "same": [7, 10], "string": [7, 8, 10], "_open_fil": 7, "_write_data": 7, "costcoefwarmup": 7, "n_warmup": 7, "warmupcallback": [7, 8], "more": [7, 9, 10], "stabl": 7, "absdetectorloss": [7, 8], "sever": [7, 8], "warm": 7, "phase": 7, "fix": [7, 8, 10], "wait": 7, "warmup": 7, "activ": 7, "enough": [7, 8], "past": 7, "median": 7, "paneloptconfig": 7, "xy_pos_r": 7, "z_pos_rat": 7, "xy_span_r": 7, "budget_r": 7, "desir": 7, "step": [7, 10], "cours": 7, "suitabl": 7, "learn": [7, 8, 10], "rate": [7, 8, 10], "expand": 7, "fraction": [7, 8, 10], "postwarmupcallback": 7, "obejct": 7, "_activ": 7, "check_warmup": 7, "act": [7, 8, 10], "prevent": 7, "flag": 7, "warmup_act": 7, "super": 7, "next": [7, 10], "skip": 7, "unset": 7, "panelupdatelimit": 7, "max_xy_step": 7, "max_z_step": 7, "max_xy_span_step": 7, "being": [7, 8, 10], "affect": [7, 10], "anomol": 7, "enact": 7, "hard": 7, "clamp": 7, "xy_span": [7, 10], "paramat": 7, "goe": 7, "sigmoidpanelsmoothnessschedul": [7, 10], "smooth_rang": 7, "anneal": [7, 10], "schedul": 7, "smooth": [7, 10], "sigmoiddetectorpanel": [7, 10], "unphys": 7, "sensit": [7, 10], "decreas": [7, 8, 10], "edg": [7, 10], "close": 7, "resembl": 7, "appropri": 7, "come": 7, "_set_smooth": 7, "At": 7, "partial_opt": 8, "loss_func": 8, "partial_scatter_inferr": 8, "partial_volume_inferr": 8, "mu_gener": 8, "_build_opt": 8, "qualiti": 8, "life": 8, "val_loss": 8, "broken": 8, "_fit_epoch": 8, "_scan_volum": 8, "support": [8, 10], "mechan": 8, "aspect": [8, 10], "abl": 8, "awar": 8, "iter": [8, 10], "optim": [8, 10], "uninitialis": 8, "plan": 8, "kwarg": 8, "self": 8, "res_opt": 8, "get_detector": [8, 10], "eff_opt": 8, "keyword": 8, "argument": 8, "again": 8, "scan": 8, "prematur": 8, "_sort_cb": 8, "cb": 8, "sort": 8, "telemetri": 8, "cyclic": 8, "cb_savepath": 8, "train_weight": 8, "count": 8, "reach": 8, "passiveyield": 8, "get_opt_lr": 8, "get_opt_mom": 8, "beta_1": 8, "get_param_count": 8, "trainabl": 8, "pred_cb": 8, "pred_callback": 8, "set_opt_lr": 8, "lr": 8, "set_opt_mom": 8, "cyclic_cb": 8, "epoch_bar": 8, "progressbar": 8, "loss_val": 8, "mean_loss": 8, "metric_cb": 8, "metric_log": 8, "passive_bar": 8, "nbprogressbar": 8, "consoleprogressbar": 8, "sb": 8, "skip_opt_step": 8, "stop": 8, "tst_passiv": 8, "volume_id": 8, "volume_inferr": 8, "warmup_cb": 8, "heatmapvolumewrapp": 8, "mu_opt": 8, "norm_opt": 8, "sig_opt": 8, "z_pos_opt": 8, "detectorheatmap": [8, 10], "adjust": 8, "normalis": [8, 10], "from_sav": 8, "instanti": [8, 10], "panelvolumewrapp": 8, "xy_pos_opt": 8, "xy_span_opt": 8, "budget_opt": 8, "global": 9, "produc": 9, "hit_df": 9, "scatter_df": 9, "plot_pred_true_x0": 9, "2d": [9, 10], "revis": 9, "intuit": 9, "init_xyz": 10, "init_xy_span": 10, "m2_cost": 10, "n_cluster": 10, "30": 10, "assign_budget": 10, "musigz_low": 10, "musigz_high": 10, "get_cost": 10, "plot_map": 10, "bpixel": 10, "bsavefig": 10, "filenam": 10, "abslay": 10, "oper": 10, "_n_cost": 10, "learnabl": 10, "correct": 10, "how": 10, "type_label": 10, "encod": 10, "extra": 10, "pure": 10, "togeth": 10, "meter": 10, "ax": 10, "divis": 10, "correctli": 10, "relat": 10, "proper": 10, "determinist": 10, "currenc": 10, "lie": 10, "etc": 10, "forward": 10, "get_lw_z_siz": 10, "modulelist": 10, "_backward_hook": 10, "_buffer": 10, "_forward_hook": 10, "_forward_pre_hook": 10, "_load_state_dict_pre_hook": 10, "_modul": 10, "_non_persistent_buffers_set": 10, "_paramet": 10, "_state_dict_hook": 10, "zeroth": 10, "highest": 10, "necessarili": 10, "investig": 10, "bound": 10, "get_devic": 10, "helper": 10, "rais": 10, "get_panel_zord": 10, "rad_length": 10, "yield_zordered_panel": 10, "yield": 10, "passivelay": 10, "rad_length_func": 10, "step_sz": 10, "01": 10, "pgeant": 10, "develop": 10, "parameteris": 10, "geant": 10, "radiat": 10, "n_x": 10, "n_y": 10, "exampl": 10, "def": 10, "arb_rad_length": 10, "torch": 10, "ones": 10, "lead": 10, "beryllium": 10, "later": 10, "load_rad_length": 10, "select": 10, "travers": 10, "_pdg_scatter": 10, "log_term": 10, "_pgeant_scatt": 10, "abs2idx": 10, "possibl": 10, "seri": 10, "mu_abs2idx": 10, "look": 10, "scatter_and_propag": 10, "prespecifi": 10, "neighbour": 10, "infinit": 10, "thin": 10, "rectangular": 10, "despit": 10, "nn": 10, "continu": 10, "across": 10, "decid": 10, "area": 10, "learnt": 10, "effect": 10, "now": 10, "improv": 10, "resiz": 10, "meet": 10, "interpret": 10, "budget_scal": 10, "match": 10, "overridden": 10, "subclass": 10, "although": 10, "recip": 10, "former": 10, "regist": 10, "hook": 10, "while": 10, "silent": 10, "ignor": 10, "get_gauss": 10, "distribut": 10, "get_scaled_xy_span": 10, "xy2": 10, "li": 10, "border": 10, "slower": 10, "wherea": 10, "transit": 10, "strongli": 10, "approxim": 10, "sig_model": 10, "nomin": 10, "interfac": 10, "conveni": 10, "respons": 10, "could": 10, "volumeclassloss": 10, "low": 10, "front": 10, "zxy": 10, "corner": 10, "spars": 10, "_check_pass": 10, "_configure_budget": 10, "budget_weight": 10, "explicit": 10, "hierarchi": 10, "thu": 10, "_n_layer_cost": 10, "softmax": 10, "slice": 10, "taken": 10, "_get_devic": 10, "system": 10, "amongst": 10, "build_edg": 10, "draw": 10, "xlim": 10, "ylim": 10, "zlim": 10, "pertain": 10, "jupyt": 10, "matplotlib": 10, "you": 10, "rotat": 10, "dimension": 10, "turn": 10, "won": 10, "explicitli": 10, "get_passive_z_rang": 10, "get_pass": 10, "get_rad_cub": 10, "lookup_passive_xyz_coord": 10, "passive_s": 10}, "objects": {"tomopt.benchmarks.phi_detector": [[3, 0, 0, "-", "detector"], [3, 0, 0, "-", "inference"]], "tomopt.benchmarks.phi_detector.detector": [[3, 1, 1, "", "PhiDetectorPanel"]], "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel": [[3, 2, 1, "", "_is_full_backward_hook"], [3, 3, 1, "", "clamp_params"], [3, 3, 1, "", "get_efficiency"], [3, 3, 1, "", "get_hits"], [3, 3, 1, "", "get_resolution"], [3, 2, 1, "", "training"]], "tomopt.benchmarks.phi_detector.inference": [[3, 1, 1, "", "PhiDetScatterBatch"]], "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch": [[3, 3, 1, "", "_compute_tracks"], [3, 3, 1, "", "_extract_hits"], [3, 3, 1, "", "_get_hit_uncs"], [3, 3, 1, "", "get_muon_trajectory"], [3, 3, 1, "", "plot_scatter"]], "tomopt": [[1, 0, 0, "-", "core"], [1, 0, 0, "-", "utils"], [1, 0, 0, "-", "version"]], "tomopt.inference": [[4, 0, 0, "-", "scattering"], [4, 0, 0, "-", "volume"]], "tomopt.inference.scattering": [[4, 1, 1, "", "GenScatterBatch"], [4, 1, 1, "", "ScatterBatch"]], "tomopt.inference.scattering.GenScatterBatch": [[4, 3, 1, "", "_compute_tracks"]], "tomopt.inference.scattering.ScatterBatch": [[4, 3, 1, "", "_compute_dtheta_dphi_scatter"], [4, 3, 1, "", "_compute_out_var_unc"], [4, 3, 1, "", "_compute_phi"], [4, 3, 1, "", "_compute_scatters"], [4, 3, 1, "", "_compute_theta"], [4, 3, 1, "", "_compute_theta_msc"], [4, 3, 1, "", "_compute_tracks"], [4, 3, 1, "", "_compute_xyz_in"], [4, 3, 1, "", "_compute_xyz_out"], [4, 2, 1, "", "_cross_track"], [4, 2, 1, "", "_dphi"], [4, 2, 1, "", "_dphi_unc"], [4, 2, 1, "", "_dtheta"], [4, 2, 1, "", "_dtheta_unc"], [4, 2, 1, "", "_dtheta_xy"], [4, 2, 1, "", "_dtheta_xy_unc"], [4, 2, 1, "", "_dxy"], [4, 2, 1, "", "_dxy_unc"], [4, 3, 1, "", "_extract_hits"], [4, 3, 1, "", "_filter_scatters"], [4, 2, 1, "", "_gen_hits"], [4, 2, 1, "", "_hit_effs"], [4, 2, 1, "", "_hit_uncs"], [4, 2, 1, "", "_phi_in"], [4, 2, 1, "", "_phi_in_unc"], [4, 2, 1, "", "_phi_out"], [4, 2, 1, "", "_phi_out_unc"], [4, 2, 1, "", "_poca_xyz"], [4, 2, 1, "", "_poca_xyz_unc"], [4, 2, 1, "", "_reco_hits"], [4, 3, 1, "", "_set_dtheta_dphi_scatter"], [4, 2, 1, "", "_theta_in"], [4, 2, 1, "", "_theta_in_unc"], [4, 2, 1, "", "_theta_msc"], [4, 2, 1, "", "_theta_msc_unc"], [4, 2, 1, "", "_theta_out"], [4, 2, 1, "", "_theta_out_unc"], [4, 2, 1, "", "_theta_xy_in"], [4, 2, 1, "", "_theta_xy_in_unc"], [4, 2, 1, "", "_theta_xy_out"], [4, 2, 1, "", "_theta_xy_out_unc"], [4, 2, 1, "", "_total_scatter"], [4, 2, 1, "", "_total_scatter_unc"], [4, 2, 1, "", "_track_coefs"], [4, 2, 1, "", "_track_in"], [4, 2, 1, "", "_track_out"], [4, 2, 1, "", "_track_start_in"], [4, 2, 1, "", "_track_start_out"], [4, 2, 1, "", "_xyz_in"], [4, 2, 1, "", "_xyz_in_unc"], [4, 2, 1, "", "_xyz_out"], [4, 2, 1, "", "_xyz_out_unc"], [4, 4, 1, "", "above_gen_hits"], [4, 4, 1, "", "above_hit_effs"], [4, 4, 1, "", "above_hit_uncs"], [4, 4, 1, "", "above_hits"], [4, 4, 1, "", "below_gen_hits"], [4, 4, 1, "", "below_hit_effs"], [4, 4, 1, "", "below_hit_uncs"], [4, 4, 1, "", "below_hits"], [4, 4, 1, "", "dphi"], [4, 4, 1, "", "dphi_unc"], [4, 4, 1, "", "dtheta"], [4, 4, 1, "", "dtheta_unc"], [4, 4, 1, "", "dtheta_xy"], [4, 4, 1, "", "dtheta_xy_unc"], [4, 4, 1, "", "dxy"], [4, 4, 1, "", "dxy_unc"], [4, 4, 1, "", "gen_hits"], [4, 3, 1, "", "get_muon_trajectory"], [4, 3, 1, "", "get_scatter_mask"], [4, 4, 1, "", "hit_effs"], [4, 4, 1, "", "hit_uncs"], [4, 4, 1, "", "hits"], [4, 4, 1, "", "n_hits_above"], [4, 4, 1, "", "n_hits_below"], [4, 4, 1, "", "phi_in"], [4, 4, 1, "", "phi_in_unc"], [4, 4, 1, "", "phi_out"], [4, 4, 1, "", "phi_out_unc"], [4, 3, 1, "", "plot_scatter"], [4, 4, 1, "", "poca_xyz"], [4, 4, 1, "", "poca_xyz_unc"], [4, 4, 1, "", "reco_hits"], [4, 4, 1, "", "theta_in"], [4, 4, 1, "", "theta_in_unc"], [4, 4, 1, "", "theta_msc"], [4, 4, 1, "", "theta_msc_unc"], [4, 4, 1, "", "theta_out"], [4, 4, 1, "", "theta_out_unc"], [4, 4, 1, "", "theta_xy_in"], [4, 4, 1, "", "theta_xy_in_unc"], [4, 4, 1, "", "theta_xy_out"], [4, 4, 1, "", "theta_xy_out_unc"], [4, 4, 1, "", "total_scatter"], [4, 4, 1, "", "total_scatter_unc"], [4, 4, 1, "", "track_in"], [4, 4, 1, "", "track_out"], [4, 4, 1, "", "track_start_in"], [4, 4, 1, "", "track_start_out"], [4, 4, 1, "", "xyz_in"], [4, 4, 1, "", "xyz_in_unc"], [4, 4, 1, "", "xyz_out"], [4, 4, 1, "", "xyz_out_unc"]], "tomopt.inference.volume": [[4, 1, 1, "", "AbsIntClassifierFromX0"], [4, 1, 1, "", "AbsVolumeInferrer"], [4, 1, 1, "", "AbsX0Inferrer"], [4, 1, 1, "", "DenseBlockClassifierFromX0s"], [4, 1, 1, "", "PanelX0Inferrer"]], "tomopt.inference.volume.AbsIntClassifierFromX0": [[4, 2, 1, "", "_abc_impl"], [4, 3, 1, "", "_reset_vars"], [4, 3, 1, "", "add_scatters"], [4, 3, 1, "", "compute_efficiency"], [4, 3, 1, "", "get_prediction"], [4, 3, 1, "", "x02probs"]], "tomopt.inference.volume.AbsVolumeInferrer": [[4, 2, 1, "", "_abc_impl"], [4, 3, 1, "", "_reset_vars"], [4, 3, 1, "", "add_scatters"], [4, 3, 1, "", "compute_efficiency"], [4, 3, 1, "", "get_prediction"]], "tomopt.inference.volume.AbsX0Inferrer": [[4, 2, 1, "", "_abc_impl"], [4, 3, 1, "", "_combine_scatters"], [4, 3, 1, "", "_get_voxel_zxy_x0_pred_uncs"], [4, 3, 1, "", "_get_voxel_zxy_x0_preds"], [4, 2, 1, "", "_muon_efficiency"], [4, 2, 1, "", "_muon_probs_per_voxel_zxy"], [4, 2, 1, "", "_muon_scatter_var_uncs"], [4, 2, 1, "", "_muon_scatter_vars"], [4, 2, 1, "", "_n_mu"], [4, 3, 1, "", "_reset_vars"], [4, 3, 1, "", "_set_var_dimensions"], [4, 2, 1, "", "_var_order_szs"], [4, 2, 1, "", "_vox_zxy_x0_pred_uncs"], [4, 2, 1, "", "_vox_zxy_x0_preds"], [4, 3, 1, "", "_weighted_mean"], [4, 3, 1, "", "_weighted_rms"], [4, 3, 1, "", "get_prediction"], [4, 4, 1, "", "inv_weights"], [4, 4, 1, "", "muon_efficiency"], [4, 4, 1, "", "muon_mom"], [4, 4, 1, "", "muon_mom_unc"], [4, 4, 1, "", "muon_poca_xyz"], [4, 4, 1, "", "muon_poca_xyz_unc"], [4, 4, 1, "", "muon_probs_per_voxel_zxy"], [4, 4, 1, "", "muon_theta_in"], [4, 4, 1, "", "muon_theta_in_unc"], [4, 4, 1, "", "muon_theta_out"], [4, 4, 1, "", "muon_theta_out_unc"], [4, 4, 1, "", "muon_total_scatter"], [4, 4, 1, "", "muon_total_scatter_unc"], [4, 4, 1, "", "n_mu"], [4, 4, 1, "", "vox_zxy_x0_pred_uncs"], [4, 4, 1, "", "vox_zxy_x0_preds"], [4, 3, 1, "", "x0_from_scatters"]], "tomopt.inference.volume.DenseBlockClassifierFromX0s": [[4, 2, 1, "", "_abc_impl"], [4, 3, 1, "", "_reset_vars"], [4, 3, 1, "", "add_scatters"], [4, 3, 1, "", "compute_efficiency"], [4, 3, 1, "", "get_prediction"], [4, 2, 1, "", "scatter_batches"]], "tomopt.inference.volume.PanelX0Inferrer": [[4, 2, 1, "", "_abc_impl"], [4, 3, 1, "", "compute_efficiency"], [4, 2, 1, "", "scatter_batches"]], "tomopt.muon": [[5, 0, 0, "-", "generation"], [5, 0, 0, "-", "muon_batch"]], "tomopt.muon.generation": [[5, 1, 1, "", "AbsMuonGenerator"], [5, 1, 1, "", "MuonGenerator2015"], [5, 1, 1, "", "MuonGenerator2016"]], "tomopt.muon.generation.AbsMuonGenerator": [[5, 2, 1, "", "_muon_mass2"], [5, 2, 1, "", "_n_bins_energy"], [5, 2, 1, "", "_n_bins_theta"], [5, 3, 1, "", "flux"], [5, 3, 1, "", "from_volume"], [5, 3, 1, "", "generate_set"]], "tomopt.muon.generation.MuonGenerator2015": [[5, 2, 1, "", "P1"], [5, 2, 1, "", "P2"], [5, 2, 1, "", "P3"], [5, 2, 1, "", "P4"], [5, 2, 1, "", "P5"], [5, 3, 1, "", "flux"]], "tomopt.muon.generation.MuonGenerator2016": [[5, 2, 1, "", "E_0"], [5, 2, 1, "", "E_c"], [5, 2, 1, "", "I_0"], [5, 2, 1, "", "N"], [5, 2, 1, "", "Rod"], [5, 2, 1, "", "epinv"], [5, 3, 1, "", "flux"], [5, 2, 1, "", "n"]], "tomopt.muon.muon_batch": [[5, 1, 1, "", "MuonBatch"]], "tomopt.muon.muon_batch.MuonBatch": [[5, 2, 1, "", "_keep_mask"], [5, 4, 1, "", "_mom"], [5, 4, 1, "", "_phi"], [5, 4, 1, "", "_theta"], [5, 4, 1, "", "_x"], [5, 4, 1, "", "_xy"], [5, 4, 1, "", "_xyz"], [5, 4, 1, "", "_y"], [5, 4, 1, "", "_z"], [5, 3, 1, "", "append_hits"], [5, 3, 1, "", "copy"], [5, 3, 1, "", "dtheta"], [5, 3, 1, "", "dtheta_x"], [5, 3, 1, "", "dtheta_y"], [5, 3, 1, "", "filter_muons"], [5, 3, 1, "", "get_hits"], [5, 3, 1, "", "get_xy_mask"], [5, 4, 1, "", "mom"], [5, 4, 1, "", "muons"], [5, 2, 1, "", "p_dim"], [5, 2, 1, "", "ph_dim"], [5, 4, 1, "", "phi"], [5, 3, 1, "", "phi_from_theta_xy"], [5, 3, 1, "", "propagate_d"], [5, 3, 1, "", "propagate_dz"], [5, 4, 1, "", "reco_mom"], [5, 3, 1, "", "remove_upwards_muons"], [5, 3, 1, "", "scatter_dtheta_dphi"], [5, 3, 1, "", "scatter_dxy"], [5, 3, 1, "", "snapshot_xyz"], [5, 2, 1, "", "th_dim"], [5, 4, 1, "", "theta"], [5, 3, 1, "", "theta_from_theta_xy"], [5, 4, 1, "", "theta_x"], [5, 3, 1, "", "theta_x_from_theta_phi"], [5, 4, 1, "", "theta_xy"], [5, 4, 1, "", "theta_y"], [5, 3, 1, "", "theta_y_from_theta_phi"], [5, 4, 1, "", "upwards_muons"], [5, 4, 1, "", "x"], [5, 2, 1, "", "x_dim"], [5, 4, 1, "", "xy"], [5, 4, 1, "", "xyz"], [5, 4, 1, "", "xyz_hist"], [5, 4, 1, "", "y"], [5, 2, 1, "", "y_dim"], [5, 4, 1, "", "z"], [5, 2, 1, "", "z_dim"]], "tomopt.optimisation.callbacks": [[7, 0, 0, "-", "callback"], [7, 0, 0, "-", "cyclic_callbacks"], [7, 0, 0, "-", "data_callbacks"], [7, 0, 0, "-", "detector_callbacks"], [7, 0, 0, "-", "diagnostic_callbacks"], [7, 0, 0, "-", "eval_metric"], [7, 0, 0, "-", "grad_callbacks"], [7, 0, 0, "-", "heatmap_gif"], [7, 0, 0, "-", "monitors"], [7, 0, 0, "-", "pred_callbacks"], [7, 0, 0, "-", "warmup_callbacks"]], "tomopt.optimisation.callbacks.callback": [[7, 1, 1, "", "Callback"]], "tomopt.optimisation.callbacks.callback.Callback": [[7, 3, 1, "", "on_backwards_begin"], [7, 3, 1, "", "on_backwards_end"], [7, 3, 1, "", "on_epoch_begin"], [7, 3, 1, "", "on_epoch_end"], [7, 3, 1, "", "on_mu_batch_begin"], [7, 3, 1, "", "on_mu_batch_end"], [7, 3, 1, "", "on_pred_begin"], [7, 3, 1, "", "on_pred_end"], [7, 3, 1, "", "on_scatter_end"], [7, 3, 1, "", "on_step_end"], [7, 3, 1, "", "on_train_begin"], [7, 3, 1, "", "on_train_end"], [7, 3, 1, "", "on_volume_batch_begin"], [7, 3, 1, "", "on_volume_batch_end"], [7, 3, 1, "", "on_volume_begin"], [7, 3, 1, "", "on_volume_end"], [7, 3, 1, "", "on_x0_pred_begin"], [7, 3, 1, "", "on_x0_pred_end"], [7, 3, 1, "", "set_wrapper"], [7, 2, 1, "", "wrapper"]], "tomopt.optimisation.callbacks.cyclic_callbacks": [[7, 1, 1, "", "CyclicCallback"]], "tomopt.optimisation.callbacks.data_callbacks": [[7, 1, 1, "", "MuonResampler"]], "tomopt.optimisation.callbacks.data_callbacks.MuonResampler": [[7, 3, 1, "", "check_mu_batch"], [7, 3, 1, "", "on_mu_batch_begin"], [7, 3, 1, "", "resample"]], "tomopt.optimisation.callbacks.detector_callbacks": [[7, 1, 1, "", "PanelUpdateLimiter"], [7, 1, 1, "", "SigmoidPanelSmoothnessSchedule"]], "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter": [[7, 3, 1, "", "on_backwards_end"], [7, 3, 1, "", "on_step_end"]], "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule": [[7, 3, 1, "", "_activate"], [7, 3, 1, "", "_set_smooth"], [7, 3, 1, "", "on_epoch_begin"], [7, 3, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.diagnostic_callbacks": [[7, 1, 1, "", "HitRecord"], [7, 1, 1, "", "ScatterRecord"]], "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord": [[7, 3, 1, "", "_to_df"], [7, 3, 1, "", "on_scatter_end"]], "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord": [[7, 3, 1, "", "_reset"], [7, 3, 1, "", "_to_df"], [7, 3, 1, "", "get_record"], [7, 3, 1, "", "on_pred_begin"], [7, 3, 1, "", "on_scatter_end"], [7, 3, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.eval_metric": [[7, 1, 1, "", "EvalMetric"]], "tomopt.optimisation.callbacks.eval_metric.EvalMetric": [[7, 3, 1, "", "get_metric"], [7, 3, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.grad_callbacks": [[7, 1, 1, "", "NoMoreNaNs"]], "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs": [[7, 3, 1, "", "on_backwards_end"]], "tomopt.optimisation.callbacks.heatmap_gif": [[7, 1, 1, "", "HeatMapGif"]], "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif": [[7, 3, 1, "", "_create_gif"], [7, 3, 1, "", "_plot_current"], [7, 3, 1, "", "_reset"], [7, 3, 1, "", "on_epoch_begin"], [7, 3, 1, "", "on_train_begin"], [7, 3, 1, "", "on_train_end"]], "tomopt.optimisation.callbacks.monitors": [[7, 1, 1, "", "MetricLogger"], [7, 1, 1, "", "PanelMetricLogger"]], "tomopt.optimisation.callbacks.monitors.MetricLogger": [[7, 3, 1, "", "_build_grid_spec"], [7, 3, 1, "", "_create_gif"], [7, 3, 1, "", "_prep_plots"], [7, 3, 1, "", "_reset"], [7, 3, 1, "", "_snapshot_monitor"], [7, 2, 1, "", "cat_palette"], [7, 3, 1, "", "get_loss_history"], [7, 3, 1, "", "get_results"], [7, 2, 1, "", "h_mid"], [7, 2, 1, "", "lbl_col"], [7, 2, 1, "", "lbl_sz"], [7, 2, 1, "", "leg_sz"], [7, 3, 1, "", "on_backwards_end"], [7, 3, 1, "", "on_epoch_begin"], [7, 3, 1, "", "on_epoch_end"], [7, 3, 1, "", "on_train_begin"], [7, 3, 1, "", "on_train_end"], [7, 3, 1, "", "on_volume_batch_end"], [7, 3, 1, "", "on_volume_end"], [7, 3, 1, "", "print_losses"], [7, 2, 1, "", "style"], [7, 2, 1, "", "tk_col"], [7, 2, 1, "", "tk_sz"], [7, 3, 1, "", "update_plot"], [7, 2, 1, "", "w_mid"]], "tomopt.optimisation.callbacks.monitors.PanelMetricLogger": [[7, 3, 1, "", "_build_grid_spec"], [7, 3, 1, "", "_prep_plots"], [7, 3, 1, "", "_reset"], [7, 3, 1, "", "_set_axes_labels"], [7, 3, 1, "", "update_plot"]], "tomopt.optimisation.callbacks.pred_callbacks": [[7, 1, 1, "", "PredHandler"], [7, 1, 1, "", "Save2HDF5PredHandler"], [7, 1, 1, "", "VolumeTargetPredHandler"]], "tomopt.optimisation.callbacks.pred_callbacks.PredHandler": [[7, 3, 1, "", "get_preds"], [7, 3, 1, "", "on_pred_begin"], [7, 3, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler": [[7, 3, 1, "", "_open_file"], [7, 3, 1, "", "_write_data"], [7, 3, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler": [[7, 3, 1, "", "on_x0_pred_end"]], "tomopt.optimisation.callbacks.warmup_callbacks": [[7, 1, 1, "", "CostCoefWarmup"], [7, 1, 1, "", "PanelOptConfig"], [7, 1, 1, "", "PostWarmupCallback"], [7, 1, 1, "", "WarmupCallback"]], "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup": [[7, 3, 1, "", "_reset"], [7, 3, 1, "", "on_epoch_end"], [7, 3, 1, "", "on_volume_end"]], "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig": [[7, 3, 1, "", "_reset"], [7, 3, 1, "", "on_backwards_end"], [7, 3, 1, "", "on_epoch_end"]], "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback": [[7, 3, 1, "", "_activate"], [7, 3, 1, "", "check_warmups"], [7, 3, 1, "", "on_epoch_begin"], [7, 3, 1, "", "on_train_begin"]], "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback": [[7, 3, 1, "", "_reset"], [7, 3, 1, "", "check_warmups"], [7, 3, 1, "", "on_epoch_begin"], [7, 3, 1, "", "on_epoch_end"], [7, 3, 1, "", "on_train_begin"]], "tomopt.optimisation.wrapper": [[8, 0, 0, "-", "volume_wrapper"]], "tomopt.optimisation.wrapper.volume_wrapper": [[8, 1, 1, "", "AbsVolumeWrapper"], [8, 1, 1, "", "FitParams"], [8, 1, 1, "", "HeatMapVolumeWrapper"], [8, 1, 1, "", "PanelVolumeWrapper"]], "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper": [[8, 2, 1, "", "_abc_impl"], [8, 3, 1, "", "_build_opt"], [8, 3, 1, "", "_fit_epoch"], [8, 3, 1, "", "_scan_volume"], [8, 3, 1, "", "_scan_volumes"], [8, 3, 1, "", "_sort_cbs"], [8, 3, 1, "", "fit"], [8, 3, 1, "", "get_detectors"], [8, 3, 1, "", "get_opt_lr"], [8, 3, 1, "", "get_opt_mom"], [8, 3, 1, "", "get_param_count"], [8, 3, 1, "", "load"], [8, 2, 1, "", "opts"], [8, 3, 1, "", "predict"], [8, 3, 1, "", "save"], [8, 3, 1, "", "set_opt_lr"], [8, 3, 1, "", "set_opt_mom"]], "tomopt.optimisation.wrapper.volume_wrapper.FitParams": [[8, 2, 1, "", "cb_savepath"], [8, 2, 1, "", "cbs"], [8, 2, 1, "", "cyclic_cbs"], [8, 2, 1, "", "device"], [8, 2, 1, "", "epoch"], [8, 2, 1, "", "epoch_bar"], [8, 2, 1, "", "inv_weight"], [8, 2, 1, "", "loss_val"], [8, 2, 1, "", "mean_loss"], [8, 2, 1, "", "metric_cbs"], [8, 2, 1, "", "metric_log"], [8, 2, 1, "", "mu"], [8, 2, 1, "", "mu_bs"], [8, 2, 1, "", "n_epochs"], [8, 2, 1, "", "n_mu_per_volume"], [8, 2, 1, "", "passive_bar"], [8, 2, 1, "", "passive_bs"], [8, 2, 1, "", "pred"], [8, 2, 1, "", "sb"], [8, 2, 1, "", "skip_opt_step"], [8, 2, 1, "", "state"], [8, 2, 1, "", "stop"], [8, 2, 1, "", "trn_passives"], [8, 2, 1, "", "tst_passives"], [8, 2, 1, "", "val_passives"], [8, 2, 1, "", "volume_id"], [8, 2, 1, "", "volume_inferrer"], [8, 2, 1, "", "warmup_cbs"]], "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper": [[8, 2, 1, "", "_abc_impl"], [8, 3, 1, "", "_build_opt"], [8, 3, 1, "", "from_save"], [8, 2, 1, "", "opts"]], "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper": [[8, 2, 1, "", "_abc_impl"], [8, 3, 1, "", "_build_opt"], [8, 3, 1, "", "from_save"], [8, 2, 1, "", "opts"]], "tomopt.plotting": [[9, 0, 0, "-", "appearance"], [9, 0, 0, "-", "diagnostics"], [9, 0, 0, "-", "predictions"]], "tomopt.plotting.diagnostics": [[9, 5, 1, "", "plot_hit_density"], [9, 5, 1, "", "plot_scatter_density"]], "tomopt.plotting.predictions": [[9, 5, 1, "", "plot_pred_true_x0"]], "tomopt.utils": [[1, 5, 1, "", "class_to_x0preds"], [1, 5, 1, "", "jacobian"], [1, 5, 1, "", "x0_from_mixture"], [1, 5, 1, "", "x0targs_to_classtargs"]], "tomopt.volume": [[10, 0, 0, "-", "heatmap"], [10, 0, 0, "-", "layer"], [10, 0, 0, "-", "panel"], [10, 0, 0, "-", "scatter_model"], [10, 0, 0, "-", "volume"]], "tomopt.volume.heatmap": [[10, 1, 1, "", "DetectorHeatMap"]], "tomopt.volume.heatmap.DetectorHeatMap": [[10, 2, 1, "", "_is_full_backward_hook"], [10, 3, 1, "", "assign_budget"], [10, 3, 1, "", "clamp_params"], [10, 3, 1, "", "get_cost"], [10, 3, 1, "", "get_efficiency"], [10, 3, 1, "", "get_hits"], [10, 3, 1, "", "get_resolution"], [10, 3, 1, "", "get_xy_mask"], [10, 3, 1, "", "plot_map"], [10, 2, 1, "", "training"], [10, 4, 1, "", "x"], [10, 4, 1, "", "y"]], "tomopt.volume.layer": [[10, 1, 1, "", "AbsDetectorLayer"], [10, 1, 1, "", "AbsLayer"], [10, 1, 1, "", "PanelDetectorLayer"], [10, 1, 1, "", "PassiveLayer"]], "tomopt.volume.layer.AbsDetectorLayer": [[10, 2, 1, "", "_abc_impl"], [10, 2, 1, "", "_is_full_backward_hook"], [10, 2, 1, "", "_n_costs"], [10, 3, 1, "", "assign_budget"], [10, 3, 1, "", "conform_detector"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_cost"], [10, 2, 1, "", "training"]], "tomopt.volume.layer.AbsLayer": [[10, 2, 1, "", "_abc_impl"], [10, 2, 1, "", "_is_full_backward_hook"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_lw_z_size"], [10, 2, 1, "", "training"]], "tomopt.volume.layer.PanelDetectorLayer": [[10, 2, 1, "", "_abc_impl"], [10, 2, 1, "", "_backward_hooks"], [10, 2, 1, "", "_buffers"], [10, 2, 1, "", "_forward_hooks"], [10, 2, 1, "", "_forward_pre_hooks"], [10, 2, 1, "", "_is_full_backward_hook"], [10, 2, 1, "", "_load_state_dict_pre_hooks"], [10, 2, 1, "", "_modules"], [10, 2, 1, "", "_non_persistent_buffers_set"], [10, 2, 1, "", "_parameters"], [10, 2, 1, "", "_state_dict_hooks"], [10, 3, 1, "", "assign_budget"], [10, 3, 1, "", "conform_detector"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_cost"], [10, 3, 1, "", "get_device"], [10, 3, 1, "", "get_panel_zorder"], [10, 2, 1, "", "rad_length"], [10, 2, 1, "", "training"], [10, 3, 1, "", "yield_zordered_panels"]], "tomopt.volume.layer.PassiveLayer": [[10, 2, 1, "", "_abc_impl"], [10, 2, 1, "", "_backward_hooks"], [10, 2, 1, "", "_buffers"], [10, 3, 1, "", "_compute_scattering"], [10, 2, 1, "", "_forward_hooks"], [10, 2, 1, "", "_forward_pre_hooks"], [10, 2, 1, "", "_is_full_backward_hook"], [10, 2, 1, "", "_load_state_dict_pre_hooks"], [10, 2, 1, "", "_modules"], [10, 2, 1, "", "_non_persistent_buffers_set"], [10, 2, 1, "", "_parameters"], [10, 3, 1, "", "_pdg_scatter"], [10, 3, 1, "", "_pgeant_scatter"], [10, 2, 1, "", "_state_dict_hooks"], [10, 3, 1, "", "abs2idx"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "load_rad_length"], [10, 3, 1, "", "mu_abs2idx"], [10, 2, 1, "", "rad_length"], [10, 3, 1, "", "scatter_and_propagate"], [10, 2, 1, "", "training"]], "tomopt.volume.panel": [[10, 1, 1, "", "DetectorPanel"], [10, 1, 1, "", "SigmoidDetectorPanel"]], "tomopt.volume.panel.DetectorPanel": [[10, 2, 1, "", "_is_full_backward_hook"], [10, 3, 1, "", "assign_budget"], [10, 3, 1, "", "clamp_params"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_cost"], [10, 3, 1, "", "get_efficiency"], [10, 3, 1, "", "get_gauss"], [10, 3, 1, "", "get_hits"], [10, 3, 1, "", "get_resolution"], [10, 3, 1, "", "get_scaled_xy_span"], [10, 3, 1, "", "get_xy_mask"], [10, 2, 1, "", "training"], [10, 4, 1, "", "x"], [10, 4, 1, "", "y"]], "tomopt.volume.panel.SigmoidDetectorPanel": [[10, 2, 1, "", "_backward_hooks"], [10, 2, 1, "", "_buffers"], [10, 2, 1, "", "_forward_hooks"], [10, 2, 1, "", "_forward_pre_hooks"], [10, 2, 1, "", "_is_full_backward_hook"], [10, 2, 1, "", "_load_state_dict_pre_hooks"], [10, 2, 1, "", "_modules"], [10, 2, 1, "", "_non_persistent_buffers_set"], [10, 2, 1, "", "_parameters"], [10, 2, 1, "", "_state_dict_hooks"], [10, 3, 1, "", "get_efficiency"], [10, 3, 1, "", "get_resolution"], [10, 3, 1, "", "sig_model"], [10, 4, 1, "", "smooth"], [10, 2, 1, "", "training"]], "tomopt.volume.volume": [[10, 1, 1, "", "Volume"]], "tomopt.volume.volume.Volume": [[10, 3, 1, "", "_check_passives"], [10, 3, 1, "", "_configure_budget"], [10, 3, 1, "", "_get_device"], [10, 2, 1, "", "_is_full_backward_hook"], [10, 3, 1, "", "assign_budget"], [10, 3, 1, "", "build_edges"], [10, 4, 1, "", "centres"], [10, 4, 1, "", "device"], [10, 3, 1, "", "draw"], [10, 4, 1, "", "edges"], [10, 3, 1, "", "forward"], [10, 3, 1, "", "get_cost"], [10, 3, 1, "", "get_detectors"], [10, 3, 1, "", "get_passive_z_range"], [10, 3, 1, "", "get_passives"], [10, 3, 1, "", "get_rad_cube"], [10, 4, 1, "", "h"], [10, 3, 1, "", "load_rad_length"], [10, 3, 1, "", "lookup_passive_xyz_coords"], [10, 4, 1, "", "lw"], [10, 4, 1, "", "passive_size"], [10, 4, 1, "", "target"], [10, 2, 1, "", "training"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"tomopt": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "differenti": 0, "muon": [0, 5], "tomographi": 0, "optimis": [0, 6, 7, 8], "packag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10], "overview": 0, "document": 0, "index": 0, "subpackag": [1, 2, 6], "submodul": [1, 3, 4, 5, 7, 8, 9, 10], "core": 1, "modul": [1, 3, 4, 5, 7, 8, 9, 10], "util": 1, "version": 1, "benchmark": [2, 3], "phi_detector": 3, "detector": 3, "infer": [3, 4], "scatter": 4, "volum": [4, 10], "gener": 5, "muon_batch": 5, "callback": 7, "cyclic_callback": 7, "data_callback": 7, "diagnostic_callback": 7, "eval_metr": 7, "grad_callback": 7, "heatmap_gif": 7, "loss_callback": 7, "monitor": 7, "opt_callback": 7, "pred_callback": 7, "warmup_callback": 7, "detector_callback": 7, "wrapper": 8, "volume_wrapp": 8, "plot": 9, "appear": 9, "diagnost": 9, "predict": 9, "heatmap": 10, "layer": 10, "panel": 10, "scatter_model": 10}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"TomOpt: Differential Muon Tomography Optimisation": [[0, "tomopt-differential-muon-tomography-optimisation"]], "Package overview": [[0, "package-overview"]], "Package documentation": [[0, "package-documentation"]], "Index": [[0, "index"]], "tomopt.benchmarks package": [[2, "tomopt-benchmarks-package"]], "Subpackages": [[2, "subpackages"], [6, "subpackages"], [1, "subpackages"]], "tomopt.optimisation package": [[6, "tomopt-optimisation-package"]], "tomopt package": [[1, "tomopt-package"]], "Submodules": [[1, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"], [10, "submodules"]], "tomopt.core module": [[1, "module-tomopt.core"]], "tomopt.utils module": [[1, "module-tomopt.utils"]], "tomopt.version module": [[1, "module-tomopt.version"]], "tomopt.benchmarks.phi_detector package": [[3, "tomopt-benchmarks-phi-detector-package"]], "tomopt.benchmarks.phi_detector.detector module": [[3, "module-tomopt.benchmarks.phi_detector.detector"]], "tomopt.benchmarks.phi_detector.inference module": [[3, "module-tomopt.benchmarks.phi_detector.inference"]], "tomopt.inference package": [[4, "tomopt-inference-package"]], "tomopt.inference.scattering module": [[4, "module-tomopt.inference.scattering"]], "tomopt.inference.volume module": [[4, "module-tomopt.inference.volume"]], "tomopt.muon package": [[5, "tomopt-muon-package"]], "tomopt.muon.generation module": [[5, "module-tomopt.muon.generation"]], "tomopt.muon.muon_batch module": [[5, "module-tomopt.muon.muon_batch"]], "tomopt.optimisation.callbacks package": [[7, "tomopt-optimisation-callbacks-package"]], "tomopt.optimisation.callbacks.callback module": [[7, "module-tomopt.optimisation.callbacks.callback"]], "tomopt.optimisation.callbacks.cyclic_callbacks module": [[7, "module-tomopt.optimisation.callbacks.cyclic_callbacks"]], "tomopt.optimisation.callbacks.data_callbacks module": [[7, "module-tomopt.optimisation.callbacks.data_callbacks"]], "tomopt.optimisation.callbacks.diagnostic_callbacks module": [[7, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"]], "tomopt.optimisation.callbacks.eval_metric module": [[7, "module-tomopt.optimisation.callbacks.eval_metric"]], "tomopt.optimisation.callbacks.grad_callbacks module": [[7, "module-tomopt.optimisation.callbacks.grad_callbacks"]], "tomopt.optimisation.callbacks.heatmap_gif module": [[7, "module-tomopt.optimisation.callbacks.heatmap_gif"]], "tomopt.optimisation.callbacks.loss_callbacks module": [[7, "tomopt-optimisation-callbacks-loss-callbacks-module"]], "tomopt.optimisation.callbacks.monitors module": [[7, "module-tomopt.optimisation.callbacks.monitors"]], "tomopt.optimisation.callbacks.opt_callbacks module": [[7, "tomopt-optimisation-callbacks-opt-callbacks-module"]], "tomopt.optimisation.callbacks.pred_callbacks module": [[7, "module-tomopt.optimisation.callbacks.pred_callbacks"]], "tomopt.optimisation.callbacks.warmup_callbacks module": [[7, "tomopt-optimisation-callbacks-warmup-callbacks-module"]], "tomopt.optimisation.callbacks.detector_callbacks module": [[7, "tomopt-optimisation-callbacks-detector-callbacks-module"]], "tomopt.optimisation.wrapper package": [[8, "tomopt-optimisation-wrapper-package"]], "tomopt.optimisation.wrapper.volume_wrapper module": [[8, "module-tomopt.optimisation.wrapper.volume_wrapper"]], "tomopt.plotting package": [[9, "tomopt-plotting-package"]], "tomopt.plotting.appearance module": [[9, "module-tomopt.plotting.appearance"]], "tomopt.plotting.diagnostics module": [[9, "module-tomopt.plotting.diagnostics"]], "tomopt.plotting.predictions module": [[9, "module-tomopt.plotting.predictions"]], "tomopt.volume package": [[10, "tomopt-volume-package"]], "tomopt.volume.heatmap module": [[10, "module-tomopt.volume.heatmap"]], "tomopt.volume.layer module": [[10, "module-tomopt.volume.layer"]], "tomopt.volume.panel module": [[10, "module-tomopt.volume.panel"]], "tomopt.volume.scatter_model module": [[10, "module-tomopt.volume.scatter_model"]], "tomopt.volume.volume module": [[10, "module-tomopt.volume.volume"]]}, "indexentries": {"class_to_x0preds() (in module tomopt.utils)": [[1, "tomopt.utils.class_to_x0preds"]], "jacobian() (in module tomopt.utils)": [[1, "tomopt.utils.jacobian"]], "module": [[1, "module-tomopt.core"], [1, "module-tomopt.utils"], [1, "module-tomopt.version"], [3, "module-tomopt.benchmarks.phi_detector.detector"], [3, "module-tomopt.benchmarks.phi_detector.inference"], [4, "module-tomopt.inference.scattering"], [4, "module-tomopt.inference.volume"], [5, "module-tomopt.muon.generation"], [5, "module-tomopt.muon.muon_batch"], [7, "module-tomopt.optimisation.callbacks.callback"], [7, "module-tomopt.optimisation.callbacks.cyclic_callbacks"], [7, "module-tomopt.optimisation.callbacks.data_callbacks"], [7, "module-tomopt.optimisation.callbacks.detector_callbacks"], [7, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"], [7, "module-tomopt.optimisation.callbacks.eval_metric"], [7, "module-tomopt.optimisation.callbacks.grad_callbacks"], [7, "module-tomopt.optimisation.callbacks.heatmap_gif"], [7, "module-tomopt.optimisation.callbacks.monitors"], [7, "module-tomopt.optimisation.callbacks.pred_callbacks"], [7, "module-tomopt.optimisation.callbacks.warmup_callbacks"], [8, "module-tomopt.optimisation.wrapper.volume_wrapper"], [9, "module-tomopt.plotting.appearance"], [9, "module-tomopt.plotting.diagnostics"], [9, "module-tomopt.plotting.predictions"], [10, "module-tomopt.volume.heatmap"], [10, "module-tomopt.volume.layer"], [10, "module-tomopt.volume.panel"], [10, "module-tomopt.volume.scatter_model"], [10, "module-tomopt.volume.volume"]], "tomopt.core": [[1, "module-tomopt.core"]], "tomopt.utils": [[1, "module-tomopt.utils"]], "tomopt.version": [[1, "module-tomopt.version"]], "x0_from_mixture() (in module tomopt.utils)": [[1, "tomopt.utils.x0_from_mixture"]], "x0targs_to_classtargs() (in module tomopt.utils)": [[1, "tomopt.utils.x0targs_to_classtargs"]], "phidetscatterbatch (class in tomopt.benchmarks.phi_detector.inference)": [[3, "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch"]], "phidetectorpanel (class in tomopt.benchmarks.phi_detector.detector)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel"]], "_compute_tracks() (tomopt.benchmarks.phi_detector.inference.phidetscatterbatch method)": [[3, "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch._compute_tracks"]], "_extract_hits() (tomopt.benchmarks.phi_detector.inference.phidetscatterbatch method)": [[3, "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch._extract_hits"]], "_get_hit_uncs() (tomopt.benchmarks.phi_detector.inference.phidetscatterbatch static method)": [[3, "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch._get_hit_uncs"]], "_is_full_backward_hook (tomopt.benchmarks.phi_detector.detector.phidetectorpanel attribute)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel._is_full_backward_hook"]], "clamp_params() (tomopt.benchmarks.phi_detector.detector.phidetectorpanel method)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel.clamp_params"]], "get_efficiency() (tomopt.benchmarks.phi_detector.detector.phidetectorpanel method)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel.get_efficiency"]], "get_hits() (tomopt.benchmarks.phi_detector.detector.phidetectorpanel method)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel.get_hits"]], "get_muon_trajectory() (tomopt.benchmarks.phi_detector.inference.phidetscatterbatch static method)": [[3, "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch.get_muon_trajectory"]], "get_resolution() (tomopt.benchmarks.phi_detector.detector.phidetectorpanel method)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel.get_resolution"]], "plot_scatter() (tomopt.benchmarks.phi_detector.inference.phidetscatterbatch method)": [[3, "tomopt.benchmarks.phi_detector.inference.PhiDetScatterBatch.plot_scatter"]], "tomopt.benchmarks.phi_detector.detector": [[3, "module-tomopt.benchmarks.phi_detector.detector"]], "tomopt.benchmarks.phi_detector.inference": [[3, "module-tomopt.benchmarks.phi_detector.inference"]], "training (tomopt.benchmarks.phi_detector.detector.phidetectorpanel attribute)": [[3, "tomopt.benchmarks.phi_detector.detector.PhiDetectorPanel.training"]], "absintclassifierfromx0 (class in tomopt.inference.volume)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0"]], "absvolumeinferrer (class in tomopt.inference.volume)": [[4, "tomopt.inference.volume.AbsVolumeInferrer"]], "absx0inferrer (class in tomopt.inference.volume)": [[4, "tomopt.inference.volume.AbsX0Inferrer"]], "denseblockclassifierfromx0s (class in tomopt.inference.volume)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s"]], "genscatterbatch (class in tomopt.inference.scattering)": [[4, "tomopt.inference.scattering.GenScatterBatch"]], "panelx0inferrer (class in tomopt.inference.volume)": [[4, "tomopt.inference.volume.PanelX0Inferrer"]], "scatterbatch (class in tomopt.inference.scattering)": [[4, "tomopt.inference.scattering.ScatterBatch"]], "_abc_impl (tomopt.inference.volume.absintclassifierfromx0 attribute)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0._abc_impl"]], "_abc_impl (tomopt.inference.volume.absvolumeinferrer attribute)": [[4, "tomopt.inference.volume.AbsVolumeInferrer._abc_impl"]], "_abc_impl (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._abc_impl"]], "_abc_impl (tomopt.inference.volume.denseblockclassifierfromx0s attribute)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s._abc_impl"]], "_abc_impl (tomopt.inference.volume.panelx0inferrer attribute)": [[4, "tomopt.inference.volume.PanelX0Inferrer._abc_impl"]], "_combine_scatters() (tomopt.inference.volume.absx0inferrer method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._combine_scatters"]], "_compute_dtheta_dphi_scatter() (tomopt.inference.scattering.scatterbatch static method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_dtheta_dphi_scatter"]], "_compute_out_var_unc() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_out_var_unc"]], "_compute_phi() (tomopt.inference.scattering.scatterbatch static method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_phi"]], "_compute_scatters() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_scatters"]], "_compute_theta() (tomopt.inference.scattering.scatterbatch static method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_theta"]], "_compute_theta_msc() (tomopt.inference.scattering.scatterbatch static method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_theta_msc"]], "_compute_tracks() (tomopt.inference.scattering.genscatterbatch method)": [[4, "tomopt.inference.scattering.GenScatterBatch._compute_tracks"]], "_compute_tracks() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_tracks"]], "_compute_xyz_in() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_xyz_in"]], "_compute_xyz_out() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._compute_xyz_out"]], "_cross_track (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._cross_track"]], "_dphi (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dphi"]], "_dphi_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dphi_unc"]], "_dtheta (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dtheta"]], "_dtheta_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dtheta_unc"]], "_dtheta_xy (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dtheta_xy"]], "_dtheta_xy_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dtheta_xy_unc"]], "_dxy (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dxy"]], "_dxy_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._dxy_unc"]], "_extract_hits() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._extract_hits"]], "_filter_scatters() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._filter_scatters"]], "_gen_hits (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._gen_hits"]], "_get_voxel_zxy_x0_pred_uncs() (tomopt.inference.volume.absx0inferrer method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._get_voxel_zxy_x0_pred_uncs"]], "_get_voxel_zxy_x0_preds() (tomopt.inference.volume.absx0inferrer method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._get_voxel_zxy_x0_preds"]], "_hit_effs (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._hit_effs"]], "_hit_uncs (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._hit_uncs"]], "_muon_efficiency (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._muon_efficiency"]], "_muon_probs_per_voxel_zxy (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._muon_probs_per_voxel_zxy"]], "_muon_scatter_var_uncs (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._muon_scatter_var_uncs"]], "_muon_scatter_vars (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._muon_scatter_vars"]], "_n_mu (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._n_mu"]], "_phi_in (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._phi_in"]], "_phi_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._phi_in_unc"]], "_phi_out (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._phi_out"]], "_phi_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._phi_out_unc"]], "_poca_xyz (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._poca_xyz"]], "_poca_xyz_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._poca_xyz_unc"]], "_reco_hits (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._reco_hits"]], "_reset_vars() (tomopt.inference.volume.absintclassifierfromx0 method)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0._reset_vars"]], "_reset_vars() (tomopt.inference.volume.absvolumeinferrer method)": [[4, "tomopt.inference.volume.AbsVolumeInferrer._reset_vars"]], "_reset_vars() (tomopt.inference.volume.absx0inferrer method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._reset_vars"]], "_reset_vars() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s._reset_vars"]], "_set_dtheta_dphi_scatter() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch._set_dtheta_dphi_scatter"]], "_set_var_dimensions() (tomopt.inference.volume.absx0inferrer method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._set_var_dimensions"]], "_theta_in (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_in"]], "_theta_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_in_unc"]], "_theta_msc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_msc"]], "_theta_msc_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_msc_unc"]], "_theta_out (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_out"]], "_theta_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_out_unc"]], "_theta_xy_in (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_xy_in"]], "_theta_xy_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_xy_in_unc"]], "_theta_xy_out (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_xy_out"]], "_theta_xy_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._theta_xy_out_unc"]], "_total_scatter (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._total_scatter"]], "_total_scatter_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._total_scatter_unc"]], "_track_coefs (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._track_coefs"]], "_track_in (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._track_in"]], "_track_out (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._track_out"]], "_track_start_in (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._track_start_in"]], "_track_start_out (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._track_start_out"]], "_var_order_szs (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._var_order_szs"]], "_vox_zxy_x0_pred_uncs (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._vox_zxy_x0_pred_uncs"]], "_vox_zxy_x0_preds (tomopt.inference.volume.absx0inferrer attribute)": [[4, "tomopt.inference.volume.AbsX0Inferrer._vox_zxy_x0_preds"]], "_weighted_mean() (tomopt.inference.volume.absx0inferrer static method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._weighted_mean"]], "_weighted_rms() (tomopt.inference.volume.absx0inferrer static method)": [[4, "tomopt.inference.volume.AbsX0Inferrer._weighted_rms"]], "_xyz_in (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._xyz_in"]], "_xyz_in_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._xyz_in_unc"]], "_xyz_out (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._xyz_out"]], "_xyz_out_unc (tomopt.inference.scattering.scatterbatch attribute)": [[4, "tomopt.inference.scattering.ScatterBatch._xyz_out_unc"]], "above_gen_hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.above_gen_hits"]], "above_hit_effs (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.above_hit_effs"]], "above_hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.above_hit_uncs"]], "above_hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.above_hits"]], "add_scatters() (tomopt.inference.volume.absintclassifierfromx0 method)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0.add_scatters"]], "add_scatters() (tomopt.inference.volume.absvolumeinferrer method)": [[4, "tomopt.inference.volume.AbsVolumeInferrer.add_scatters"]], "add_scatters() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s.add_scatters"]], "below_gen_hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.below_gen_hits"]], "below_hit_effs (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.below_hit_effs"]], "below_hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.below_hit_uncs"]], "below_hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.below_hits"]], "compute_efficiency() (tomopt.inference.volume.absintclassifierfromx0 method)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.absvolumeinferrer method)": [[4, "tomopt.inference.volume.AbsVolumeInferrer.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s.compute_efficiency"]], "compute_efficiency() (tomopt.inference.volume.panelx0inferrer method)": [[4, "tomopt.inference.volume.PanelX0Inferrer.compute_efficiency"]], "dphi (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dphi"]], "dphi_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dphi_unc"]], "dtheta (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dtheta"]], "dtheta_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dtheta_unc"]], "dtheta_xy (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dtheta_xy"]], "dtheta_xy_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dtheta_xy_unc"]], "dxy (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dxy"]], "dxy_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.dxy_unc"]], "gen_hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.gen_hits"]], "get_muon_trajectory() (tomopt.inference.scattering.scatterbatch static method)": [[4, "tomopt.inference.scattering.ScatterBatch.get_muon_trajectory"]], "get_prediction() (tomopt.inference.volume.absintclassifierfromx0 method)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0.get_prediction"]], "get_prediction() (tomopt.inference.volume.absvolumeinferrer method)": [[4, "tomopt.inference.volume.AbsVolumeInferrer.get_prediction"]], "get_prediction() (tomopt.inference.volume.absx0inferrer method)": [[4, "tomopt.inference.volume.AbsX0Inferrer.get_prediction"]], "get_prediction() (tomopt.inference.volume.denseblockclassifierfromx0s method)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s.get_prediction"]], "get_scatter_mask() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch.get_scatter_mask"]], "hit_effs (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.hit_effs"]], "hit_uncs (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.hit_uncs"]], "hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.hits"]], "inv_weights (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.inv_weights"]], "muon_efficiency (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_efficiency"]], "muon_mom (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_mom"]], "muon_mom_unc (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_mom_unc"]], "muon_poca_xyz (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_poca_xyz"]], "muon_poca_xyz_unc (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_poca_xyz_unc"]], "muon_probs_per_voxel_zxy (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_probs_per_voxel_zxy"]], "muon_theta_in (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_in"]], "muon_theta_in_unc (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_in_unc"]], "muon_theta_out (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_out"]], "muon_theta_out_unc (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_theta_out_unc"]], "muon_total_scatter (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_total_scatter"]], "muon_total_scatter_unc (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.muon_total_scatter_unc"]], "n_hits_above (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.n_hits_above"]], "n_hits_below (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.n_hits_below"]], "n_mu (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.n_mu"]], "phi_in (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.phi_in"]], "phi_in_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.phi_in_unc"]], "phi_out (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.phi_out"]], "phi_out_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.phi_out_unc"]], "plot_scatter() (tomopt.inference.scattering.scatterbatch method)": [[4, "tomopt.inference.scattering.ScatterBatch.plot_scatter"]], "poca_xyz (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.poca_xyz"]], "poca_xyz_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.poca_xyz_unc"]], "reco_hits (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.reco_hits"]], "scatter_batches (tomopt.inference.volume.denseblockclassifierfromx0s attribute)": [[4, "tomopt.inference.volume.DenseBlockClassifierFromX0s.scatter_batches"]], "scatter_batches (tomopt.inference.volume.panelx0inferrer attribute)": [[4, "tomopt.inference.volume.PanelX0Inferrer.scatter_batches"]], "theta_in (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_in"]], "theta_in_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_in_unc"]], "theta_msc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_msc"]], "theta_msc_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_msc_unc"]], "theta_out (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_out"]], "theta_out_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_out_unc"]], "theta_xy_in (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_xy_in"]], "theta_xy_in_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_xy_in_unc"]], "theta_xy_out (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_xy_out"]], "theta_xy_out_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.theta_xy_out_unc"]], "tomopt.inference.scattering": [[4, "module-tomopt.inference.scattering"]], "tomopt.inference.volume": [[4, "module-tomopt.inference.volume"]], "total_scatter (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.total_scatter"]], "total_scatter_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.total_scatter_unc"]], "track_in (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.track_in"]], "track_out (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.track_out"]], "track_start_in (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.track_start_in"]], "track_start_out (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.track_start_out"]], "vox_zxy_x0_pred_uncs (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.vox_zxy_x0_pred_uncs"]], "vox_zxy_x0_preds (tomopt.inference.volume.absx0inferrer property)": [[4, "tomopt.inference.volume.AbsX0Inferrer.vox_zxy_x0_preds"]], "x02probs() (tomopt.inference.volume.absintclassifierfromx0 method)": [[4, "tomopt.inference.volume.AbsIntClassifierFromX0.x02probs"]], "x0_from_scatters() (tomopt.inference.volume.absx0inferrer static method)": [[4, "tomopt.inference.volume.AbsX0Inferrer.x0_from_scatters"]], "xyz_in (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.xyz_in"]], "xyz_in_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.xyz_in_unc"]], "xyz_out (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.xyz_out"]], "xyz_out_unc (tomopt.inference.scattering.scatterbatch property)": [[4, "tomopt.inference.scattering.ScatterBatch.xyz_out_unc"]], "absmuongenerator (class in tomopt.muon.generation)": [[5, "tomopt.muon.generation.AbsMuonGenerator"]], "e_0 (tomopt.muon.generation.muongenerator2016 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2016.E_0"]], "e_c (tomopt.muon.generation.muongenerator2016 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2016.E_c"]], "i_0 (tomopt.muon.generation.muongenerator2016 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2016.I_0"]], "muonbatch (class in tomopt.muon.muon_batch)": [[5, "tomopt.muon.muon_batch.MuonBatch"]], "muongenerator2015 (class in tomopt.muon.generation)": [[5, "tomopt.muon.generation.MuonGenerator2015"]], "muongenerator2016 (class in tomopt.muon.generation)": [[5, "tomopt.muon.generation.MuonGenerator2016"]], "n (tomopt.muon.generation.muongenerator2016 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2016.N"], [5, "tomopt.muon.generation.MuonGenerator2016.n"]], "p1 (tomopt.muon.generation.muongenerator2015 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2015.P1"]], "p2 (tomopt.muon.generation.muongenerator2015 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2015.P2"]], "p3 (tomopt.muon.generation.muongenerator2015 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2015.P3"]], "p4 (tomopt.muon.generation.muongenerator2015 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2015.P4"]], "p5 (tomopt.muon.generation.muongenerator2015 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2015.P5"]], "rod (tomopt.muon.generation.muongenerator2016 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2016.Rod"]], "_keep_mask (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch._keep_mask"]], "_mom (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._mom"]], "_muon_mass2 (tomopt.muon.generation.absmuongenerator attribute)": [[5, "tomopt.muon.generation.AbsMuonGenerator._muon_mass2"]], "_n_bins_energy (tomopt.muon.generation.absmuongenerator attribute)": [[5, "tomopt.muon.generation.AbsMuonGenerator._n_bins_energy"]], "_n_bins_theta (tomopt.muon.generation.absmuongenerator attribute)": [[5, "tomopt.muon.generation.AbsMuonGenerator._n_bins_theta"]], "_phi (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._phi"]], "_theta (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._theta"]], "_x (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._x"]], "_xy (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._xy"]], "_xyz (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._xyz"]], "_y (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._y"]], "_z (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch._z"]], "append_hits() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.append_hits"]], "copy() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.copy"]], "dtheta() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.dtheta"]], "dtheta_x() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.dtheta_x"]], "dtheta_y() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.dtheta_y"]], "epinv (tomopt.muon.generation.muongenerator2016 attribute)": [[5, "tomopt.muon.generation.MuonGenerator2016.epinv"]], "filter_muons() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.filter_muons"]], "flux() (tomopt.muon.generation.absmuongenerator method)": [[5, "tomopt.muon.generation.AbsMuonGenerator.flux"]], "flux() (tomopt.muon.generation.muongenerator2015 method)": [[5, "tomopt.muon.generation.MuonGenerator2015.flux"]], "flux() (tomopt.muon.generation.muongenerator2016 method)": [[5, "tomopt.muon.generation.MuonGenerator2016.flux"]], "from_volume() (tomopt.muon.generation.absmuongenerator class method)": [[5, "tomopt.muon.generation.AbsMuonGenerator.from_volume"]], "generate_set() (tomopt.muon.generation.absmuongenerator method)": [[5, "tomopt.muon.generation.AbsMuonGenerator.generate_set"]], "get_hits() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.get_hits"]], "get_xy_mask() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.get_xy_mask"]], "mom (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.mom"]], "muons (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.muons"]], "p_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch.p_dim"]], "ph_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch.ph_dim"]], "phi (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.phi"]], "phi_from_theta_xy() (tomopt.muon.muon_batch.muonbatch static method)": [[5, "tomopt.muon.muon_batch.MuonBatch.phi_from_theta_xy"]], "propagate_d() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.propagate_d"]], "propagate_dz() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.propagate_dz"]], "reco_mom (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.reco_mom"]], "remove_upwards_muons() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.remove_upwards_muons"]], "scatter_dtheta_dphi() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.scatter_dtheta_dphi"]], "scatter_dxy() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.scatter_dxy"]], "snapshot_xyz() (tomopt.muon.muon_batch.muonbatch method)": [[5, "tomopt.muon.muon_batch.MuonBatch.snapshot_xyz"]], "th_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch.th_dim"]], "theta (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta"]], "theta_from_theta_xy() (tomopt.muon.muon_batch.muonbatch static method)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta_from_theta_xy"]], "theta_x (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta_x"]], "theta_x_from_theta_phi() (tomopt.muon.muon_batch.muonbatch static method)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta_x_from_theta_phi"]], "theta_xy (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta_xy"]], "theta_y (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta_y"]], "theta_y_from_theta_phi() (tomopt.muon.muon_batch.muonbatch static method)": [[5, "tomopt.muon.muon_batch.MuonBatch.theta_y_from_theta_phi"]], "tomopt.muon.generation": [[5, "module-tomopt.muon.generation"]], "tomopt.muon.muon_batch": [[5, "module-tomopt.muon.muon_batch"]], "upwards_muons (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.upwards_muons"]], "x (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.x"]], "x_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch.x_dim"]], "xy (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.xy"]], "xyz (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.xyz"]], "xyz_hist (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.xyz_hist"]], "y (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.y"]], "y_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch.y_dim"]], "z (tomopt.muon.muon_batch.muonbatch property)": [[5, "tomopt.muon.muon_batch.MuonBatch.z"]], "z_dim (tomopt.muon.muon_batch.muonbatch attribute)": [[5, "tomopt.muon.muon_batch.MuonBatch.z_dim"]], "callback (class in tomopt.optimisation.callbacks.callback)": [[7, "tomopt.optimisation.callbacks.callback.Callback"]], "costcoefwarmup (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup"]], "cycliccallback (class in tomopt.optimisation.callbacks.cyclic_callbacks)": [[7, "tomopt.optimisation.callbacks.cyclic_callbacks.CyclicCallback"]], "evalmetric (class in tomopt.optimisation.callbacks.eval_metric)": [[7, "tomopt.optimisation.callbacks.eval_metric.EvalMetric"]], "heatmapgif (class in tomopt.optimisation.callbacks.heatmap_gif)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif"]], "hitrecord (class in tomopt.optimisation.callbacks.diagnostic_callbacks)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord"]], "metriclogger (class in tomopt.optimisation.callbacks.monitors)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger"]], "muonresampler (class in tomopt.optimisation.callbacks.data_callbacks)": [[7, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler"]], "nomorenans (class in tomopt.optimisation.callbacks.grad_callbacks)": [[7, "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs"]], "panelmetriclogger (class in tomopt.optimisation.callbacks.monitors)": [[7, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger"]], "paneloptconfig (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig"]], "panelupdatelimiter (class in tomopt.optimisation.callbacks.detector_callbacks)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter"]], "postwarmupcallback (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback"]], "predhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler"]], "save2hdf5predhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler"]], "scatterrecord (class in tomopt.optimisation.callbacks.diagnostic_callbacks)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord"]], "sigmoidpanelsmoothnessschedule (class in tomopt.optimisation.callbacks.detector_callbacks)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule"]], "volumetargetpredhandler (class in tomopt.optimisation.callbacks.pred_callbacks)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler"]], "warmupcallback (class in tomopt.optimisation.callbacks.warmup_callbacks)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback"]], "_activate() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule._activate"]], "_activate() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback._activate"]], "_build_grid_spec() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger._build_grid_spec"]], "_build_grid_spec() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._build_grid_spec"]], "_create_gif() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif._create_gif"]], "_create_gif() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger._create_gif"]], "_open_file() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler._open_file"]], "_plot_current() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif._plot_current"]], "_prep_plots() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger._prep_plots"]], "_prep_plots() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._prep_plots"]], "_reset() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord._reset"]], "_reset() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif._reset"]], "_reset() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger._reset"]], "_reset() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._reset"]], "_reset() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup._reset"]], "_reset() (tomopt.optimisation.callbacks.warmup_callbacks.paneloptconfig method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig._reset"]], "_reset() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback._reset"]], "_set_axes_labels() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger._set_axes_labels"]], "_set_smooth() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule._set_smooth"]], "_snapshot_monitor() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger._snapshot_monitor"]], "_to_df() (tomopt.optimisation.callbacks.diagnostic_callbacks.hitrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord._to_df"]], "_to_df() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord._to_df"]], "_write_data() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler._write_data"]], "cat_palette (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.cat_palette"]], "check_mu_batch() (tomopt.optimisation.callbacks.data_callbacks.muonresampler static method)": [[7, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.check_mu_batch"]], "check_warmups() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.check_warmups"]], "check_warmups() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.check_warmups"]], "get_loss_history() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.get_loss_history"]], "get_metric() (tomopt.optimisation.callbacks.eval_metric.evalmetric method)": [[7, "tomopt.optimisation.callbacks.eval_metric.EvalMetric.get_metric"]], "get_preds() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.get_preds"]], "get_record() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.get_record"]], "get_results() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.get_results"]], "h_mid (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.h_mid"]], "lbl_col (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.lbl_col"]], "lbl_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.lbl_sz"]], "leg_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.leg_sz"]], "on_backwards_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_backwards_begin"]], "on_backwards_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.detector_callbacks.panelupdatelimiter method)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.grad_callbacks.nomorenans method)": [[7, "tomopt.optimisation.callbacks.grad_callbacks.NoMoreNaNs.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_backwards_end"]], "on_backwards_end() (tomopt.optimisation.callbacks.warmup_callbacks.paneloptconfig method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig.on_backwards_end"]], "on_epoch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.on_epoch_begin"]], "on_epoch_begin() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_epoch_begin"]], "on_epoch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.paneloptconfig method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PanelOptConfig.on_epoch_end"]], "on_epoch_end() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_epoch_end"]], "on_mu_batch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_mu_batch_begin"]], "on_mu_batch_begin() (tomopt.optimisation.callbacks.data_callbacks.muonresampler method)": [[7, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.on_mu_batch_begin"]], "on_mu_batch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_mu_batch_end"]], "on_pred_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_pred_begin"]], "on_pred_begin() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_pred_begin"]], "on_pred_begin() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.on_pred_begin"]], "on_pred_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_pred_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_scatter_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.diagnostic_callbacks.hitrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.HitRecord.on_scatter_end"]], "on_scatter_end() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_scatter_end"]], "on_step_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_step_end"]], "on_step_end() (tomopt.optimisation.callbacks.detector_callbacks.panelupdatelimiter method)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.PanelUpdateLimiter.on_step_end"]], "on_train_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.detector_callbacks.sigmoidpanelsmoothnessschedule method)": [[7, "tomopt.optimisation.callbacks.detector_callbacks.SigmoidPanelSmoothnessSchedule.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.diagnostic_callbacks.scatterrecord method)": [[7, "tomopt.optimisation.callbacks.diagnostic_callbacks.ScatterRecord.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.eval_metric.evalmetric method)": [[7, "tomopt.optimisation.callbacks.eval_metric.EvalMetric.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.warmup_callbacks.postwarmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.PostWarmupCallback.on_train_begin"]], "on_train_begin() (tomopt.optimisation.callbacks.warmup_callbacks.warmupcallback method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.WarmupCallback.on_train_begin"]], "on_train_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_train_end"]], "on_train_end() (tomopt.optimisation.callbacks.heatmap_gif.heatmapgif method)": [[7, "tomopt.optimisation.callbacks.heatmap_gif.HeatMapGif.on_train_end"]], "on_train_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_train_end"]], "on_volume_batch_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_volume_batch_begin"]], "on_volume_batch_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_volume_batch_end"]], "on_volume_batch_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_volume_batch_end"]], "on_volume_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_volume_begin"]], "on_volume_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_volume_end"]], "on_volume_end() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.on_volume_end"]], "on_volume_end() (tomopt.optimisation.callbacks.warmup_callbacks.costcoefwarmup method)": [[7, "tomopt.optimisation.callbacks.warmup_callbacks.CostCoefWarmup.on_volume_end"]], "on_x0_pred_begin() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_x0_pred_begin"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.predhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.PredHandler.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.save2hdf5predhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.Save2HDF5PredHandler.on_x0_pred_end"]], "on_x0_pred_end() (tomopt.optimisation.callbacks.pred_callbacks.volumetargetpredhandler method)": [[7, "tomopt.optimisation.callbacks.pred_callbacks.VolumeTargetPredHandler.on_x0_pred_end"]], "print_losses() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.print_losses"]], "resample() (tomopt.optimisation.callbacks.data_callbacks.muonresampler static method)": [[7, "tomopt.optimisation.callbacks.data_callbacks.MuonResampler.resample"]], "set_wrapper() (tomopt.optimisation.callbacks.callback.callback method)": [[7, "tomopt.optimisation.callbacks.callback.Callback.set_wrapper"]], "style (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.style"]], "tk_col (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.tk_col"]], "tk_sz (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.tk_sz"]], "tomopt.optimisation.callbacks.callback": [[7, "module-tomopt.optimisation.callbacks.callback"]], "tomopt.optimisation.callbacks.cyclic_callbacks": [[7, "module-tomopt.optimisation.callbacks.cyclic_callbacks"]], "tomopt.optimisation.callbacks.data_callbacks": [[7, "module-tomopt.optimisation.callbacks.data_callbacks"]], "tomopt.optimisation.callbacks.detector_callbacks": [[7, "module-tomopt.optimisation.callbacks.detector_callbacks"]], "tomopt.optimisation.callbacks.diagnostic_callbacks": [[7, "module-tomopt.optimisation.callbacks.diagnostic_callbacks"]], "tomopt.optimisation.callbacks.eval_metric": [[7, "module-tomopt.optimisation.callbacks.eval_metric"]], "tomopt.optimisation.callbacks.grad_callbacks": [[7, "module-tomopt.optimisation.callbacks.grad_callbacks"]], "tomopt.optimisation.callbacks.heatmap_gif": [[7, "module-tomopt.optimisation.callbacks.heatmap_gif"]], "tomopt.optimisation.callbacks.monitors": [[7, "module-tomopt.optimisation.callbacks.monitors"]], "tomopt.optimisation.callbacks.pred_callbacks": [[7, "module-tomopt.optimisation.callbacks.pred_callbacks"]], "tomopt.optimisation.callbacks.warmup_callbacks": [[7, "module-tomopt.optimisation.callbacks.warmup_callbacks"]], "update_plot() (tomopt.optimisation.callbacks.monitors.metriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.update_plot"]], "update_plot() (tomopt.optimisation.callbacks.monitors.panelmetriclogger method)": [[7, "tomopt.optimisation.callbacks.monitors.PanelMetricLogger.update_plot"]], "w_mid (tomopt.optimisation.callbacks.monitors.metriclogger attribute)": [[7, "tomopt.optimisation.callbacks.monitors.MetricLogger.w_mid"]], "wrapper (tomopt.optimisation.callbacks.callback.callback attribute)": [[7, "tomopt.optimisation.callbacks.callback.Callback.wrapper"]], "absvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper"]], "fitparams (class in tomopt.optimisation.wrapper.volume_wrapper)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams"]], "heatmapvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper"]], "panelvolumewrapper (class in tomopt.optimisation.wrapper.volume_wrapper)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper"]], "_abc_impl (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper._abc_impl"]], "_abc_impl (tomopt.optimisation.wrapper.volume_wrapper.heatmapvolumewrapper attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper._abc_impl"]], "_abc_impl (tomopt.optimisation.wrapper.volume_wrapper.panelvolumewrapper attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper._abc_impl"]], "_build_opt() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper._build_opt"]], "_build_opt() (tomopt.optimisation.wrapper.volume_wrapper.heatmapvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper._build_opt"]], "_build_opt() (tomopt.optimisation.wrapper.volume_wrapper.panelvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper._build_opt"]], "_fit_epoch() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper._fit_epoch"]], "_scan_volume() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper._scan_volume"]], "_scan_volumes() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper._scan_volumes"]], "_sort_cbs() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper static method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper._sort_cbs"]], "cb_savepath (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.cb_savepath"]], "cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.cbs"]], "cyclic_cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.cyclic_cbs"]], "device (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.device"]], "epoch (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.epoch"]], "epoch_bar (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.epoch_bar"]], "fit() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.fit"]], "from_save() (tomopt.optimisation.wrapper.volume_wrapper.heatmapvolumewrapper class method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper.from_save"]], "from_save() (tomopt.optimisation.wrapper.volume_wrapper.panelvolumewrapper class method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper.from_save"]], "get_detectors() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_detectors"]], "get_opt_lr() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_opt_lr"]], "get_opt_mom() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_opt_mom"]], "get_param_count() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.get_param_count"]], "inv_weight (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.inv_weight"]], "load() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.load"]], "loss_val (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.loss_val"]], "mean_loss (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.mean_loss"]], "metric_cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.metric_cbs"]], "metric_log (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.metric_log"]], "mu (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.mu"]], "mu_bs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.mu_bs"]], "n_epochs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.n_epochs"]], "n_mu_per_volume (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.n_mu_per_volume"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.opts"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.heatmapvolumewrapper attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.HeatMapVolumeWrapper.opts"]], "opts (tomopt.optimisation.wrapper.volume_wrapper.panelvolumewrapper attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.PanelVolumeWrapper.opts"]], "passive_bar (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.passive_bar"]], "passive_bs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.passive_bs"]], "pred (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.pred"]], "predict() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.predict"]], "save() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.save"]], "sb (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.sb"]], "set_opt_lr() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.set_opt_lr"]], "set_opt_mom() (tomopt.optimisation.wrapper.volume_wrapper.absvolumewrapper method)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.AbsVolumeWrapper.set_opt_mom"]], "skip_opt_step (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.skip_opt_step"]], "state (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.state"]], "stop (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.stop"]], "tomopt.optimisation.wrapper.volume_wrapper": [[8, "module-tomopt.optimisation.wrapper.volume_wrapper"]], "trn_passives (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.trn_passives"]], "tst_passives (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.tst_passives"]], "val_passives (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.val_passives"]], "volume_id (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.volume_id"]], "volume_inferrer (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.volume_inferrer"]], "warmup_cbs (tomopt.optimisation.wrapper.volume_wrapper.fitparams attribute)": [[8, "tomopt.optimisation.wrapper.volume_wrapper.FitParams.warmup_cbs"]], "plot_hit_density() (in module tomopt.plotting.diagnostics)": [[9, "tomopt.plotting.diagnostics.plot_hit_density"]], "plot_pred_true_x0() (in module tomopt.plotting.predictions)": [[9, "tomopt.plotting.predictions.plot_pred_true_x0"]], "plot_scatter_density() (in module tomopt.plotting.diagnostics)": [[9, "tomopt.plotting.diagnostics.plot_scatter_density"]], "tomopt.plotting.appearance": [[9, "module-tomopt.plotting.appearance"]], "tomopt.plotting.diagnostics": [[9, "module-tomopt.plotting.diagnostics"]], "tomopt.plotting.predictions": [[9, "module-tomopt.plotting.predictions"]], "absdetectorlayer (class in tomopt.volume.layer)": [[10, "tomopt.volume.layer.AbsDetectorLayer"]], "abslayer (class in tomopt.volume.layer)": [[10, "tomopt.volume.layer.AbsLayer"]], "detectorheatmap (class in tomopt.volume.heatmap)": [[10, "tomopt.volume.heatmap.DetectorHeatMap"]], "detectorpanel (class in tomopt.volume.panel)": [[10, "tomopt.volume.panel.DetectorPanel"]], "paneldetectorlayer (class in tomopt.volume.layer)": [[10, "tomopt.volume.layer.PanelDetectorLayer"]], "passivelayer (class in tomopt.volume.layer)": [[10, "tomopt.volume.layer.PassiveLayer"]], "sigmoiddetectorpanel (class in tomopt.volume.panel)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel"]], "volume (class in tomopt.volume.volume)": [[10, "tomopt.volume.volume.Volume"]], "_abc_impl (tomopt.volume.layer.absdetectorlayer attribute)": [[10, "tomopt.volume.layer.AbsDetectorLayer._abc_impl"]], "_abc_impl (tomopt.volume.layer.abslayer attribute)": [[10, "tomopt.volume.layer.AbsLayer._abc_impl"]], "_abc_impl (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._abc_impl"]], "_abc_impl (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._abc_impl"]], "_backward_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._backward_hooks"]], "_backward_hooks (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._backward_hooks"]], "_backward_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._backward_hooks"]], "_buffers (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._buffers"]], "_buffers (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._buffers"]], "_buffers (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._buffers"]], "_check_passives() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume._check_passives"]], "_compute_scattering() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer._compute_scattering"]], "_configure_budget() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume._configure_budget"]], "_forward_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._forward_hooks"]], "_forward_hooks (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._forward_hooks"]], "_forward_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._forward_hooks"]], "_forward_pre_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._forward_pre_hooks"]], "_forward_pre_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._forward_pre_hooks"]], "_get_device() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume._get_device"]], "_is_full_backward_hook (tomopt.volume.heatmap.detectorheatmap attribute)": [[10, "tomopt.volume.heatmap.DetectorHeatMap._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.absdetectorlayer attribute)": [[10, "tomopt.volume.layer.AbsDetectorLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.abslayer attribute)": [[10, "tomopt.volume.layer.AbsLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.panel.detectorpanel attribute)": [[10, "tomopt.volume.panel.DetectorPanel._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._is_full_backward_hook"]], "_is_full_backward_hook (tomopt.volume.volume.volume attribute)": [[10, "tomopt.volume.volume.Volume._is_full_backward_hook"]], "_load_state_dict_pre_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._load_state_dict_pre_hooks"]], "_load_state_dict_pre_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._load_state_dict_pre_hooks"]], "_modules (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._modules"]], "_modules (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._modules"]], "_modules (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._modules"]], "_n_costs (tomopt.volume.layer.absdetectorlayer attribute)": [[10, "tomopt.volume.layer.AbsDetectorLayer._n_costs"]], "_non_persistent_buffers_set (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._non_persistent_buffers_set"]], "_non_persistent_buffers_set (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._non_persistent_buffers_set"]], "_parameters (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._parameters"]], "_parameters (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._parameters"]], "_parameters (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._parameters"]], "_pdg_scatter() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer._pdg_scatter"]], "_pgeant_scatter() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer._pgeant_scatter"]], "_state_dict_hooks (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer._state_dict_hooks"]], "_state_dict_hooks (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel._state_dict_hooks"]], "abs2idx() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer.abs2idx"]], "assign_budget() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.assign_budget"]], "assign_budget() (tomopt.volume.layer.absdetectorlayer method)": [[10, "tomopt.volume.layer.AbsDetectorLayer.assign_budget"]], "assign_budget() (tomopt.volume.layer.paneldetectorlayer method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.assign_budget"]], "assign_budget() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.assign_budget"]], "assign_budget() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.assign_budget"]], "build_edges() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.build_edges"]], "centres (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.centres"]], "clamp_params() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.clamp_params"]], "clamp_params() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.clamp_params"]], "conform_detector() (tomopt.volume.layer.absdetectorlayer method)": [[10, "tomopt.volume.layer.AbsDetectorLayer.conform_detector"]], "conform_detector() (tomopt.volume.layer.paneldetectorlayer method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.conform_detector"]], "device (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.device"]], "draw() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.draw"]], "edges (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.edges"]], "forward() (tomopt.volume.layer.absdetectorlayer method)": [[10, "tomopt.volume.layer.AbsDetectorLayer.forward"]], "forward() (tomopt.volume.layer.abslayer method)": [[10, "tomopt.volume.layer.AbsLayer.forward"]], "forward() (tomopt.volume.layer.paneldetectorlayer method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.forward"]], "forward() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer.forward"]], "forward() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.forward"]], "forward() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.forward"]], "get_cost() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.get_cost"]], "get_cost() (tomopt.volume.layer.absdetectorlayer method)": [[10, "tomopt.volume.layer.AbsDetectorLayer.get_cost"]], "get_cost() (tomopt.volume.layer.paneldetectorlayer method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.get_cost"]], "get_cost() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_cost"]], "get_cost() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.get_cost"]], "get_detectors() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.get_detectors"]], "get_device() (tomopt.volume.layer.paneldetectorlayer static method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.get_device"]], "get_efficiency() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.get_efficiency"]], "get_efficiency() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_efficiency"]], "get_efficiency() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel.get_efficiency"]], "get_gauss() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_gauss"]], "get_hits() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.get_hits"]], "get_hits() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_hits"]], "get_lw_z_size() (tomopt.volume.layer.abslayer method)": [[10, "tomopt.volume.layer.AbsLayer.get_lw_z_size"]], "get_panel_zorder() (tomopt.volume.layer.paneldetectorlayer method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.get_panel_zorder"]], "get_passive_z_range() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.get_passive_z_range"]], "get_passives() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.get_passives"]], "get_rad_cube() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.get_rad_cube"]], "get_resolution() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.get_resolution"]], "get_resolution() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_resolution"]], "get_resolution() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel.get_resolution"]], "get_scaled_xy_span() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_scaled_xy_span"]], "get_xy_mask() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.get_xy_mask"]], "get_xy_mask() (tomopt.volume.panel.detectorpanel method)": [[10, "tomopt.volume.panel.DetectorPanel.get_xy_mask"]], "h (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.h"]], "load_rad_length() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer.load_rad_length"]], "load_rad_length() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.load_rad_length"]], "lookup_passive_xyz_coords() (tomopt.volume.volume.volume method)": [[10, "tomopt.volume.volume.Volume.lookup_passive_xyz_coords"]], "lw (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.lw"]], "mu_abs2idx() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer.mu_abs2idx"]], "passive_size (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.passive_size"]], "plot_map() (tomopt.volume.heatmap.detectorheatmap method)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.plot_map"]], "rad_length (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer.rad_length"]], "rad_length (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer.rad_length"]], "scatter_and_propagate() (tomopt.volume.layer.passivelayer method)": [[10, "tomopt.volume.layer.PassiveLayer.scatter_and_propagate"]], "sig_model() (tomopt.volume.panel.sigmoiddetectorpanel method)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel.sig_model"]], "smooth (tomopt.volume.panel.sigmoiddetectorpanel property)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel.smooth"]], "target (tomopt.volume.volume.volume property)": [[10, "tomopt.volume.volume.Volume.target"]], "tomopt.volume.heatmap": [[10, "module-tomopt.volume.heatmap"]], "tomopt.volume.layer": [[10, "module-tomopt.volume.layer"]], "tomopt.volume.panel": [[10, "module-tomopt.volume.panel"]], "tomopt.volume.scatter_model": [[10, "module-tomopt.volume.scatter_model"]], "tomopt.volume.volume": [[10, "module-tomopt.volume.volume"]], "training (tomopt.volume.heatmap.detectorheatmap attribute)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.training"]], "training (tomopt.volume.layer.absdetectorlayer attribute)": [[10, "tomopt.volume.layer.AbsDetectorLayer.training"]], "training (tomopt.volume.layer.abslayer attribute)": [[10, "tomopt.volume.layer.AbsLayer.training"]], "training (tomopt.volume.layer.paneldetectorlayer attribute)": [[10, "tomopt.volume.layer.PanelDetectorLayer.training"]], "training (tomopt.volume.layer.passivelayer attribute)": [[10, "tomopt.volume.layer.PassiveLayer.training"]], "training (tomopt.volume.panel.detectorpanel attribute)": [[10, "tomopt.volume.panel.DetectorPanel.training"]], "training (tomopt.volume.panel.sigmoiddetectorpanel attribute)": [[10, "tomopt.volume.panel.SigmoidDetectorPanel.training"]], "training (tomopt.volume.volume.volume attribute)": [[10, "tomopt.volume.volume.Volume.training"]], "x (tomopt.volume.heatmap.detectorheatmap property)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.x"]], "x (tomopt.volume.panel.detectorpanel property)": [[10, "tomopt.volume.panel.DetectorPanel.x"]], "y (tomopt.volume.heatmap.detectorheatmap property)": [[10, "tomopt.volume.heatmap.DetectorHeatMap.y"]], "y (tomopt.volume.panel.detectorpanel property)": [[10, "tomopt.volume.panel.DetectorPanel.y"]], "yield_zordered_panels() (tomopt.volume.layer.paneldetectorlayer method)": [[10, "tomopt.volume.layer.PanelDetectorLayer.yield_zordered_panels"]]}})